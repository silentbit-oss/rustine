warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: operator precedence might not be obvious
warning: `#[no_mangle]` has no effect on a foreign static
  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[inline]` is ignored on externally exported functions
warning: `#[no_mangle]` has no effect on a foreign static
  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign static
  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign static
  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign static
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign static
  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[inline]` is ignored on externally exported functions
warning: `#[inline]` is ignored on externally exported functions
warning: `#[no_mangle]` has no effect on a foreign static
  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign static
  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign static
  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign static
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign static
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign static
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign static
  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign static
  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign function
  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: `#[no_mangle]` has no effect on a foreign static
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
warning: the feature `ptr_offset_from` has been stable since 1.47.0 and no longer requires an attribute to enable
warning: unused variable: `n`
warning: unused variable: `n`
warning: unused variable: `name`
warning: unused variable: `opaque`
warning: unused variable: `opaque`
warning: unused variable: `b`
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: the following explicit lifetimes could be elided: 'a1
warning: this boolean expression can be simplified
warning: unneeded `return` statement
warning: the following explicit lifetimes could be elided: 'a1
warning: variables in the condition are not mutated in the loop body
warning: manual implementation of an assign operation
warning: manual implementation of an assign operation
warning: manual implementation of an assign operation
warning: unneeded `return` statement
warning: the following explicit lifetimes could be elided: 'a1
warning: this boolean expression can be simplified
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: the following explicit lifetimes could be elided: 'a1
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: manual implementation of an assign operation
warning: manual implementation of an assign operation
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: manual implementation of an assign operation
warning: manual implementation of an assign operation
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: unsafe function's docs are missing a `# Safety` section
warning: this boolean expression can be simplified
warning: the following explicit lifetimes could be elided: 'a
warning: the following explicit lifetimes could be elided: 'a
warning: `0 as *mut _` detected
warning: this `impl` can be derived
warning: `0 as *mut _` detected
warning: this `impl` can be derived
warning: this `impl` can be derived
warning: this `impl` can be derived
warning: this `impl` can be derived
warning: `0 as *mut _` detected
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: unsafe function's docs are missing a `# Safety` section
warning: unneeded `return` statement
warning: the following explicit lifetimes could be elided: 'a1
warning: deref which would be done by auto-deref
warning: deref which would be done by auto-deref
warning: deref which would be done by auto-deref
warning: deref which would be done by auto-deref
warning: deref which would be done by auto-deref
warning: deref which would be done by auto-deref
warning: deref which would be done by auto-deref
warning: deref which would be done by auto-deref
warning: the following explicit lifetimes could be elided: 'a1
warning: unneeded `return` statement
warning: deref which would be done by auto-deref
warning: the following explicit lifetimes could be elided: 'a1
warning: unneeded `return` statement
warning: deref which would be done by auto-deref
warning: the following explicit lifetimes could be elided: 'a1
warning: unneeded `return` statement
warning: deref which would be done by auto-deref
warning: deref which would be done by auto-deref
warning: the following explicit lifetimes could be elided: 'a1
warning: this boolean expression can be simplified
warning: unneeded `return` statement
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this `if` statement can be collapsed
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: `0 as *mut _` detected
warning: this `if` statement can be collapsed
warning: you seem to be trying to use `match` for an equality check. Consider using `if`
warning: this `if` statement can be collapsed
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: `0 as *mut _` detected
warning: `0 as *const _` detected
warning: unneeded `return` statement
warning: `0 as *mut _` detected
warning: unneeded `return` statement
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: the function `utime` doesn't need a mutable reference
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: this boolean expression can be simplified
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: this `if` statement can be collapsed
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: the following explicit lifetimes could be elided: 'a1
warning: variables in the condition are not mutated in the loop body
warning: unneeded `return` statement
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: this `if` has identical blocks
warning: this `if` has identical blocks
warning: this `else { if .. }` block can be collapsed
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: casting raw pointers to the same type and constness is unnecessary (`*mut *mut i8` -> `*mut *mut i8`)
warning: the following explicit lifetimes could be elided: 'a
warning: the following explicit lifetimes could be elided: 'a
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: variables in the condition are not mutated in the loop body
warning: `0 as *mut _` detected
warning: variables in the condition are not mutated in the loop body
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: casting raw pointers to the same type and constness is unnecessary (`*mut *mut i8` -> `*mut *mut i8`)
warning: the following explicit lifetimes could be elided: 'a
warning: the following explicit lifetimes could be elided: 'a
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: unneeded `return` statement
warning: unsafe function's docs are missing a `# Safety` section
warning: unneeded `return` statement
warning: unsafe function's docs are missing a `# Safety` section
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: unsafe function's docs are missing a `# Safety` section
warning: unneeded `return` statement
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: unneeded `return` statement
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: unneeded `return` statement
warning: variables in the condition are not mutated in the loop body
warning: this boolean expression can be simplified
warning: unneeded `return` statement
warning: variables in the condition are not mutated in the loop body
warning: unsafe function's docs are missing a `# Safety` section
warning: `0 as *mut _` detected
warning: unsafe function's docs are missing a `# Safety` section
warning: unneeded `return` statement
warning: `0 as *mut _` detected
warning: unsafe function's docs are missing a `# Safety` section
warning: unneeded `return` statement
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: unneeded `return` statement
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: unsafe function's docs are missing a `# Safety` section
warning: this boolean expression can be simplified
warning: unneeded `return` statement
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: unsafe function's docs are missing a `# Safety` section
warning: unneeded `return` statement
warning: variables in the condition are not mutated in the loop body
warning: unsafe function's docs are missing a `# Safety` section
warning: unneeded `return` statement
warning: `0 as *mut _` detected
warning: unneeded `return` statement
warning: unsafe function's docs are missing a `# Safety` section
warning: the following explicit lifetimes could be elided: 'a1
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: unneeded `return` statement
warning: `0 as *mut _` detected
warning: unsafe function's docs are missing a `# Safety` section
warning: the following explicit lifetimes could be elided: 'a1
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: variables in the condition are not mutated in the loop body
warning: unsafe function's docs are missing a `# Safety` section
warning: unsafe function's docs are missing a `# Safety` section
warning: variables in the condition are not mutated in the loop body
warning: unsafe function's docs are missing a `# Safety` section
warning: the following explicit lifetimes could be elided: 'a1
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: unneeded `return` statement
warning: `0 as *mut _` detected
warning: unsafe function's docs are missing a `# Safety` section
warning: the following explicit lifetimes could be elided: 'a1
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: unsafe function's docs are missing a `# Safety` section
warning: the following explicit lifetimes could be elided: 'a1
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: unneeded `return` statement
warning: variables in the condition are not mutated in the loop body
warning: unsafe function's docs are missing a `# Safety` section
warning: the following explicit lifetimes could be elided: 'a1, 'a2, 'a3
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: unsafe function's docs are missing a `# Safety` section
warning: the following explicit lifetimes could be elided: 'a1
warning: unneeded `return` statement
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: unsafe function's docs are missing a `# Safety` section
warning: the following explicit lifetimes could be elided: 'a1
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: `0 as *mut _` detected
warning: unsafe function's docs are missing a `# Safety` section
warning: unneeded `return` statement
warning: unsafe function's docs are missing a `# Safety` section
warning: unneeded `return` statement
warning: `0 as *const _` detected
warning: unsafe function's docs are missing a `# Safety` section
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: unsafe function's docs are missing a `# Safety` section
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: unsafe function's docs are missing a `# Safety` section
warning: `0 as *mut _` detected
warning: unsafe function's docs are missing a `# Safety` section
warning: the following explicit lifetimes could be elided: 'a1
warning: unneeded `return` statement
warning: the following explicit lifetimes could be elided: 'a
warning: the following explicit lifetimes could be elided: 'a
warning: unsafe function's docs are missing a `# Safety` section
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: unsafe function's docs are missing a `# Safety` section
warning: the following explicit lifetimes could be elided: 'a
warning: the following explicit lifetimes could be elided: 'a
warning: the following explicit lifetimes could be elided: 'a
warning: the following explicit lifetimes could be elided: 'a
warning: unsafe function's docs are missing a `# Safety` section
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: unneeded `return` statement
warning: you seem to be trying to use `match` for an equality check. Consider using `if`
warning: you seem to be trying to use `match` for an equality check. Consider using `if`
warning: you seem to be trying to use `match` for an equality check. Consider using `if`
warning: you seem to be trying to use `match` for an equality check. Consider using `if`
warning: you seem to be trying to use `match` for an equality check. Consider using `if`
warning: you seem to be trying to use `match` for an equality check. Consider using `if`
warning: you seem to be trying to use `match` for an equality check. Consider using `if`
warning: you seem to be trying to use `match` for an equality check. Consider using `if`
warning: this `if` has identical blocks
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: you seem to be trying to use `match` for an equality check. Consider using `if`
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: you seem to be trying to use `match` for an equality check. Consider using `if`
warning: manual implementation of an assign operation
warning: manual implementation of an assign operation
warning: manual implementation of an assign operation
warning: the following explicit lifetimes could be elided: 'a
warning: the following explicit lifetimes could be elided: 'a
warning: unsafe function's docs are missing a `# Safety` section
warning: this boolean expression can be simplified
warning: this boolean expression can be simplified
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: variables in the condition are not mutated in the loop body
warning: unsafe function's docs are missing a `# Safety` section
warning: unsafe function's docs are missing a `# Safety` section
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: the following explicit lifetimes could be elided: 'a
warning: the following explicit lifetimes could be elided: 'a
warning: the following explicit lifetimes could be elided: 'a
warning: the following explicit lifetimes could be elided: 'a
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
warning: creating a mutable reference to mutable static
