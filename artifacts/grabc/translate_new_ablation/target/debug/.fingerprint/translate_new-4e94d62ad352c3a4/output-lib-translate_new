{"$message_type":"diagnostic","message":"type `wchar_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":17367,"byte_end":17374,"line_start":469,"line_end":469,"column_start":10,"column_end":17,"is_primary":true,"text":[{"text":"pub type wchar_t = std::os::raw::c_uint;","highlight_start":10,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_camel_case_types)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":17367,"byte_end":17374,"line_start":469,"line_end":469,"column_start":10,"column_end":17,"is_primary":true,"text":[{"text":"pub type wchar_t = std::os::raw::c_uint;","highlight_start":10,"highlight_end":17}],"label":null,"suggested_replacement":"WcharT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `wchar_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:469:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m469\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type wchar_t = std::os::raw::c_uint;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `WcharT`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_camel_case_types)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous glob re-exports","code":{"code":"ambiguous_glob_reexports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":"the name `Window` in the type namespace is first re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":false,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":"but the name `Window` in the type namespace is also re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(ambiguous_glob_reexports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: ambiguous glob re-exports\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthe name `Window` in the type namespace is first re-exported here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mbut the name `Window` in the type namespace is also re-exported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(ambiguous_glob_reexports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous glob re-exports","code":{"code":"ambiguous_glob_reexports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":"the name `Cursor` in the type namespace is first re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":309,"byte_end":318,"line_start":24,"line_end":24,"column_start":9,"column_end":18,"is_primary":false,"text":[{"text":"pub use cursor::*;","highlight_start":9,"highlight_end":18}],"label":"but the name `Cursor` in the type namespace is also re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: ambiguous glob re-exports\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthe name `Cursor` in the type namespace is first re-exported here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use cursor::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mbut the name `Cursor` in the type namespace is also re-exported here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous glob re-exports","code":{"code":"ambiguous_glob_reexports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":"the name `Display` in the type namespace is first re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":346,"byte_end":356,"line_start":27,"line_end":27,"column_start":9,"column_end":19,"is_primary":false,"text":[{"text":"pub use display::*;","highlight_start":9,"highlight_end":19}],"label":"but the name `Display` in the type namespace is also re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: ambiguous glob re-exports\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthe name `Display` in the type namespace is first re-exported here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use display::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mbut the name `Display` in the type namespace is also re-exported here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous glob re-exports","code":{"code":"ambiguous_glob_reexports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":"the name `XEvent` in the type namespace is first re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":494,"byte_end":504,"line_start":39,"line_end":39,"column_start":9,"column_end":19,"is_primary":false,"text":[{"text":"pub use x_event::*;","highlight_start":9,"highlight_end":19}],"label":"but the name `XEvent` in the type namespace is also re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: ambiguous glob re-exports\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthe name `XEvent` in the type namespace is first re-exported here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use x_event::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mbut the name `XEvent` in the type namespace is also re-exported here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous glob re-exports","code":{"code":"ambiguous_glob_reexports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":"the name `Screen` in the type namespace is first re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":383,"byte_end":392,"line_start":30,"line_end":30,"column_start":9,"column_end":18,"is_primary":false,"text":[{"text":"pub use screen::*;","highlight_start":9,"highlight_end":18}],"label":"but the name `Screen` in the type namespace is also re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: ambiguous glob re-exports\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthe name `Screen` in the type namespace is first re-exported here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use screen::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mbut the name `Screen` in the type namespace is also re-exported here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous glob re-exports","code":{"code":"ambiguous_glob_reexports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":"the name `XSetWindowAttributes` in the type namespace is first re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":596,"byte_end":622,"line_start":45,"line_end":45,"column_start":9,"column_end":35,"is_primary":false,"text":[{"text":"pub use x_set_window_attributes::*;","highlight_start":9,"highlight_end":35}],"label":"but the name `XSetWindowAttributes` in the type namespace is also re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: ambiguous glob re-exports\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthe name `XSetWindowAttributes` in the type namespace is first re-exported here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use x_set_window_attributes::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mbut the name `XSetWindowAttributes` in the type namespace is also re-exported here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous glob re-exports","code":{"code":"ambiguous_glob_reexports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":"the name `XWindowAttributes` in the type namespace is first re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":224,"byte_end":246,"line_start":18,"line_end":18,"column_start":9,"column_end":31,"is_primary":false,"text":[{"text":"pub use x_window_attributes::*;","highlight_start":9,"highlight_end":31}],"label":"but the name `XWindowAttributes` in the type namespace is also re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: ambiguous glob re-exports\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthe name `XWindowAttributes` in the type namespace is first re-exported here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use x_window_attributes::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mbut the name `XWindowAttributes` in the type namespace is also re-exported here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous glob re-exports","code":{"code":"ambiguous_glob_reexports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":"the name `XColor` in the type namespace is first re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":456,"byte_end":466,"line_start":36,"line_end":36,"column_start":9,"column_end":19,"is_primary":false,"text":[{"text":"pub use x_color::*;","highlight_start":9,"highlight_end":19}],"label":"but the name `XColor` in the type namespace is also re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: ambiguous glob re-exports\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthe name `XColor` in the type namespace is first re-exported here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use x_color::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mbut the name `XColor` in the type namespace is also re-exported here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous glob re-exports","code":{"code":"ambiguous_glob_reexports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":"the name `XErrorEvent` in the type namespace is first re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":168,"byte_end":184,"line_start":15,"line_end":15,"column_start":9,"column_end":25,"is_primary":false,"text":[{"text":"pub use x_error_event::*;","highlight_start":9,"highlight_end":25}],"label":"but the name `XErrorEvent` in the type namespace is also re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: ambiguous glob re-exports\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthe name `XErrorEvent` in the type namespace is first re-exported here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use x_error_event::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mbut the name `XErrorEvent` in the type namespace is also re-exported here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/globals.rs","byte_start":1014,"byte_end":1020,"line_start":55,"line_end":55,"column_start":57,"column_end":63,"is_primary":true,"text":[{"text":"    pub static ref G_WINDOW_ID: std::sync::Mutex<Option<Window>> = std::sync::Mutex::new(Option::<Window>::None);","highlight_start":57,"highlight_end":63}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(ambiguous_glob_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/globals.rs:55:57\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub static ref G_WINDOW_ID: std::sync::Mutex<Option<Window>> = std::sync::Mutex::new(Option::<Window>::None);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(ambiguous_glob_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/globals.rs","byte_start":1056,"byte_end":1062,"line_start":55,"line_end":55,"column_start":99,"column_end":105,"is_primary":true,"text":[{"text":"    pub static ref G_WINDOW_ID: std::sync::Mutex<Option<Window>> = std::sync::Mutex::new(Option::<Window>::None);","highlight_start":99,"highlight_end":105}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/globals.rs:55:99\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub static ref G_WINDOW_ID: std::sync::Mutex<Option<Window>> = std::sync::Mutex::new(Option::<Window>::None);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Cursor` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/globals.rs","byte_start":1138,"byte_end":1144,"line_start":59,"line_end":59,"column_start":49,"column_end":55,"is_primary":true,"text":[{"text":"    pub static ref G_CROSS_CURSOR: Mutex<Option<Cursor>> = Mutex::new(Option::<Cursor>::None);","highlight_start":49,"highlight_end":55}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Cursor` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Cursor` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Cursor` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":309,"byte_end":318,"line_start":24,"line_end":24,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use cursor::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Cursor` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Cursor` is ambiguous\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/globals.rs:59:49\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub static ref G_CROSS_CURSOR: Mutex<Option<Cursor>> = Mutex::new(Option::<Cursor>::None);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Cursor` could refer to the type alias imported here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Cursor` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Cursor` could also refer to the struct imported here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:24:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use cursor::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Cursor` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Cursor` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/globals.rs","byte_start":1169,"byte_end":1175,"line_start":59,"line_end":59,"column_start":80,"column_end":86,"is_primary":true,"text":[{"text":"    pub static ref G_CROSS_CURSOR: Mutex<Option<Cursor>> = Mutex::new(Option::<Cursor>::None);","highlight_start":80,"highlight_end":86}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Cursor` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Cursor` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Cursor` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":309,"byte_end":318,"line_start":24,"line_end":24,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use cursor::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Cursor` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Cursor` is ambiguous\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/globals.rs:59:80\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub static ref G_CROSS_CURSOR: Mutex<Option<Cursor>> = Mutex::new(Option::<Cursor>::None);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Cursor` could refer to the type alias imported here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Cursor` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Cursor` could also refer to the struct imported here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:24:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use cursor::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Cursor` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Display` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":2529,"byte_end":2536,"line_start":82,"line_end":82,"column_start":26,"column_end":33,"is_primary":true,"text":[{"text":"pub fn MXError(display: &Display, error: &XErrorEvent) -> i32 {","highlight_start":26,"highlight_end":33}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Display` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Display` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":346,"byte_end":356,"line_start":27,"line_end":27,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use display::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Display` is ambiguous\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:82:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn MXError(display: &Display, error: &XErrorEvent) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could refer to the type alias imported here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could also refer to the struct imported here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:27:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use display::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`XErrorEvent` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":2546,"byte_end":2557,"line_start":82,"line_end":82,"column_start":43,"column_end":54,"is_primary":true,"text":[{"text":"pub fn MXError(display: &Display, error: &XErrorEvent) -> i32 {","highlight_start":43,"highlight_end":54}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`XErrorEvent` could refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `XErrorEvent` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`XErrorEvent` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":168,"byte_end":184,"line_start":15,"line_end":15,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"pub use x_error_event::*;","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `XErrorEvent` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `XErrorEvent` is ambiguous\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:82:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn MXError(display: &Display, error: &XErrorEvent) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `XErrorEvent` could refer to the struct imported here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `XErrorEvent` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `XErrorEvent` could also refer to the struct imported here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:15:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use x_error_event::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `XErrorEvent` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Display` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":4404,"byte_end":4411,"line_start":142,"line_end":142,"column_start":15,"column_end":22,"is_primary":true,"text":[{"text":"    display: &Display,","highlight_start":15,"highlight_end":22}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Display` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Display` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":346,"byte_end":356,"line_start":27,"line_end":27,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use display::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Display` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:142:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    display: &Display,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:27:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use display::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":4436,"byte_end":4442,"line_start":143,"line_end":143,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"    top_window: Option<Window>,","highlight_start":24,"highlight_end":30}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:143:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    top_window: Option<Window>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":4473,"byte_end":4479,"line_start":144,"line_end":144,"column_start":29,"column_end":35,"is_primary":true,"text":[{"text":"    window_to_check: Option<Window>,","highlight_start":29,"highlight_end":35}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:144:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    window_to_check: Option<Window>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":4528,"byte_end":4534,"line_start":147,"line_end":147,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":") -> Option<Window> {","highlight_start":13,"highlight_end":19}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:147:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m) -> Option<Window> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":4609,"byte_end":4615,"line_start":150,"line_end":150,"column_start":28,"column_end":34,"is_primary":true,"text":[{"text":"    let mut window: Option<Window> = Option::None;","highlight_start":28,"highlight_end":34}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:150:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut window: Option<Window> = Option::None;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Display` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":5039,"byte_end":5046,"line_start":162,"line_end":162,"column_start":51,"column_end":58,"is_primary":true,"text":[{"text":"    let display_ptr = display as *const _ as *mut Display;","highlight_start":51,"highlight_end":58}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Display` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Display` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":346,"byte_end":356,"line_start":27,"line_end":27,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use display::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Display` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:162:51\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let display_ptr = display as *const _ as *mut Display;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:27:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use display::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":5074,"byte_end":5080,"line_start":163,"line_end":163,"column_start":27,"column_end":33,"is_primary":true,"text":[{"text":"    let mut child_window: Window = Window::default();","highlight_start":27,"highlight_end":33}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:163:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut child_window: Window = Window::default();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":5083,"byte_end":5089,"line_start":163,"line_end":163,"column_start":36,"column_end":42,"is_primary":true,"text":[{"text":"    let mut child_window: Window = Window::default();","highlight_start":36,"highlight_end":42}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:163:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut child_window: Window = Window::default();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":5466,"byte_end":5472,"line_start":179,"line_end":179,"column_start":43,"column_end":49,"is_primary":true,"text":[{"text":"        if result == 0 || child_window == Window::default() {","highlight_start":43,"highlight_end":49}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:179:43\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if result == 0 || child_window == Window::default() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":5543,"byte_end":5549,"line_start":183,"line_end":183,"column_start":28,"column_end":34,"is_primary":true,"text":[{"text":"        if child_window != Window::default() {","highlight_start":28,"highlight_end":34}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:183:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if child_window != Window::default() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":5787,"byte_end":5793,"line_start":192,"line_end":192,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"    if child_window == Window::default() {","highlight_start":24,"highlight_end":30}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:192:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if child_window == Window::default() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Display` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":5931,"byte_end":5938,"line_start":200,"line_end":200,"column_start":35,"column_end":42,"is_primary":true,"text":[{"text":"pub fn upgrab_mouse(display: *mut Display) {","highlight_start":35,"highlight_end":42}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Display` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Display` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":346,"byte_end":356,"line_start":27,"line_end":27,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use display::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Display` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:200:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn upgrab_mouse(display: *mut Display) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:27:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use display::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Display` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":6156,"byte_end":6163,"line_start":208,"line_end":208,"column_start":39,"column_end":46,"is_primary":true,"text":[{"text":"pub fn get_cross_cursor(display: *mut Display) -> Cursor {","highlight_start":39,"highlight_end":46}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Display` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Display` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":346,"byte_end":356,"line_start":27,"line_end":27,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use display::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Display` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:208:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn get_cross_cursor(display: *mut Display) -> Cursor {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:27:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use display::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Cursor` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":6168,"byte_end":6174,"line_start":208,"line_end":208,"column_start":51,"column_end":57,"is_primary":true,"text":[{"text":"pub fn get_cross_cursor(display: *mut Display) -> Cursor {","highlight_start":51,"highlight_end":57}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Cursor` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Cursor` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Cursor` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":309,"byte_end":318,"line_start":24,"line_end":24,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use cursor::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Cursor` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Cursor` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:208:51\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn get_cross_cursor(display: *mut Display) -> Cursor {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Cursor` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Cursor` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Cursor` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:24:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use cursor::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Cursor` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Display` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":7146,"byte_end":7153,"line_start":231,"line_end":231,"column_start":29,"column_end":36,"is_primary":true,"text":[{"text":"pub fn grab_mouse(display: &Display, root_window: Window) -> Window {","highlight_start":29,"highlight_end":36}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Display` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Display` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":346,"byte_end":356,"line_start":27,"line_end":27,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use display::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Display` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:231:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn grab_mouse(display: &Display, root_window: Window) -> Window {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:27:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use display::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":7168,"byte_end":7174,"line_start":231,"line_end":231,"column_start":51,"column_end":57,"is_primary":true,"text":[{"text":"pub fn grab_mouse(display: &Display, root_window: Window) -> Window {","highlight_start":51,"highlight_end":57}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:231:51\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn grab_mouse(display: &Display, root_window: Window) -> Window {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":7179,"byte_end":7185,"line_start":231,"line_end":231,"column_start":62,"column_end":68,"is_primary":true,"text":[{"text":"pub fn grab_mouse(display: &Display, root_window: Window) -> Window {","highlight_start":62,"highlight_end":68}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:231:62\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn grab_mouse(display: &Display, root_window: Window) -> Window {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`XEvent` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":7394,"byte_end":7400,"line_start":237,"line_end":237,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"    let mut event = XEvent::default();","highlight_start":21,"highlight_end":27}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`XEvent` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `XEvent` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`XEvent` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":494,"byte_end":504,"line_start":39,"line_end":39,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use x_event::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `XEvent` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `XEvent` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:237:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m237\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut event = XEvent::default();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `XEvent` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `XEvent` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `XEvent` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:39:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use x_event::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `XEvent` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Display` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":8464,"byte_end":8471,"line_start":271,"line_end":271,"column_start":23,"column_end":30,"is_primary":true,"text":[{"text":"        display: *mut Display,","highlight_start":23,"highlight_end":30}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Display` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Display` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":346,"byte_end":356,"line_start":27,"line_end":27,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use display::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Display` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:271:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        display: *mut Display,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:27:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use display::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":8494,"byte_end":8500,"line_start":272,"line_end":272,"column_start":22,"column_end":28,"is_primary":true,"text":[{"text":"        grab_window: Window,","highlight_start":22,"highlight_end":28}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:272:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m272\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        grab_window: Window,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":8629,"byte_end":8635,"line_start":277,"line_end":277,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"        confine_to: Window,","highlight_start":21,"highlight_end":27}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:277:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m277\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        confine_to: Window,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Cursor` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":8653,"byte_end":8659,"line_start":278,"line_end":278,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"        cursor: Cursor,","highlight_start":17,"highlight_end":23}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Cursor` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Cursor` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Cursor` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":309,"byte_end":318,"line_start":24,"line_end":24,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use cursor::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Cursor` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Cursor` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:278:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m278\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        cursor: Cursor,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Cursor` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Cursor` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Cursor` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:24:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use cursor::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Cursor` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Display` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":8729,"byte_end":8736,"line_start":282,"line_end":282,"column_start":35,"column_end":42,"is_primary":true,"text":[{"text":"    fn XAllowEvents(display: *mut Display, event_mode: i32, time: u32);","highlight_start":35,"highlight_end":42}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Display` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Display` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":346,"byte_end":356,"line_start":27,"line_end":27,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use display::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Display` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:282:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m282\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn XAllowEvents(display: *mut Display, event_mode: i32, time: u32);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:27:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use display::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Display` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":8801,"byte_end":8808,"line_start":283,"line_end":283,"column_start":35,"column_end":42,"is_primary":true,"text":[{"text":"    fn XWindowEvent(display: *mut Display, window: Window, event_mask: i32, event_return: *mut XEvent);","highlight_start":35,"highlight_end":42}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Display` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Display` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":346,"byte_end":356,"line_start":27,"line_end":27,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use display::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Display` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:283:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m283\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn XWindowEvent(display: *mut Display, window: Window, event_mask: i32, event_return: *mut XEvent);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:27:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use display::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":8818,"byte_end":8824,"line_start":283,"line_end":283,"column_start":52,"column_end":58,"is_primary":true,"text":[{"text":"    fn XWindowEvent(display: *mut Display, window: Window, event_mask: i32, event_return: *mut XEvent);","highlight_start":52,"highlight_end":58}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:283:52\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m283\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn XWindowEvent(display: *mut Display, window: Window, event_mask: i32, event_return: *mut XEvent);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`XEvent` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":8862,"byte_end":8868,"line_start":283,"line_end":283,"column_start":96,"column_end":102,"is_primary":true,"text":[{"text":"    fn XWindowEvent(display: *mut Display, window: Window, event_mask: i32, event_return: *mut XEvent);","highlight_start":96,"highlight_end":102}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`XEvent` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `XEvent` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`XEvent` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":494,"byte_end":504,"line_start":39,"line_end":39,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use x_event::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `XEvent` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `XEvent` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:283:96\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m283\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn XWindowEvent(display: *mut Display, window: Window, event_mask: i32, event_return: *mut XEvent);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `XEvent` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `XEvent` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `XEvent` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:39:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use x_event::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `XEvent` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Display` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":9148,"byte_end":9155,"line_start":293,"line_end":293,"column_start":36,"column_end":43,"is_primary":true,"text":[{"text":"pub fn select_window(display: *mut Display, x: &mut i32, y: &mut i32) -> Option<Window> {","highlight_start":36,"highlight_end":43}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Display` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Display` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":346,"byte_end":356,"line_start":27,"line_end":27,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use display::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Display` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:293:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m293\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn select_window(display: *mut Display, x: &mut i32, y: &mut i32) -> Option<Window> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:27:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use display::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":9193,"byte_end":9199,"line_start":293,"line_end":293,"column_start":81,"column_end":87,"is_primary":true,"text":[{"text":"pub fn select_window(display: *mut Display, x: &mut i32, y: &mut i32) -> Option<Window> {","highlight_start":81,"highlight_end":87}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:293:81\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m293\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn select_window(display: *mut Display, x: &mut i32, y: &mut i32) -> Option<Window> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":9845,"byte_end":9851,"line_start":310,"line_end":310,"column_start":35,"column_end":41,"is_primary":true,"text":[{"text":"    let mut target_window: Option<Window> = Option::None;","highlight_start":35,"highlight_end":41}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:310:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut target_window: Option<Window> = Option::None;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Display` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":11772,"byte_end":11779,"line_start":373,"line_end":373,"column_start":19,"column_end":26,"is_primary":true,"text":[{"text":"    display: *mut Display,","highlight_start":19,"highlight_end":26}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Display` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Display` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":346,"byte_end":356,"line_start":27,"line_end":27,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use display::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Display` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:373:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m373\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    display: *mut Display,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:27:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use display::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`XColor` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":11797,"byte_end":11803,"line_start":374,"line_end":374,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"    color: *mut XColor,","highlight_start":17,"highlight_end":23}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`XColor` could refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `XColor` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`XColor` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":456,"byte_end":466,"line_start":36,"line_end":36,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use x_color::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `XColor` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `XColor` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:374:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m374\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    color: *mut XColor,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `XColor` could refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `XColor` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `XColor` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:36:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use x_color::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `XColor` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":11817,"byte_end":11823,"line_start":375,"line_end":375,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":") -> Option<Window> {","highlight_start":13,"highlight_end":19}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:375:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m375\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m) -> Option<Window> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Display` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":12005,"byte_end":12012,"line_start":380,"line_end":380,"column_start":27,"column_end":34,"is_primary":true,"text":[{"text":"            display: *mut Display,","highlight_start":27,"highlight_end":34}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Display` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Display` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":346,"byte_end":356,"line_start":27,"line_end":27,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use display::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Display` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:380:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m380\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            display: *mut Display,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:27:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use display::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":12034,"byte_end":12040,"line_start":381,"line_end":381,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"            window: Window,","highlight_start":21,"highlight_end":27}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:381:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m381\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            window: Window,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Display` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":12248,"byte_end":12255,"line_start":389,"line_end":389,"column_start":38,"column_end":45,"is_primary":true,"text":[{"text":"        fn XRootWindow(display: *mut Display, screen: i32) -> Window;","highlight_start":38,"highlight_end":45}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Display` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Display` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":346,"byte_end":356,"line_start":27,"line_end":27,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use display::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Display` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:389:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m389\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        fn XRootWindow(display: *mut Display, screen: i32) -> Window;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:27:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use display::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Window` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":12273,"byte_end":12279,"line_start":389,"line_end":389,"column_start":63,"column_end":69,"is_primary":true,"text":[{"text":"        fn XRootWindow(display: *mut Display, screen: i32) -> Window;","highlight_start":63,"highlight_end":69}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Window` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Window` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":273,"byte_end":282,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub use window::*;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Window` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Window` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:389:63\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m389\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        fn XRootWindow(display: *mut Display, screen: i32) -> Window;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Window` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:21:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use window::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Window` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`Display` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":12321,"byte_end":12328,"line_start":390,"line_end":390,"column_start":41,"column_end":48,"is_primary":true,"text":[{"text":"        fn XDefaultScreen(display: *mut Display) -> i32;","highlight_start":41,"highlight_end":48}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`Display` could refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`Display` could also refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":346,"byte_end":356,"line_start":27,"line_end":27,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use display::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `Display` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `Display` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:390:41\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m390\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        fn XDefaultScreen(display: *mut Display) -> i32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `Display` could also refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:27:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use display::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `Display` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/types.rs","byte_start":4,"byte_end":12,"line_start":1,"line_end":1,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/types.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/types.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous glob re-exports","code":{"code":"ambiguous_glob_reexports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":58,"byte_end":66,"line_start":6,"line_end":6,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"pub use types::*;","highlight_start":9,"highlight_end":17}],"label":"the name `Atom` in the type namespace is first re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":false,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":"but the name `Atom` in the type namespace is also re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: ambiguous glob re-exports\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:6:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mbut the name `Atom` in the type namespace is also re-exported here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use types::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthe name `Atom` in the type namespace is first re-exported here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `types::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":58,"byte_end":66,"line_start":6,"line_end":6,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"pub use types::*;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":50,"byte_end":68,"line_start":6,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use types::*;","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `types::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:6:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use types::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/g_c.rs","byte_start":4,"byte_end":12,"line_start":1,"line_end":1,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/g_c.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/g_c.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous glob re-exports","code":{"code":"ambiguous_glob_reexports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":90,"byte_end":96,"line_start":9,"line_end":9,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use g_c::*;","highlight_start":9,"highlight_end":15}],"label":"the name `GC` in the type namespace is first re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":false,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":"but the name `GC` in the type namespace is also re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: ambiguous glob re-exports\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:9:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mbut the name `GC` in the type namespace is also re-exported here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use g_c::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthe name `GC` in the type namespace is first re-exported here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/x_image.rs","byte_start":4,"byte_end":12,"line_start":1,"line_end":1,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/x_image.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x_image.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous glob re-exports","code":{"code":"ambiguous_glob_reexports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":124,"byte_end":134,"line_start":12,"line_end":12,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use x_image::*;","highlight_start":9,"highlight_end":19}],"label":"the name `XImage` in the type namespace is first re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":false,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":"but the name `XImage` in the type namespace is also re-exported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: ambiguous glob re-exports\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:12:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mbut the name `XImage` in the type namespace is also re-exported here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use x_image::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthe name `XImage` in the type namespace is first re-exported here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`XImage` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":11878,"byte_end":11884,"line_start":377,"line_end":377,"column_start":35,"column_end":41,"is_primary":true,"text":[{"text":"        fn XGetPixel(ximage: *mut XImage, x: i32, y: i32) -> u64;","highlight_start":35,"highlight_end":41}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`XImage` could refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":124,"byte_end":134,"line_start":12,"line_end":12,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use x_image::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `XImage` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`XImage` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `XImage` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `XImage` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:377:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m377\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        fn XGetPixel(ximage: *mut XImage, x: i32, y: i32) -> u64;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `XImage` could refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:12:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use x_image::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `XImage` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `XImage` could also refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `XImage` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`XImage` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":11948,"byte_end":11954,"line_start":378,"line_end":378,"column_start":39,"column_end":45,"is_primary":true,"text":[{"text":"        fn XDestroyImage(ximage: *mut XImage);","highlight_start":39,"highlight_end":45}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`XImage` could refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":124,"byte_end":134,"line_start":12,"line_end":12,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use x_image::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `XImage` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`XImage` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `XImage` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `XImage` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:378:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m378\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        fn XDestroyImage(ximage: *mut XImage);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `XImage` could refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:12:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use x_image::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `XImage` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `XImage` could also refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `XImage` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`XImage` is ambiguous","code":{"code":"ambiguous_glob_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":12203,"byte_end":12209,"line_start":388,"line_end":388,"column_start":19,"column_end":25,"is_primary":true,"text":[{"text":"        ) -> *mut XImage;","highlight_start":19,"highlight_end":25}],"label":"ambiguous name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ambiguous because of multiple glob imports of a name in the same module","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`XImage` could refer to the struct imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":124,"byte_end":134,"line_start":12,"line_end":12,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use x_image::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `XImage` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`XImage` could also refer to the type alias imported here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":22,"byte_end":28,"line_start":3,"line_end":3,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"pub use ffi::*;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `XImage` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `XImage` is ambiguous\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:388:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m388\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ) -> *mut XImage;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mambiguous name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #114095 <https://github.com/rust-lang/rust/issues/114095>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ambiguous because of multiple glob imports of a name in the same module\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `XImage` could refer to the struct imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:12:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use x_image::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `XImage` to disambiguate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `XImage` could also refer to the type alias imported here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use ffi::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding an explicit import of `XImage` to disambiguate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/x_error_event.rs","byte_start":4,"byte_end":12,"line_start":1,"line_end":1,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/x_error_event.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x_error_event.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/x_window_attributes.rs","byte_start":4,"byte_end":12,"line_start":1,"line_end":1,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/x_window_attributes.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x_window_attributes.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/window.rs","byte_start":4,"byte_end":12,"line_start":1,"line_end":1,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/window.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/window.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/cursor.rs","byte_start":4,"byte_end":12,"line_start":1,"line_end":1,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/cursor.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/cursor.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/display.rs","byte_start":4,"byte_end":12,"line_start":1,"line_end":1,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/display.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/display.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/screen.rs","byte_start":4,"byte_end":12,"line_start":1,"line_end":1,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/screen.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/screen.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/status.rs","byte_start":4,"byte_end":12,"line_start":1,"line_end":1,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/status.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/status.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/x_color.rs","byte_start":4,"byte_end":12,"line_start":1,"line_end":1,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/x_color.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x_color.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/x_event.rs","byte_start":4,"byte_end":12,"line_start":1,"line_end":1,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/x_event.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x_event.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/x_g_c_values.rs","byte_start":4,"byte_end":12,"line_start":1,"line_end":1,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/x_g_c_values.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x_g_c_values.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/x_set_window_attributes.rs","byte_start":4,"byte_end":12,"line_start":1,"line_end":1,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/x_set_window_attributes.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x_set_window_attributes.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/x_text_property.rs","byte_start":4,"byte_end":12,"line_start":1,"line_end":1,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/x_text_property.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x_text_property.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/x_size_hints.rs","byte_start":4,"byte_end":12,"line_start":1,"line_end":1,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/x_size_hints.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::*;","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x_size_hints.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::sync::atomic::Ordering`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/globals.rs","byte_start":173,"byte_end":200,"line_start":7,"line_end":7,"column_start":5,"column_end":32,"is_primary":true,"text":[{"text":"use std::sync::atomic::Ordering;","highlight_start":5,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/globals.rs","byte_start":169,"byte_end":202,"line_start":7,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::atomic::Ordering;","highlight_start":1,"highlight_end":33},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::sync::atomic::Ordering`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/globals.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::sync::atomic::Ordering;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `lazy_static::lazy_static`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":18,"byte_end":42,"line_start":2,"line_end":2,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"use lazy_static::lazy_static;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":765,"byte_end":784,"line_start":56,"line_end":56,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub mod test_grabc;","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":14,"byte_end":44,"line_start":2,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use lazy_static::lazy_static;","highlight_start":1,"highlight_end":30},{"text":"use libc::FILE;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `lazy_static::lazy_static`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:2:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse lazy_static::lazy_static;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:56:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod test_grabc;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `libc::FILE`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":48,"byte_end":58,"line_start":3,"line_end":3,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"use libc::FILE;","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":765,"byte_end":784,"line_start":56,"line_end":56,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub mod test_grabc;","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":44,"byte_end":60,"line_start":3,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use libc::FILE;","highlight_start":1,"highlight_end":16},{"text":"use libc::c_char;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `libc::FILE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:3:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse libc::FILE;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:56:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod test_grabc;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `libc::c_char`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":64,"byte_end":76,"line_start":4,"line_end":4,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"use libc::c_char;","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":765,"byte_end":784,"line_start":56,"line_end":56,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub mod test_grabc;","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":60,"byte_end":78,"line_start":4,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use libc::c_char;","highlight_start":1,"highlight_end":18},{"text":"use libc::fprintf;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `libc::c_char`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:4:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse libc::c_char;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:56:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod test_grabc;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `libc::fprintf`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":82,"byte_end":95,"line_start":5,"line_end":5,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use libc::fprintf;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":765,"byte_end":784,"line_start":56,"line_end":56,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub mod test_grabc;","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":78,"byte_end":97,"line_start":5,"line_end":6,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use libc::fprintf;","highlight_start":1,"highlight_end":19},{"text":"use std::ffi::CStr;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `libc::fprintf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:5:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse libc::fprintf;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:56:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod test_grabc;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::ffi::CStr`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":101,"byte_end":115,"line_start":6,"line_end":6,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"use std::ffi::CStr;","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":765,"byte_end":784,"line_start":56,"line_end":56,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub mod test_grabc;","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":97,"byte_end":117,"line_start":6,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::ffi::CStr;","highlight_start":1,"highlight_end":20},{"text":"use std::ffi::CString;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::ffi::CStr`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:6:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::ffi::CStr;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:56:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod test_grabc;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::ffi::CString`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":121,"byte_end":138,"line_start":7,"line_end":7,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"use std::ffi::CString;","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":765,"byte_end":784,"line_start":56,"line_end":56,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub mod test_grabc;","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":117,"byte_end":140,"line_start":7,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::ffi::CString;","highlight_start":1,"highlight_end":23},{"text":"use std::io::Write;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::ffi::CString`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:7:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::ffi::CString;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:56:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod test_grabc;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::os::raw::c_char as std_c_char`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":177,"byte_end":211,"line_start":10,"line_end":10,"column_start":5,"column_end":39,"is_primary":true,"text":[{"text":"use std::os::raw::c_char as std_c_char;","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":765,"byte_end":784,"line_start":56,"line_end":56,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub mod test_grabc;","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":173,"byte_end":213,"line_start":10,"line_end":11,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::os::raw::c_char as std_c_char;","highlight_start":1,"highlight_end":40},{"text":"use std::process;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::os::raw::c_char as std_c_char`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::os::raw::c_char as std_c_char;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:56:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod test_grabc;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::ptr`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":235,"byte_end":243,"line_start":12,"line_end":12,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::ptr;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":765,"byte_end":784,"line_start":56,"line_end":56,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub mod test_grabc;","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":231,"byte_end":245,"line_start":12,"line_end":13,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::ptr;","highlight_start":1,"highlight_end":14},{"text":"use std::sync::Mutex;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::ptr`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::ptr;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:56:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod test_grabc;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::sync::Mutex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":249,"byte_end":265,"line_start":13,"line_end":13,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use std::sync::Mutex;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":765,"byte_end":784,"line_start":56,"line_end":56,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub mod test_grabc;","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":245,"byte_end":267,"line_start":13,"line_end":14,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Mutex;","highlight_start":1,"highlight_end":22},{"text":"use std::sync::atomic::Ordering;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::sync::Mutex`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:13:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::sync::Mutex;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:56:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod test_grabc;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":2953,"byte_end":2974,"line_start":93,"line_end":93,"column_start":13,"column_end":34,"is_primary":true,"text":[{"text":"            X_GetWindowAttributes => {","highlight_start":13,"highlight_end":34}],"label":"no value can reach this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test_grabc.rs","byte_start":2796,"byte_end":2809,"line_start":88,"line_end":88,"column_start":13,"column_end":26,"is_primary":false,"text":[{"text":"            X_GetGeometry => {","highlight_start":13,"highlight_end":26}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unreachable_patterns)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:93:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            X_GetGeometry => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            X_GetWindowAttributes => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mno value can reach this\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unreachable_patterns)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":3116,"byte_end":3127,"line_start":98,"line_end":98,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"            X_QueryTree => {","highlight_start":13,"highlight_end":24}],"label":"no value can reach this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test_grabc.rs","byte_start":2796,"byte_end":2809,"line_start":88,"line_end":88,"column_start":13,"column_end":26,"is_primary":false,"text":[{"text":"            X_GetGeometry => {","highlight_start":13,"highlight_end":26}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:98:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            X_GetGeometry => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            X_QueryTree => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mno value can reach this\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":3269,"byte_end":3282,"line_start":103,"line_end":103,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"            X_QueryColors => {","highlight_start":13,"highlight_end":26}],"label":"no value can reach this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test_grabc.rs","byte_start":2796,"byte_end":2809,"line_start":88,"line_end":88,"column_start":13,"column_end":26,"is_primary":false,"text":[{"text":"            X_GetGeometry => {","highlight_start":13,"highlight_end":26}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:103:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            X_GetGeometry => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            X_QueryColors => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mno value can reach this\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":3423,"byte_end":3424,"line_start":108,"line_end":108,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            _ => {}","highlight_start":13,"highlight_end":14}],"label":"no value can reach this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test_grabc.rs","byte_start":2796,"byte_end":2809,"line_start":88,"line_end":88,"column_start":13,"column_end":26,"is_primary":false,"text":[{"text":"            X_GetGeometry => {","highlight_start":13,"highlight_end":26}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:108:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            X_GetGeometry => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            _ => {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mno value can reach this\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `X_GetGeometry`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":2796,"byte_end":2809,"line_start":88,"line_end":88,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"            X_GetGeometry => {","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":2796,"byte_end":2809,"line_start":88,"line_end":88,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"            X_GetGeometry => {","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":"_X_GetGeometry","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `X_GetGeometry`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:88:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            X_GetGeometry => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_X_GetGeometry`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `X_GetWindowAttributes`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":2953,"byte_end":2974,"line_start":93,"line_end":93,"column_start":13,"column_end":34,"is_primary":true,"text":[{"text":"            X_GetWindowAttributes => {","highlight_start":13,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":2953,"byte_end":2974,"line_start":93,"line_end":93,"column_start":13,"column_end":34,"is_primary":true,"text":[{"text":"            X_GetWindowAttributes => {","highlight_start":13,"highlight_end":34}],"label":null,"suggested_replacement":"_X_GetWindowAttributes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `X_GetWindowAttributes`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:93:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            X_GetWindowAttributes => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_X_GetWindowAttributes`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `X_QueryTree`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":3116,"byte_end":3127,"line_start":98,"line_end":98,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"            X_QueryTree => {","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":3116,"byte_end":3127,"line_start":98,"line_end":98,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"            X_QueryTree => {","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"_X_QueryTree","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `X_QueryTree`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:98:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            X_QueryTree => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_X_QueryTree`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `X_QueryColors`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":3269,"byte_end":3282,"line_start":103,"line_end":103,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"            X_QueryColors => {","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":3269,"byte_end":3282,"line_start":103,"line_end":103,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"            X_QueryColors => {","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":"_X_QueryColors","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `X_QueryColors`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:103:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            X_QueryColors => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_X_QueryColors`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `display`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":2519,"byte_end":2526,"line_start":82,"line_end":82,"column_start":16,"column_end":23,"is_primary":true,"text":[{"text":"pub fn MXError(display: &Display, error: &XErrorEvent) -> i32 {","highlight_start":16,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":2519,"byte_end":2526,"line_start":82,"line_end":82,"column_start":16,"column_end":23,"is_primary":true,"text":[{"text":"pub fn MXError(display: &Display, error: &XErrorEvent) -> i32 {","highlight_start":16,"highlight_end":23}],"label":null,"suggested_replacement":"_display","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `display`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:82:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn MXError(display: &Display, error: &XErrorEvent) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_display`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":3991,"byte_end":3998,"line_start":128,"line_end":128,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let mut err = ffi::XErrorEvent {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":3991,"byte_end":3995,"line_start":128,"line_end":128,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut err = ffi::XErrorEvent {","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:128:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut err = ffi::XErrorEvent {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"value assigned to `window` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":4594,"byte_end":4600,"line_start":150,"line_end":150,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"    let mut window: Option<Window> = Option::None;","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `window` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:150:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut window: Option<Window> = Option::None;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_assignments)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `id`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":6007,"byte_end":6009,"line_start":202,"line_end":202,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"    if let Some(id) = *window_id {","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":6007,"byte_end":6009,"line_start":202,"line_end":202,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"    if let Some(id) = *window_id {","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `id`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:202:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if let Some(id) = *window_id {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_id`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XlibSpecificationRelease` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":25,"byte_end":49,"line_start":3,"line_end":3,"column_start":11,"column_end":35,"is_primary":true,"text":[{"text":"pub const XlibSpecificationRelease: u32 = 6;","highlight_start":11,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_upper_case_globals)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":25,"byte_end":49,"line_start":3,"line_end":3,"column_start":11,"column_end":35,"is_primary":true,"text":[{"text":"pub const XlibSpecificationRelease: u32 = 6;","highlight_start":11,"highlight_end":35}],"label":null,"suggested_replacement":"XLIB_SPECIFICATION_RELEASE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XlibSpecificationRelease` should have an upper case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:3:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XlibSpecificationRelease: u32 = 6;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XLIB_SPECIFICATION_RELEASE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_upper_case_globals)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `None` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":142,"byte_end":146,"line_start":6,"line_end":6,"column_start":11,"column_end":15,"is_primary":true,"text":[{"text":"pub const None: u32 = 0;","highlight_start":11,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":142,"byte_end":146,"line_start":6,"line_end":6,"column_start":11,"column_end":15,"is_primary":true,"text":[{"text":"pub const None: u32 = 0;","highlight_start":11,"highlight_end":15}],"label":null,"suggested_replacement":"NONE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `None` should have an upper case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:6:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const None: u32 = 0;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NONE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ParentRelative` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":167,"byte_end":181,"line_start":7,"line_end":7,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const ParentRelative: u32 = 1;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":167,"byte_end":181,"line_start":7,"line_end":7,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const ParentRelative: u32 = 1;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"PARENT_RELATIVE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ParentRelative` should have an upper case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:7:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ParentRelative: u32 = 1;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `PARENT_RELATIVE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CopyFromParent` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":202,"byte_end":216,"line_start":8,"line_end":8,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const CopyFromParent: u32 = 0;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":202,"byte_end":216,"line_start":8,"line_end":8,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const CopyFromParent: u32 = 0;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"COPY_FROM_PARENT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CopyFromParent` should have an upper case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:8:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CopyFromParent: u32 = 0;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `COPY_FROM_PARENT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `PointerWindow` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":237,"byte_end":250,"line_start":9,"line_end":9,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const PointerWindow: u32 = 0;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":237,"byte_end":250,"line_start":9,"line_end":9,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const PointerWindow: u32 = 0;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"POINTER_WINDOW","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `PointerWindow` should have an upper case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:9:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const PointerWindow: u32 = 0;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `POINTER_WINDOW`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `InputFocus` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":271,"byte_end":281,"line_start":10,"line_end":10,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const InputFocus: u32 = 1;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":271,"byte_end":281,"line_start":10,"line_end":10,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const InputFocus: u32 = 1;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"INPUT_FOCUS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `InputFocus` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:10:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const InputFocus: u32 = 1;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `INPUT_FOCUS`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `PointerRoot` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":302,"byte_end":313,"line_start":11,"line_end":11,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const PointerRoot: u32 = 1;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":302,"byte_end":313,"line_start":11,"line_end":11,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const PointerRoot: u32 = 1;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"POINTER_ROOT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `PointerRoot` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:11:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const PointerRoot: u32 = 1;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `POINTER_ROOT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `AnyPropertyType` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":334,"byte_end":349,"line_start":12,"line_end":12,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const AnyPropertyType: u32 = 0;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":334,"byte_end":349,"line_start":12,"line_end":12,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const AnyPropertyType: u32 = 0;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"ANY_PROPERTY_TYPE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `AnyPropertyType` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:12:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AnyPropertyType: u32 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ANY_PROPERTY_TYPE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `AnyKey` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":370,"byte_end":376,"line_start":13,"line_end":13,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const AnyKey: u32 = 0;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":370,"byte_end":376,"line_start":13,"line_end":13,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const AnyKey: u32 = 0;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"ANY_KEY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `AnyKey` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:13:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AnyKey: u32 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ANY_KEY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `AnyButton` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":397,"byte_end":406,"line_start":14,"line_end":14,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const AnyButton: u32 = 0;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":397,"byte_end":406,"line_start":14,"line_end":14,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const AnyButton: u32 = 0;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"ANY_BUTTON","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `AnyButton` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:14:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AnyButton: u32 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ANY_BUTTON`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `AllTemporary` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":427,"byte_end":439,"line_start":15,"line_end":15,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const AllTemporary: u32 = 0;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":427,"byte_end":439,"line_start":15,"line_end":15,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const AllTemporary: u32 = 0;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"ALL_TEMPORARY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `AllTemporary` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:15:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AllTemporary: u32 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ALL_TEMPORARY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CurrentTime` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":460,"byte_end":471,"line_start":16,"line_end":16,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const CurrentTime: u32 = 0;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":460,"byte_end":471,"line_start":16,"line_end":16,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const CurrentTime: u32 = 0;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"CURRENT_TIME","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CurrentTime` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:16:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CurrentTime: u32 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CURRENT_TIME`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NoSymbol` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":492,"byte_end":500,"line_start":17,"line_end":17,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const NoSymbol: u32 = 0;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":492,"byte_end":500,"line_start":17,"line_end":17,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const NoSymbol: u32 = 0;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"NO_SYMBOL","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NoSymbol` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:17:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NoSymbol: u32 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NO_SYMBOL`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NoEventMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":521,"byte_end":532,"line_start":18,"line_end":18,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const NoEventMask: u32 = 0;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":521,"byte_end":532,"line_start":18,"line_end":18,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const NoEventMask: u32 = 0;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"NO_EVENT_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NoEventMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:18:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NoEventMask: u32 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NO_EVENT_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `KeyPressMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":553,"byte_end":565,"line_start":19,"line_end":19,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const KeyPressMask: u32 = 1;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":553,"byte_end":565,"line_start":19,"line_end":19,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const KeyPressMask: u32 = 1;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"KEY_PRESS_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `KeyPressMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:19:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const KeyPressMask: u32 = 1;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `KEY_PRESS_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `KeyReleaseMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":586,"byte_end":600,"line_start":20,"line_end":20,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const KeyReleaseMask: u32 = 2;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":586,"byte_end":600,"line_start":20,"line_end":20,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const KeyReleaseMask: u32 = 2;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"KEY_RELEASE_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `KeyReleaseMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:20:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const KeyReleaseMask: u32 = 2;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `KEY_RELEASE_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ButtonPressMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":621,"byte_end":636,"line_start":21,"line_end":21,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const ButtonPressMask: u32 = 4;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":621,"byte_end":636,"line_start":21,"line_end":21,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const ButtonPressMask: u32 = 4;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"BUTTON_PRESS_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ButtonPressMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:21:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ButtonPressMask: u32 = 4;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON_PRESS_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ButtonReleaseMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":657,"byte_end":674,"line_start":22,"line_end":22,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const ButtonReleaseMask: u32 = 8;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":657,"byte_end":674,"line_start":22,"line_end":22,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const ButtonReleaseMask: u32 = 8;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"BUTTON_RELEASE_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ButtonReleaseMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:22:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ButtonReleaseMask: u32 = 8;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON_RELEASE_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `EnterWindowMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":695,"byte_end":710,"line_start":23,"line_end":23,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const EnterWindowMask: u32 = 16;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":695,"byte_end":710,"line_start":23,"line_end":23,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const EnterWindowMask: u32 = 16;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"ENTER_WINDOW_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `EnterWindowMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:23:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const EnterWindowMask: u32 = 16;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ENTER_WINDOW_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `LeaveWindowMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":732,"byte_end":747,"line_start":24,"line_end":24,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const LeaveWindowMask: u32 = 32;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":732,"byte_end":747,"line_start":24,"line_end":24,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const LeaveWindowMask: u32 = 32;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"LEAVE_WINDOW_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `LeaveWindowMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:24:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const LeaveWindowMask: u32 = 32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `LEAVE_WINDOW_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `PointerMotionMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":769,"byte_end":786,"line_start":25,"line_end":25,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const PointerMotionMask: u32 = 64;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":769,"byte_end":786,"line_start":25,"line_end":25,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const PointerMotionMask: u32 = 64;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"POINTER_MOTION_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `PointerMotionMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:25:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const PointerMotionMask: u32 = 64;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `POINTER_MOTION_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `PointerMotionHintMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":808,"byte_end":829,"line_start":26,"line_end":26,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"pub const PointerMotionHintMask: u32 = 128;","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":808,"byte_end":829,"line_start":26,"line_end":26,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"pub const PointerMotionHintMask: u32 = 128;","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":"POINTER_MOTION_HINT_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `PointerMotionHintMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:26:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const PointerMotionHintMask: u32 = 128;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `POINTER_MOTION_HINT_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Button1MotionMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":852,"byte_end":869,"line_start":27,"line_end":27,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const Button1MotionMask: u32 = 256;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":852,"byte_end":869,"line_start":27,"line_end":27,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const Button1MotionMask: u32 = 256;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"BUTTON1_MOTION_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Button1MotionMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:27:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Button1MotionMask: u32 = 256;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON1_MOTION_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Button2MotionMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":892,"byte_end":909,"line_start":28,"line_end":28,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const Button2MotionMask: u32 = 512;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":892,"byte_end":909,"line_start":28,"line_end":28,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const Button2MotionMask: u32 = 512;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"BUTTON2_MOTION_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Button2MotionMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:28:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Button2MotionMask: u32 = 512;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON2_MOTION_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Button3MotionMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":932,"byte_end":949,"line_start":29,"line_end":29,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const Button3MotionMask: u32 = 1024;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":932,"byte_end":949,"line_start":29,"line_end":29,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const Button3MotionMask: u32 = 1024;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"BUTTON3_MOTION_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Button3MotionMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:29:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Button3MotionMask: u32 = 1024;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON3_MOTION_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Button4MotionMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":973,"byte_end":990,"line_start":30,"line_end":30,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const Button4MotionMask: u32 = 2048;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":973,"byte_end":990,"line_start":30,"line_end":30,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const Button4MotionMask: u32 = 2048;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"BUTTON4_MOTION_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Button4MotionMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:30:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Button4MotionMask: u32 = 2048;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON4_MOTION_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Button5MotionMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1014,"byte_end":1031,"line_start":31,"line_end":31,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const Button5MotionMask: u32 = 4096;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1014,"byte_end":1031,"line_start":31,"line_end":31,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const Button5MotionMask: u32 = 4096;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"BUTTON5_MOTION_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Button5MotionMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:31:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Button5MotionMask: u32 = 4096;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON5_MOTION_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ButtonMotionMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1055,"byte_end":1071,"line_start":32,"line_end":32,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const ButtonMotionMask: u32 = 8192;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1055,"byte_end":1071,"line_start":32,"line_end":32,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const ButtonMotionMask: u32 = 8192;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"BUTTON_MOTION_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ButtonMotionMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:32:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ButtonMotionMask: u32 = 8192;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON_MOTION_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `KeymapStateMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1095,"byte_end":1110,"line_start":33,"line_end":33,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const KeymapStateMask: u32 = 16384;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1095,"byte_end":1110,"line_start":33,"line_end":33,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const KeymapStateMask: u32 = 16384;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"KEYMAP_STATE_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `KeymapStateMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:33:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const KeymapStateMask: u32 = 16384;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `KEYMAP_STATE_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ExposureMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1135,"byte_end":1147,"line_start":34,"line_end":34,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const ExposureMask: u32 = 32768;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1135,"byte_end":1147,"line_start":34,"line_end":34,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const ExposureMask: u32 = 32768;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"EXPOSURE_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ExposureMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:34:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ExposureMask: u32 = 32768;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `EXPOSURE_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `VisibilityChangeMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1172,"byte_end":1192,"line_start":35,"line_end":35,"column_start":11,"column_end":31,"is_primary":true,"text":[{"text":"pub const VisibilityChangeMask: u32 = 65536;","highlight_start":11,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1172,"byte_end":1192,"line_start":35,"line_end":35,"column_start":11,"column_end":31,"is_primary":true,"text":[{"text":"pub const VisibilityChangeMask: u32 = 65536;","highlight_start":11,"highlight_end":31}],"label":null,"suggested_replacement":"VISIBILITY_CHANGE_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `VisibilityChangeMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:35:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const VisibilityChangeMask: u32 = 65536;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `VISIBILITY_CHANGE_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `StructureNotifyMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1217,"byte_end":1236,"line_start":36,"line_end":36,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const StructureNotifyMask: u32 = 131072;","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1217,"byte_end":1236,"line_start":36,"line_end":36,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const StructureNotifyMask: u32 = 131072;","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":"STRUCTURE_NOTIFY_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `StructureNotifyMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:36:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const StructureNotifyMask: u32 = 131072;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `STRUCTURE_NOTIFY_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ResizeRedirectMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1262,"byte_end":1280,"line_start":37,"line_end":37,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const ResizeRedirectMask: u32 = 262144;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1262,"byte_end":1280,"line_start":37,"line_end":37,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const ResizeRedirectMask: u32 = 262144;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"RESIZE_REDIRECT_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ResizeRedirectMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:37:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ResizeRedirectMask: u32 = 262144;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `RESIZE_REDIRECT_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `SubstructureNotifyMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1306,"byte_end":1328,"line_start":38,"line_end":38,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"pub const SubstructureNotifyMask: u32 = 524288;","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1306,"byte_end":1328,"line_start":38,"line_end":38,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"pub const SubstructureNotifyMask: u32 = 524288;","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":"SUBSTRUCTURE_NOTIFY_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `SubstructureNotifyMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:38:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const SubstructureNotifyMask: u32 = 524288;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SUBSTRUCTURE_NOTIFY_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `SubstructureRedirectMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1354,"byte_end":1378,"line_start":39,"line_end":39,"column_start":11,"column_end":35,"is_primary":true,"text":[{"text":"pub const SubstructureRedirectMask: u32 = 1048576;","highlight_start":11,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1354,"byte_end":1378,"line_start":39,"line_end":39,"column_start":11,"column_end":35,"is_primary":true,"text":[{"text":"pub const SubstructureRedirectMask: u32 = 1048576;","highlight_start":11,"highlight_end":35}],"label":null,"suggested_replacement":"SUBSTRUCTURE_REDIRECT_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `SubstructureRedirectMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:39:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const SubstructureRedirectMask: u32 = 1048576;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SUBSTRUCTURE_REDIRECT_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `FocusChangeMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1405,"byte_end":1420,"line_start":40,"line_end":40,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const FocusChangeMask: u32 = 2097152;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1405,"byte_end":1420,"line_start":40,"line_end":40,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const FocusChangeMask: u32 = 2097152;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"FOCUS_CHANGE_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `FocusChangeMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:40:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const FocusChangeMask: u32 = 2097152;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FOCUS_CHANGE_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `PropertyChangeMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1447,"byte_end":1465,"line_start":41,"line_end":41,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const PropertyChangeMask: u32 = 4194304;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1447,"byte_end":1465,"line_start":41,"line_end":41,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const PropertyChangeMask: u32 = 4194304;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"PROPERTY_CHANGE_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `PropertyChangeMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:41:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const PropertyChangeMask: u32 = 4194304;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `PROPERTY_CHANGE_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ColormapChangeMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1492,"byte_end":1510,"line_start":42,"line_end":42,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const ColormapChangeMask: u32 = 8388608;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1492,"byte_end":1510,"line_start":42,"line_end":42,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const ColormapChangeMask: u32 = 8388608;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"COLORMAP_CHANGE_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ColormapChangeMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:42:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ColormapChangeMask: u32 = 8388608;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `COLORMAP_CHANGE_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `OwnerGrabButtonMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1537,"byte_end":1556,"line_start":43,"line_end":43,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const OwnerGrabButtonMask: u32 = 16777216;","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1537,"byte_end":1556,"line_start":43,"line_end":43,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const OwnerGrabButtonMask: u32 = 16777216;","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":"OWNER_GRAB_BUTTON_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `OwnerGrabButtonMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:43:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const OwnerGrabButtonMask: u32 = 16777216;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `OWNER_GRAB_BUTTON_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `KeyPress` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1584,"byte_end":1592,"line_start":44,"line_end":44,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const KeyPress: u32 = 2;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1584,"byte_end":1592,"line_start":44,"line_end":44,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const KeyPress: u32 = 2;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"KEY_PRESS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `KeyPress` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:44:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const KeyPress: u32 = 2;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `KEY_PRESS`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `KeyRelease` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1613,"byte_end":1623,"line_start":45,"line_end":45,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const KeyRelease: u32 = 3;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1613,"byte_end":1623,"line_start":45,"line_end":45,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const KeyRelease: u32 = 3;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"KEY_RELEASE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `KeyRelease` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:45:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const KeyRelease: u32 = 3;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `KEY_RELEASE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ButtonPress` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1644,"byte_end":1655,"line_start":46,"line_end":46,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const ButtonPress: u32 = 4;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1644,"byte_end":1655,"line_start":46,"line_end":46,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const ButtonPress: u32 = 4;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"BUTTON_PRESS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ButtonPress` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:46:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ButtonPress: u32 = 4;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON_PRESS`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ButtonRelease` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1676,"byte_end":1689,"line_start":47,"line_end":47,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const ButtonRelease: u32 = 5;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1676,"byte_end":1689,"line_start":47,"line_end":47,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const ButtonRelease: u32 = 5;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"BUTTON_RELEASE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ButtonRelease` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:47:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ButtonRelease: u32 = 5;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON_RELEASE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `MotionNotify` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1710,"byte_end":1722,"line_start":48,"line_end":48,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const MotionNotify: u32 = 6;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1710,"byte_end":1722,"line_start":48,"line_end":48,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const MotionNotify: u32 = 6;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"MOTION_NOTIFY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `MotionNotify` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:48:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const MotionNotify: u32 = 6;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MOTION_NOTIFY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `EnterNotify` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1743,"byte_end":1754,"line_start":49,"line_end":49,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const EnterNotify: u32 = 7;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1743,"byte_end":1754,"line_start":49,"line_end":49,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const EnterNotify: u32 = 7;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"ENTER_NOTIFY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `EnterNotify` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:49:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const EnterNotify: u32 = 7;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ENTER_NOTIFY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `LeaveNotify` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1775,"byte_end":1786,"line_start":50,"line_end":50,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const LeaveNotify: u32 = 8;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1775,"byte_end":1786,"line_start":50,"line_end":50,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const LeaveNotify: u32 = 8;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"LEAVE_NOTIFY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `LeaveNotify` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:50:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const LeaveNotify: u32 = 8;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `LEAVE_NOTIFY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `FocusIn` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1807,"byte_end":1814,"line_start":51,"line_end":51,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const FocusIn: u32 = 9;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1807,"byte_end":1814,"line_start":51,"line_end":51,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const FocusIn: u32 = 9;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"FOCUS_IN","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `FocusIn` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:51:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const FocusIn: u32 = 9;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FOCUS_IN`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `FocusOut` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1835,"byte_end":1843,"line_start":52,"line_end":52,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const FocusOut: u32 = 10;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1835,"byte_end":1843,"line_start":52,"line_end":52,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const FocusOut: u32 = 10;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"FOCUS_OUT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `FocusOut` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:52:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const FocusOut: u32 = 10;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FOCUS_OUT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `KeymapNotify` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1865,"byte_end":1877,"line_start":53,"line_end":53,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const KeymapNotify: u32 = 11;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1865,"byte_end":1877,"line_start":53,"line_end":53,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const KeymapNotify: u32 = 11;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"KEYMAP_NOTIFY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `KeymapNotify` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:53:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const KeymapNotify: u32 = 11;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `KEYMAP_NOTIFY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Expose` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1899,"byte_end":1905,"line_start":54,"line_end":54,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const Expose: u32 = 12;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1899,"byte_end":1905,"line_start":54,"line_end":54,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const Expose: u32 = 12;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"EXPOSE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Expose` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:54:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Expose: u32 = 12;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `EXPOSE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GraphicsExpose` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1927,"byte_end":1941,"line_start":55,"line_end":55,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const GraphicsExpose: u32 = 13;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1927,"byte_end":1941,"line_start":55,"line_end":55,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const GraphicsExpose: u32 = 13;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"GRAPHICS_EXPOSE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GraphicsExpose` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:55:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GraphicsExpose: u32 = 13;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GRAPHICS_EXPOSE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NoExpose` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1963,"byte_end":1971,"line_start":56,"line_end":56,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const NoExpose: u32 = 14;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1963,"byte_end":1971,"line_start":56,"line_end":56,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const NoExpose: u32 = 14;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"NO_EXPOSE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NoExpose` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:56:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NoExpose: u32 = 14;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NO_EXPOSE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `VisibilityNotify` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1993,"byte_end":2009,"line_start":57,"line_end":57,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const VisibilityNotify: u32 = 15;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":1993,"byte_end":2009,"line_start":57,"line_end":57,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const VisibilityNotify: u32 = 15;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"VISIBILITY_NOTIFY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `VisibilityNotify` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:57:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const VisibilityNotify: u32 = 15;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `VISIBILITY_NOTIFY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CreateNotify` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2031,"byte_end":2043,"line_start":58,"line_end":58,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const CreateNotify: u32 = 16;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2031,"byte_end":2043,"line_start":58,"line_end":58,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const CreateNotify: u32 = 16;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"CREATE_NOTIFY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CreateNotify` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:58:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CreateNotify: u32 = 16;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CREATE_NOTIFY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `DestroyNotify` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2065,"byte_end":2078,"line_start":59,"line_end":59,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const DestroyNotify: u32 = 17;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2065,"byte_end":2078,"line_start":59,"line_end":59,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const DestroyNotify: u32 = 17;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"DESTROY_NOTIFY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `DestroyNotify` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:59:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const DestroyNotify: u32 = 17;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `DESTROY_NOTIFY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `UnmapNotify` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2100,"byte_end":2111,"line_start":60,"line_end":60,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const UnmapNotify: u32 = 18;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2100,"byte_end":2111,"line_start":60,"line_end":60,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const UnmapNotify: u32 = 18;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"UNMAP_NOTIFY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `UnmapNotify` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:60:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const UnmapNotify: u32 = 18;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `UNMAP_NOTIFY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `MapNotify` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2133,"byte_end":2142,"line_start":61,"line_end":61,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const MapNotify: u32 = 19;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2133,"byte_end":2142,"line_start":61,"line_end":61,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const MapNotify: u32 = 19;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"MAP_NOTIFY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `MapNotify` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:61:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const MapNotify: u32 = 19;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MAP_NOTIFY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `MapRequest` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2164,"byte_end":2174,"line_start":62,"line_end":62,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const MapRequest: u32 = 20;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2164,"byte_end":2174,"line_start":62,"line_end":62,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const MapRequest: u32 = 20;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"MAP_REQUEST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `MapRequest` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:62:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const MapRequest: u32 = 20;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MAP_REQUEST`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ReparentNotify` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2196,"byte_end":2210,"line_start":63,"line_end":63,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const ReparentNotify: u32 = 21;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2196,"byte_end":2210,"line_start":63,"line_end":63,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const ReparentNotify: u32 = 21;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"REPARENT_NOTIFY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ReparentNotify` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:63:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ReparentNotify: u32 = 21;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `REPARENT_NOTIFY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ConfigureNotify` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2232,"byte_end":2247,"line_start":64,"line_end":64,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const ConfigureNotify: u32 = 22;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2232,"byte_end":2247,"line_start":64,"line_end":64,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const ConfigureNotify: u32 = 22;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"CONFIGURE_NOTIFY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ConfigureNotify` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:64:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ConfigureNotify: u32 = 22;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CONFIGURE_NOTIFY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ConfigureRequest` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2269,"byte_end":2285,"line_start":65,"line_end":65,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const ConfigureRequest: u32 = 23;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2269,"byte_end":2285,"line_start":65,"line_end":65,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const ConfigureRequest: u32 = 23;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"CONFIGURE_REQUEST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ConfigureRequest` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:65:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ConfigureRequest: u32 = 23;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CONFIGURE_REQUEST`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GravityNotify` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2307,"byte_end":2320,"line_start":66,"line_end":66,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const GravityNotify: u32 = 24;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2307,"byte_end":2320,"line_start":66,"line_end":66,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const GravityNotify: u32 = 24;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"GRAVITY_NOTIFY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GravityNotify` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:66:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GravityNotify: u32 = 24;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GRAVITY_NOTIFY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ResizeRequest` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2342,"byte_end":2355,"line_start":67,"line_end":67,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const ResizeRequest: u32 = 25;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2342,"byte_end":2355,"line_start":67,"line_end":67,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const ResizeRequest: u32 = 25;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"RESIZE_REQUEST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ResizeRequest` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:67:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ResizeRequest: u32 = 25;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `RESIZE_REQUEST`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CirculateNotify` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2377,"byte_end":2392,"line_start":68,"line_end":68,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const CirculateNotify: u32 = 26;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2377,"byte_end":2392,"line_start":68,"line_end":68,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const CirculateNotify: u32 = 26;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"CIRCULATE_NOTIFY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CirculateNotify` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:68:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CirculateNotify: u32 = 26;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CIRCULATE_NOTIFY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CirculateRequest` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2414,"byte_end":2430,"line_start":69,"line_end":69,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const CirculateRequest: u32 = 27;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2414,"byte_end":2430,"line_start":69,"line_end":69,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const CirculateRequest: u32 = 27;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"CIRCULATE_REQUEST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CirculateRequest` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:69:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CirculateRequest: u32 = 27;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CIRCULATE_REQUEST`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `PropertyNotify` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2452,"byte_end":2466,"line_start":70,"line_end":70,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const PropertyNotify: u32 = 28;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2452,"byte_end":2466,"line_start":70,"line_end":70,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const PropertyNotify: u32 = 28;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"PROPERTY_NOTIFY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `PropertyNotify` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:70:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const PropertyNotify: u32 = 28;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `PROPERTY_NOTIFY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `SelectionClear` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2488,"byte_end":2502,"line_start":71,"line_end":71,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const SelectionClear: u32 = 29;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2488,"byte_end":2502,"line_start":71,"line_end":71,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const SelectionClear: u32 = 29;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"SELECTION_CLEAR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `SelectionClear` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:71:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const SelectionClear: u32 = 29;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SELECTION_CLEAR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `SelectionRequest` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2524,"byte_end":2540,"line_start":72,"line_end":72,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const SelectionRequest: u32 = 30;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2524,"byte_end":2540,"line_start":72,"line_end":72,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const SelectionRequest: u32 = 30;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"SELECTION_REQUEST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `SelectionRequest` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:72:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const SelectionRequest: u32 = 30;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SELECTION_REQUEST`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `SelectionNotify` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2562,"byte_end":2577,"line_start":73,"line_end":73,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const SelectionNotify: u32 = 31;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2562,"byte_end":2577,"line_start":73,"line_end":73,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const SelectionNotify: u32 = 31;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"SELECTION_NOTIFY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `SelectionNotify` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:73:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const SelectionNotify: u32 = 31;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SELECTION_NOTIFY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ColormapNotify` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2599,"byte_end":2613,"line_start":74,"line_end":74,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const ColormapNotify: u32 = 32;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2599,"byte_end":2613,"line_start":74,"line_end":74,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const ColormapNotify: u32 = 32;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"COLORMAP_NOTIFY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ColormapNotify` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:74:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ColormapNotify: u32 = 32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `COLORMAP_NOTIFY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ClientMessage` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2635,"byte_end":2648,"line_start":75,"line_end":75,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const ClientMessage: u32 = 33;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2635,"byte_end":2648,"line_start":75,"line_end":75,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const ClientMessage: u32 = 33;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"CLIENT_MESSAGE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ClientMessage` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:75:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ClientMessage: u32 = 33;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CLIENT_MESSAGE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `MappingNotify` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2670,"byte_end":2683,"line_start":76,"line_end":76,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const MappingNotify: u32 = 34;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2670,"byte_end":2683,"line_start":76,"line_end":76,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const MappingNotify: u32 = 34;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"MAPPING_NOTIFY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `MappingNotify` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:76:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const MappingNotify: u32 = 34;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MAPPING_NOTIFY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GenericEvent` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2705,"byte_end":2717,"line_start":77,"line_end":77,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const GenericEvent: u32 = 35;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2705,"byte_end":2717,"line_start":77,"line_end":77,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const GenericEvent: u32 = 35;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"GENERIC_EVENT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GenericEvent` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:77:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GenericEvent: u32 = 35;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GENERIC_EVENT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `LASTEvent` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2739,"byte_end":2748,"line_start":78,"line_end":78,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const LASTEvent: u32 = 36;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2739,"byte_end":2748,"line_start":78,"line_end":78,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const LASTEvent: u32 = 36;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"LASTEVENT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `LASTEvent` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:78:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const LASTEvent: u32 = 36;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `LASTEVENT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ShiftMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2770,"byte_end":2779,"line_start":79,"line_end":79,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const ShiftMask: u32 = 1;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2770,"byte_end":2779,"line_start":79,"line_end":79,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const ShiftMask: u32 = 1;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"SHIFT_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ShiftMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:79:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ShiftMask: u32 = 1;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SHIFT_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `LockMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2800,"byte_end":2808,"line_start":80,"line_end":80,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const LockMask: u32 = 2;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2800,"byte_end":2808,"line_start":80,"line_end":80,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const LockMask: u32 = 2;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"LOCK_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `LockMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:80:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const LockMask: u32 = 2;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `LOCK_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ControlMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2829,"byte_end":2840,"line_start":81,"line_end":81,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const ControlMask: u32 = 4;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2829,"byte_end":2840,"line_start":81,"line_end":81,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const ControlMask: u32 = 4;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"CONTROL_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ControlMask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:81:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ControlMask: u32 = 4;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CONTROL_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Mod1Mask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2861,"byte_end":2869,"line_start":82,"line_end":82,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const Mod1Mask: u32 = 8;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2861,"byte_end":2869,"line_start":82,"line_end":82,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const Mod1Mask: u32 = 8;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"MOD1_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Mod1Mask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:82:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Mod1Mask: u32 = 8;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MOD1_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Mod2Mask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2890,"byte_end":2898,"line_start":83,"line_end":83,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const Mod2Mask: u32 = 16;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2890,"byte_end":2898,"line_start":83,"line_end":83,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const Mod2Mask: u32 = 16;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"MOD2_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Mod2Mask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:83:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Mod2Mask: u32 = 16;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MOD2_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Mod3Mask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2920,"byte_end":2928,"line_start":84,"line_end":84,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const Mod3Mask: u32 = 32;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2920,"byte_end":2928,"line_start":84,"line_end":84,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const Mod3Mask: u32 = 32;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"MOD3_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Mod3Mask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:84:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Mod3Mask: u32 = 32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MOD3_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Mod4Mask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2950,"byte_end":2958,"line_start":85,"line_end":85,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const Mod4Mask: u32 = 64;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2950,"byte_end":2958,"line_start":85,"line_end":85,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const Mod4Mask: u32 = 64;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"MOD4_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Mod4Mask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:85:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Mod4Mask: u32 = 64;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MOD4_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Mod5Mask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2980,"byte_end":2988,"line_start":86,"line_end":86,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const Mod5Mask: u32 = 128;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":2980,"byte_end":2988,"line_start":86,"line_end":86,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const Mod5Mask: u32 = 128;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"MOD5_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Mod5Mask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:86:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Mod5Mask: u32 = 128;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MOD5_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ShiftMapIndex` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3011,"byte_end":3024,"line_start":87,"line_end":87,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const ShiftMapIndex: u32 = 0;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3011,"byte_end":3024,"line_start":87,"line_end":87,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const ShiftMapIndex: u32 = 0;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"SHIFT_MAP_INDEX","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ShiftMapIndex` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:87:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ShiftMapIndex: u32 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SHIFT_MAP_INDEX`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `LockMapIndex` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3045,"byte_end":3057,"line_start":88,"line_end":88,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const LockMapIndex: u32 = 1;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3045,"byte_end":3057,"line_start":88,"line_end":88,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const LockMapIndex: u32 = 1;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"LOCK_MAP_INDEX","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `LockMapIndex` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:88:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const LockMapIndex: u32 = 1;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `LOCK_MAP_INDEX`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ControlMapIndex` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3078,"byte_end":3093,"line_start":89,"line_end":89,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const ControlMapIndex: u32 = 2;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3078,"byte_end":3093,"line_start":89,"line_end":89,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const ControlMapIndex: u32 = 2;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"CONTROL_MAP_INDEX","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ControlMapIndex` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:89:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ControlMapIndex: u32 = 2;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CONTROL_MAP_INDEX`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Mod1MapIndex` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3114,"byte_end":3126,"line_start":90,"line_end":90,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const Mod1MapIndex: u32 = 3;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3114,"byte_end":3126,"line_start":90,"line_end":90,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const Mod1MapIndex: u32 = 3;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"MOD1_MAP_INDEX","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Mod1MapIndex` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:90:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Mod1MapIndex: u32 = 3;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MOD1_MAP_INDEX`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Mod2MapIndex` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3147,"byte_end":3159,"line_start":91,"line_end":91,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const Mod2MapIndex: u32 = 4;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3147,"byte_end":3159,"line_start":91,"line_end":91,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const Mod2MapIndex: u32 = 4;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"MOD2_MAP_INDEX","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Mod2MapIndex` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:91:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Mod2MapIndex: u32 = 4;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MOD2_MAP_INDEX`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Mod3MapIndex` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3180,"byte_end":3192,"line_start":92,"line_end":92,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const Mod3MapIndex: u32 = 5;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3180,"byte_end":3192,"line_start":92,"line_end":92,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const Mod3MapIndex: u32 = 5;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"MOD3_MAP_INDEX","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Mod3MapIndex` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:92:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Mod3MapIndex: u32 = 5;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MOD3_MAP_INDEX`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Mod4MapIndex` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3213,"byte_end":3225,"line_start":93,"line_end":93,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const Mod4MapIndex: u32 = 6;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3213,"byte_end":3225,"line_start":93,"line_end":93,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const Mod4MapIndex: u32 = 6;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"MOD4_MAP_INDEX","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Mod4MapIndex` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:93:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Mod4MapIndex: u32 = 6;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MOD4_MAP_INDEX`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Mod5MapIndex` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3246,"byte_end":3258,"line_start":94,"line_end":94,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const Mod5MapIndex: u32 = 7;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3246,"byte_end":3258,"line_start":94,"line_end":94,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const Mod5MapIndex: u32 = 7;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"MOD5_MAP_INDEX","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Mod5MapIndex` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:94:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Mod5MapIndex: u32 = 7;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MOD5_MAP_INDEX`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Button1Mask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3279,"byte_end":3290,"line_start":95,"line_end":95,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const Button1Mask: u32 = 256;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3279,"byte_end":3290,"line_start":95,"line_end":95,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const Button1Mask: u32 = 256;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"BUTTON1_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Button1Mask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:95:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Button1Mask: u32 = 256;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON1_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Button2Mask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3313,"byte_end":3324,"line_start":96,"line_end":96,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const Button2Mask: u32 = 512;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3313,"byte_end":3324,"line_start":96,"line_end":96,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const Button2Mask: u32 = 512;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"BUTTON2_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Button2Mask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:96:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Button2Mask: u32 = 512;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON2_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Button3Mask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3347,"byte_end":3358,"line_start":97,"line_end":97,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const Button3Mask: u32 = 1024;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3347,"byte_end":3358,"line_start":97,"line_end":97,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const Button3Mask: u32 = 1024;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"BUTTON3_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Button3Mask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:97:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Button3Mask: u32 = 1024;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON3_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Button4Mask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3382,"byte_end":3393,"line_start":98,"line_end":98,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const Button4Mask: u32 = 2048;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3382,"byte_end":3393,"line_start":98,"line_end":98,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const Button4Mask: u32 = 2048;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"BUTTON4_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Button4Mask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:98:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Button4Mask: u32 = 2048;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON4_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Button5Mask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3417,"byte_end":3428,"line_start":99,"line_end":99,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const Button5Mask: u32 = 4096;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3417,"byte_end":3428,"line_start":99,"line_end":99,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const Button5Mask: u32 = 4096;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"BUTTON5_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Button5Mask` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:99:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Button5Mask: u32 = 4096;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON5_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `AnyModifier` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3452,"byte_end":3463,"line_start":100,"line_end":100,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const AnyModifier: u32 = 32768;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3452,"byte_end":3463,"line_start":100,"line_end":100,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const AnyModifier: u32 = 32768;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"ANY_MODIFIER","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `AnyModifier` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:100:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AnyModifier: u32 = 32768;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ANY_MODIFIER`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Button1` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3488,"byte_end":3495,"line_start":101,"line_end":101,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const Button1: u32 = 1;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3488,"byte_end":3495,"line_start":101,"line_end":101,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const Button1: u32 = 1;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"BUTTON1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Button1` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:101:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Button1: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON1`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Button2` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3516,"byte_end":3523,"line_start":102,"line_end":102,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const Button2: u32 = 2;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3516,"byte_end":3523,"line_start":102,"line_end":102,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const Button2: u32 = 2;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"BUTTON2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Button2` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:102:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Button2: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON2`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Button3` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3544,"byte_end":3551,"line_start":103,"line_end":103,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const Button3: u32 = 3;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3544,"byte_end":3551,"line_start":103,"line_end":103,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const Button3: u32 = 3;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"BUTTON3","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Button3` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:103:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Button3: u32 = 3;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON3`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Button4` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3572,"byte_end":3579,"line_start":104,"line_end":104,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const Button4: u32 = 4;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3572,"byte_end":3579,"line_start":104,"line_end":104,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const Button4: u32 = 4;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"BUTTON4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Button4` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:104:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Button4: u32 = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON4`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Button5` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3600,"byte_end":3607,"line_start":105,"line_end":105,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const Button5: u32 = 5;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3600,"byte_end":3607,"line_start":105,"line_end":105,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const Button5: u32 = 5;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"BUTTON5","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Button5` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:105:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Button5: u32 = 5;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON5`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NotifyNormal` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3628,"byte_end":3640,"line_start":106,"line_end":106,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const NotifyNormal: u32 = 0;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3628,"byte_end":3640,"line_start":106,"line_end":106,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const NotifyNormal: u32 = 0;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"NOTIFY_NORMAL","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NotifyNormal` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:106:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NotifyNormal: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NOTIFY_NORMAL`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NotifyGrab` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3661,"byte_end":3671,"line_start":107,"line_end":107,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const NotifyGrab: u32 = 1;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3661,"byte_end":3671,"line_start":107,"line_end":107,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const NotifyGrab: u32 = 1;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"NOTIFY_GRAB","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NotifyGrab` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:107:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NotifyGrab: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NOTIFY_GRAB`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NotifyUngrab` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3692,"byte_end":3704,"line_start":108,"line_end":108,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const NotifyUngrab: u32 = 2;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3692,"byte_end":3704,"line_start":108,"line_end":108,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const NotifyUngrab: u32 = 2;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"NOTIFY_UNGRAB","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NotifyUngrab` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:108:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NotifyUngrab: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NOTIFY_UNGRAB`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NotifyWhileGrabbed` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3725,"byte_end":3743,"line_start":109,"line_end":109,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const NotifyWhileGrabbed: u32 = 3;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3725,"byte_end":3743,"line_start":109,"line_end":109,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const NotifyWhileGrabbed: u32 = 3;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"NOTIFY_WHILE_GRABBED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NotifyWhileGrabbed` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:109:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NotifyWhileGrabbed: u32 = 3;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NOTIFY_WHILE_GRABBED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NotifyHint` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3764,"byte_end":3774,"line_start":110,"line_end":110,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const NotifyHint: u32 = 1;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3764,"byte_end":3774,"line_start":110,"line_end":110,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const NotifyHint: u32 = 1;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"NOTIFY_HINT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NotifyHint` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:110:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NotifyHint: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NOTIFY_HINT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NotifyAncestor` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3795,"byte_end":3809,"line_start":111,"line_end":111,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const NotifyAncestor: u32 = 0;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3795,"byte_end":3809,"line_start":111,"line_end":111,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const NotifyAncestor: u32 = 0;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"NOTIFY_ANCESTOR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NotifyAncestor` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:111:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NotifyAncestor: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NOTIFY_ANCESTOR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NotifyVirtual` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3830,"byte_end":3843,"line_start":112,"line_end":112,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const NotifyVirtual: u32 = 1;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3830,"byte_end":3843,"line_start":112,"line_end":112,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const NotifyVirtual: u32 = 1;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"NOTIFY_VIRTUAL","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NotifyVirtual` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:112:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NotifyVirtual: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NOTIFY_VIRTUAL`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NotifyInferior` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3864,"byte_end":3878,"line_start":113,"line_end":113,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const NotifyInferior: u32 = 2;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3864,"byte_end":3878,"line_start":113,"line_end":113,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const NotifyInferior: u32 = 2;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"NOTIFY_INFERIOR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NotifyInferior` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:113:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NotifyInferior: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NOTIFY_INFERIOR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NotifyNonlinear` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3899,"byte_end":3914,"line_start":114,"line_end":114,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const NotifyNonlinear: u32 = 3;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3899,"byte_end":3914,"line_start":114,"line_end":114,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const NotifyNonlinear: u32 = 3;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"NOTIFY_NONLINEAR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NotifyNonlinear` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:114:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NotifyNonlinear: u32 = 3;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NOTIFY_NONLINEAR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NotifyNonlinearVirtual` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3935,"byte_end":3957,"line_start":115,"line_end":115,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"pub const NotifyNonlinearVirtual: u32 = 4;","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3935,"byte_end":3957,"line_start":115,"line_end":115,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"pub const NotifyNonlinearVirtual: u32 = 4;","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":"NOTIFY_NONLINEAR_VIRTUAL","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NotifyNonlinearVirtual` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:115:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NotifyNonlinearVirtual: u32 = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NOTIFY_NONLINEAR_VIRTUAL`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NotifyPointer` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3978,"byte_end":3991,"line_start":116,"line_end":116,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const NotifyPointer: u32 = 5;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":3978,"byte_end":3991,"line_start":116,"line_end":116,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const NotifyPointer: u32 = 5;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"NOTIFY_POINTER","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NotifyPointer` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:116:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NotifyPointer: u32 = 5;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NOTIFY_POINTER`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NotifyPointerRoot` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4012,"byte_end":4029,"line_start":117,"line_end":117,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const NotifyPointerRoot: u32 = 6;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4012,"byte_end":4029,"line_start":117,"line_end":117,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const NotifyPointerRoot: u32 = 6;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"NOTIFY_POINTER_ROOT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NotifyPointerRoot` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:117:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NotifyPointerRoot: u32 = 6;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NOTIFY_POINTER_ROOT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NotifyDetailNone` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4050,"byte_end":4066,"line_start":118,"line_end":118,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const NotifyDetailNone: u32 = 7;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4050,"byte_end":4066,"line_start":118,"line_end":118,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const NotifyDetailNone: u32 = 7;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"NOTIFY_DETAIL_NONE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NotifyDetailNone` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:118:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NotifyDetailNone: u32 = 7;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NOTIFY_DETAIL_NONE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `VisibilityUnobscured` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4087,"byte_end":4107,"line_start":119,"line_end":119,"column_start":11,"column_end":31,"is_primary":true,"text":[{"text":"pub const VisibilityUnobscured: u32 = 0;","highlight_start":11,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4087,"byte_end":4107,"line_start":119,"line_end":119,"column_start":11,"column_end":31,"is_primary":true,"text":[{"text":"pub const VisibilityUnobscured: u32 = 0;","highlight_start":11,"highlight_end":31}],"label":null,"suggested_replacement":"VISIBILITY_UNOBSCURED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `VisibilityUnobscured` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:119:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const VisibilityUnobscured: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `VISIBILITY_UNOBSCURED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `VisibilityPartiallyObscured` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4128,"byte_end":4155,"line_start":120,"line_end":120,"column_start":11,"column_end":38,"is_primary":true,"text":[{"text":"pub const VisibilityPartiallyObscured: u32 = 1;","highlight_start":11,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4128,"byte_end":4155,"line_start":120,"line_end":120,"column_start":11,"column_end":38,"is_primary":true,"text":[{"text":"pub const VisibilityPartiallyObscured: u32 = 1;","highlight_start":11,"highlight_end":38}],"label":null,"suggested_replacement":"VISIBILITY_PARTIALLY_OBSCURED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `VisibilityPartiallyObscured` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:120:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const VisibilityPartiallyObscured: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `VISIBILITY_PARTIALLY_OBSCURED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `VisibilityFullyObscured` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4176,"byte_end":4199,"line_start":121,"line_end":121,"column_start":11,"column_end":34,"is_primary":true,"text":[{"text":"pub const VisibilityFullyObscured: u32 = 2;","highlight_start":11,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4176,"byte_end":4199,"line_start":121,"line_end":121,"column_start":11,"column_end":34,"is_primary":true,"text":[{"text":"pub const VisibilityFullyObscured: u32 = 2;","highlight_start":11,"highlight_end":34}],"label":null,"suggested_replacement":"VISIBILITY_FULLY_OBSCURED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `VisibilityFullyObscured` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:121:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const VisibilityFullyObscured: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `VISIBILITY_FULLY_OBSCURED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `PlaceOnTop` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4220,"byte_end":4230,"line_start":122,"line_end":122,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const PlaceOnTop: u32 = 0;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4220,"byte_end":4230,"line_start":122,"line_end":122,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const PlaceOnTop: u32 = 0;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"PLACE_ON_TOP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `PlaceOnTop` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:122:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const PlaceOnTop: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `PLACE_ON_TOP`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `PlaceOnBottom` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4251,"byte_end":4264,"line_start":123,"line_end":123,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const PlaceOnBottom: u32 = 1;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4251,"byte_end":4264,"line_start":123,"line_end":123,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const PlaceOnBottom: u32 = 1;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"PLACE_ON_BOTTOM","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `PlaceOnBottom` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:123:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const PlaceOnBottom: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `PLACE_ON_BOTTOM`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `FamilyInternet` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4285,"byte_end":4299,"line_start":124,"line_end":124,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const FamilyInternet: u32 = 0;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4285,"byte_end":4299,"line_start":124,"line_end":124,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const FamilyInternet: u32 = 0;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"FAMILY_INTERNET","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `FamilyInternet` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:124:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const FamilyInternet: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FAMILY_INTERNET`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `FamilyDECnet` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4320,"byte_end":4332,"line_start":125,"line_end":125,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const FamilyDECnet: u32 = 1;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4320,"byte_end":4332,"line_start":125,"line_end":125,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const FamilyDECnet: u32 = 1;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"FAMILY_DECNET","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `FamilyDECnet` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:125:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const FamilyDECnet: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FAMILY_DECNET`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `FamilyChaos` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4353,"byte_end":4364,"line_start":126,"line_end":126,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const FamilyChaos: u32 = 2;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4353,"byte_end":4364,"line_start":126,"line_end":126,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const FamilyChaos: u32 = 2;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"FAMILY_CHAOS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `FamilyChaos` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:126:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const FamilyChaos: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FAMILY_CHAOS`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `FamilyInternet6` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4385,"byte_end":4400,"line_start":127,"line_end":127,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const FamilyInternet6: u32 = 6;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4385,"byte_end":4400,"line_start":127,"line_end":127,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const FamilyInternet6: u32 = 6;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"FAMILY_INTERNET6","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `FamilyInternet6` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:127:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const FamilyInternet6: u32 = 6;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FAMILY_INTERNET6`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `FamilyServerInterpreted` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4421,"byte_end":4444,"line_start":128,"line_end":128,"column_start":11,"column_end":34,"is_primary":true,"text":[{"text":"pub const FamilyServerInterpreted: u32 = 5;","highlight_start":11,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4421,"byte_end":4444,"line_start":128,"line_end":128,"column_start":11,"column_end":34,"is_primary":true,"text":[{"text":"pub const FamilyServerInterpreted: u32 = 5;","highlight_start":11,"highlight_end":34}],"label":null,"suggested_replacement":"FAMILY_SERVER_INTERPRETED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `FamilyServerInterpreted` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:128:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const FamilyServerInterpreted: u32 = 5;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FAMILY_SERVER_INTERPRETED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `PropertyNewValue` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4465,"byte_end":4481,"line_start":129,"line_end":129,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const PropertyNewValue: u32 = 0;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4465,"byte_end":4481,"line_start":129,"line_end":129,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const PropertyNewValue: u32 = 0;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"PROPERTY_NEW_VALUE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `PropertyNewValue` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:129:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const PropertyNewValue: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `PROPERTY_NEW_VALUE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `PropertyDelete` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4502,"byte_end":4516,"line_start":130,"line_end":130,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const PropertyDelete: u32 = 1;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4502,"byte_end":4516,"line_start":130,"line_end":130,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const PropertyDelete: u32 = 1;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"PROPERTY_DELETE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `PropertyDelete` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:130:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const PropertyDelete: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `PROPERTY_DELETE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ColormapUninstalled` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4537,"byte_end":4556,"line_start":131,"line_end":131,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const ColormapUninstalled: u32 = 0;","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4537,"byte_end":4556,"line_start":131,"line_end":131,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const ColormapUninstalled: u32 = 0;","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":"COLORMAP_UNINSTALLED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ColormapUninstalled` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:131:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ColormapUninstalled: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `COLORMAP_UNINSTALLED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ColormapInstalled` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4577,"byte_end":4594,"line_start":132,"line_end":132,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const ColormapInstalled: u32 = 1;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4577,"byte_end":4594,"line_start":132,"line_end":132,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const ColormapInstalled: u32 = 1;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"COLORMAP_INSTALLED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ColormapInstalled` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:132:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ColormapInstalled: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `COLORMAP_INSTALLED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GrabModeSync` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4615,"byte_end":4627,"line_start":133,"line_end":133,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const GrabModeSync: u32 = 0;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4615,"byte_end":4627,"line_start":133,"line_end":133,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const GrabModeSync: u32 = 0;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"GRAB_MODE_SYNC","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GrabModeSync` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:133:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GrabModeSync: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GRAB_MODE_SYNC`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GrabModeAsync` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4648,"byte_end":4661,"line_start":134,"line_end":134,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const GrabModeAsync: u32 = 1;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4648,"byte_end":4661,"line_start":134,"line_end":134,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const GrabModeAsync: u32 = 1;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"GRAB_MODE_ASYNC","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GrabModeAsync` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:134:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GrabModeAsync: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GRAB_MODE_ASYNC`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GrabSuccess` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4682,"byte_end":4693,"line_start":135,"line_end":135,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const GrabSuccess: u32 = 0;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4682,"byte_end":4693,"line_start":135,"line_end":135,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const GrabSuccess: u32 = 0;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"GRAB_SUCCESS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GrabSuccess` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:135:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GrabSuccess: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GRAB_SUCCESS`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `AlreadyGrabbed` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4714,"byte_end":4728,"line_start":136,"line_end":136,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const AlreadyGrabbed: u32 = 1;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4714,"byte_end":4728,"line_start":136,"line_end":136,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const AlreadyGrabbed: u32 = 1;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"ALREADY_GRABBED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `AlreadyGrabbed` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:136:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AlreadyGrabbed: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ALREADY_GRABBED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GrabInvalidTime` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4749,"byte_end":4764,"line_start":137,"line_end":137,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const GrabInvalidTime: u32 = 2;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4749,"byte_end":4764,"line_start":137,"line_end":137,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const GrabInvalidTime: u32 = 2;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"GRAB_INVALID_TIME","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GrabInvalidTime` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:137:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GrabInvalidTime: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GRAB_INVALID_TIME`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GrabNotViewable` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4785,"byte_end":4800,"line_start":138,"line_end":138,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const GrabNotViewable: u32 = 3;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4785,"byte_end":4800,"line_start":138,"line_end":138,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const GrabNotViewable: u32 = 3;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"GRAB_NOT_VIEWABLE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GrabNotViewable` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:138:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GrabNotViewable: u32 = 3;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GRAB_NOT_VIEWABLE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GrabFrozen` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4821,"byte_end":4831,"line_start":139,"line_end":139,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const GrabFrozen: u32 = 4;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4821,"byte_end":4831,"line_start":139,"line_end":139,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const GrabFrozen: u32 = 4;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"GRAB_FROZEN","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GrabFrozen` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:139:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m139\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GrabFrozen: u32 = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GRAB_FROZEN`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `AsyncPointer` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4852,"byte_end":4864,"line_start":140,"line_end":140,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const AsyncPointer: u32 = 0;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4852,"byte_end":4864,"line_start":140,"line_end":140,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const AsyncPointer: u32 = 0;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"ASYNC_POINTER","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `AsyncPointer` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:140:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AsyncPointer: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ASYNC_POINTER`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `SyncPointer` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4885,"byte_end":4896,"line_start":141,"line_end":141,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const SyncPointer: u32 = 1;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4885,"byte_end":4896,"line_start":141,"line_end":141,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const SyncPointer: u32 = 1;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"SYNC_POINTER","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `SyncPointer` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:141:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const SyncPointer: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SYNC_POINTER`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ReplayPointer` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4917,"byte_end":4930,"line_start":142,"line_end":142,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const ReplayPointer: u32 = 2;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4917,"byte_end":4930,"line_start":142,"line_end":142,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const ReplayPointer: u32 = 2;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"REPLAY_POINTER","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ReplayPointer` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:142:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ReplayPointer: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `REPLAY_POINTER`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `AsyncKeyboard` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4951,"byte_end":4964,"line_start":143,"line_end":143,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const AsyncKeyboard: u32 = 3;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4951,"byte_end":4964,"line_start":143,"line_end":143,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const AsyncKeyboard: u32 = 3;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"ASYNC_KEYBOARD","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `AsyncKeyboard` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:143:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AsyncKeyboard: u32 = 3;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ASYNC_KEYBOARD`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `SyncKeyboard` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4985,"byte_end":4997,"line_start":144,"line_end":144,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const SyncKeyboard: u32 = 4;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":4985,"byte_end":4997,"line_start":144,"line_end":144,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const SyncKeyboard: u32 = 4;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"SYNC_KEYBOARD","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `SyncKeyboard` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:144:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const SyncKeyboard: u32 = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SYNC_KEYBOARD`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ReplayKeyboard` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5018,"byte_end":5032,"line_start":145,"line_end":145,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const ReplayKeyboard: u32 = 5;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5018,"byte_end":5032,"line_start":145,"line_end":145,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const ReplayKeyboard: u32 = 5;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"REPLAY_KEYBOARD","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ReplayKeyboard` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:145:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ReplayKeyboard: u32 = 5;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `REPLAY_KEYBOARD`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `AsyncBoth` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5053,"byte_end":5062,"line_start":146,"line_end":146,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const AsyncBoth: u32 = 6;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5053,"byte_end":5062,"line_start":146,"line_end":146,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const AsyncBoth: u32 = 6;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"ASYNC_BOTH","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `AsyncBoth` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:146:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m146\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AsyncBoth: u32 = 6;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ASYNC_BOTH`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `SyncBoth` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5083,"byte_end":5091,"line_start":147,"line_end":147,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const SyncBoth: u32 = 7;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5083,"byte_end":5091,"line_start":147,"line_end":147,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const SyncBoth: u32 = 7;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"SYNC_BOTH","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `SyncBoth` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:147:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const SyncBoth: u32 = 7;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SYNC_BOTH`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `RevertToParent` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5112,"byte_end":5126,"line_start":148,"line_end":148,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const RevertToParent: u32 = 2;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5112,"byte_end":5126,"line_start":148,"line_end":148,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const RevertToParent: u32 = 2;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"REVERT_TO_PARENT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `RevertToParent` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:148:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RevertToParent: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `REVERT_TO_PARENT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Success` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5147,"byte_end":5154,"line_start":149,"line_end":149,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const Success: u32 = 0;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5147,"byte_end":5154,"line_start":149,"line_end":149,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const Success: u32 = 0;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"SUCCESS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Success` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:149:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Success: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SUCCESS`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `BadRequest` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5175,"byte_end":5185,"line_start":150,"line_end":150,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const BadRequest: u32 = 1;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5175,"byte_end":5185,"line_start":150,"line_end":150,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const BadRequest: u32 = 1;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"BAD_REQUEST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BadRequest` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:150:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const BadRequest: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BAD_REQUEST`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `BadValue` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5206,"byte_end":5214,"line_start":151,"line_end":151,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const BadValue: u32 = 2;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5206,"byte_end":5214,"line_start":151,"line_end":151,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const BadValue: u32 = 2;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"BAD_VALUE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BadValue` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:151:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const BadValue: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BAD_VALUE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `BadWindow` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5235,"byte_end":5244,"line_start":152,"line_end":152,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const BadWindow: u32 = 3;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5235,"byte_end":5244,"line_start":152,"line_end":152,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const BadWindow: u32 = 3;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"BAD_WINDOW","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BadWindow` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:152:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m152\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const BadWindow: u32 = 3;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BAD_WINDOW`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `BadPixmap` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5265,"byte_end":5274,"line_start":153,"line_end":153,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const BadPixmap: u32 = 4;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5265,"byte_end":5274,"line_start":153,"line_end":153,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const BadPixmap: u32 = 4;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"BAD_PIXMAP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BadPixmap` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:153:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const BadPixmap: u32 = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BAD_PIXMAP`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `BadAtom` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5295,"byte_end":5302,"line_start":154,"line_end":154,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const BadAtom: u32 = 5;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5295,"byte_end":5302,"line_start":154,"line_end":154,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const BadAtom: u32 = 5;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"BAD_ATOM","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BadAtom` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:154:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const BadAtom: u32 = 5;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BAD_ATOM`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `BadCursor` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5323,"byte_end":5332,"line_start":155,"line_end":155,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const BadCursor: u32 = 6;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5323,"byte_end":5332,"line_start":155,"line_end":155,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const BadCursor: u32 = 6;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"BAD_CURSOR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BadCursor` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:155:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const BadCursor: u32 = 6;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BAD_CURSOR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `BadFont` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5353,"byte_end":5360,"line_start":156,"line_end":156,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const BadFont: u32 = 7;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5353,"byte_end":5360,"line_start":156,"line_end":156,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const BadFont: u32 = 7;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"BAD_FONT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BadFont` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:156:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const BadFont: u32 = 7;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BAD_FONT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `BadMatch` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5381,"byte_end":5389,"line_start":157,"line_end":157,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const BadMatch: u32 = 8;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5381,"byte_end":5389,"line_start":157,"line_end":157,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const BadMatch: u32 = 8;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"BAD_MATCH","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BadMatch` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:157:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const BadMatch: u32 = 8;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BAD_MATCH`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `BadDrawable` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5410,"byte_end":5421,"line_start":158,"line_end":158,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const BadDrawable: u32 = 9;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5410,"byte_end":5421,"line_start":158,"line_end":158,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const BadDrawable: u32 = 9;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"BAD_DRAWABLE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BadDrawable` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:158:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const BadDrawable: u32 = 9;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BAD_DRAWABLE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `BadAccess` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5442,"byte_end":5451,"line_start":159,"line_end":159,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const BadAccess: u32 = 10;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5442,"byte_end":5451,"line_start":159,"line_end":159,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const BadAccess: u32 = 10;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"BAD_ACCESS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BadAccess` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:159:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const BadAccess: u32 = 10;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BAD_ACCESS`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `BadAlloc` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5473,"byte_end":5481,"line_start":160,"line_end":160,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const BadAlloc: u32 = 11;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5473,"byte_end":5481,"line_start":160,"line_end":160,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const BadAlloc: u32 = 11;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"BAD_ALLOC","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BadAlloc` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:160:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const BadAlloc: u32 = 11;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BAD_ALLOC`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `BadColor` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5503,"byte_end":5511,"line_start":161,"line_end":161,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const BadColor: u32 = 12;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5503,"byte_end":5511,"line_start":161,"line_end":161,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const BadColor: u32 = 12;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"BAD_COLOR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BadColor` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:161:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const BadColor: u32 = 12;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BAD_COLOR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `BadGC` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5533,"byte_end":5538,"line_start":162,"line_end":162,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const BadGC: u32 = 13;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5533,"byte_end":5538,"line_start":162,"line_end":162,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const BadGC: u32 = 13;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"BAD_GC","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BadGC` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:162:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const BadGC: u32 = 13;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BAD_GC`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `BadIDChoice` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5560,"byte_end":5571,"line_start":163,"line_end":163,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const BadIDChoice: u32 = 14;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5560,"byte_end":5571,"line_start":163,"line_end":163,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const BadIDChoice: u32 = 14;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"BAD_IDCHOICE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BadIDChoice` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:163:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const BadIDChoice: u32 = 14;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BAD_IDCHOICE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `BadName` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5593,"byte_end":5600,"line_start":164,"line_end":164,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const BadName: u32 = 15;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5593,"byte_end":5600,"line_start":164,"line_end":164,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const BadName: u32 = 15;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"BAD_NAME","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BadName` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:164:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const BadName: u32 = 15;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BAD_NAME`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `BadLength` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5622,"byte_end":5631,"line_start":165,"line_end":165,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const BadLength: u32 = 16;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5622,"byte_end":5631,"line_start":165,"line_end":165,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const BadLength: u32 = 16;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"BAD_LENGTH","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BadLength` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:165:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const BadLength: u32 = 16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BAD_LENGTH`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `BadImplementation` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5653,"byte_end":5670,"line_start":166,"line_end":166,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const BadImplementation: u32 = 17;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5653,"byte_end":5670,"line_start":166,"line_end":166,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const BadImplementation: u32 = 17;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"BAD_IMPLEMENTATION","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BadImplementation` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:166:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const BadImplementation: u32 = 17;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BAD_IMPLEMENTATION`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `FirstExtensionError` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5692,"byte_end":5711,"line_start":167,"line_end":167,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const FirstExtensionError: u32 = 128;","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5692,"byte_end":5711,"line_start":167,"line_end":167,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const FirstExtensionError: u32 = 128;","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":"FIRST_EXTENSION_ERROR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `FirstExtensionError` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:167:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m167\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const FirstExtensionError: u32 = 128;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FIRST_EXTENSION_ERROR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `LastExtensionError` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5734,"byte_end":5752,"line_start":168,"line_end":168,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const LastExtensionError: u32 = 255;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5734,"byte_end":5752,"line_start":168,"line_end":168,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const LastExtensionError: u32 = 255;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"LAST_EXTENSION_ERROR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `LastExtensionError` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:168:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m168\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const LastExtensionError: u32 = 255;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `LAST_EXTENSION_ERROR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `InputOutput` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5775,"byte_end":5786,"line_start":169,"line_end":169,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const InputOutput: u32 = 1;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5775,"byte_end":5786,"line_start":169,"line_end":169,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const InputOutput: u32 = 1;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"INPUT_OUTPUT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `InputOutput` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:169:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m169\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const InputOutput: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `INPUT_OUTPUT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `InputOnly` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5807,"byte_end":5816,"line_start":170,"line_end":170,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const InputOnly: u32 = 2;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5807,"byte_end":5816,"line_start":170,"line_end":170,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const InputOnly: u32 = 2;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"INPUT_ONLY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `InputOnly` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:170:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const InputOnly: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `INPUT_ONLY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWBackPixmap` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5837,"byte_end":5849,"line_start":171,"line_end":171,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const CWBackPixmap: u32 = 1;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5837,"byte_end":5849,"line_start":171,"line_end":171,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const CWBackPixmap: u32 = 1;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"CWBACK_PIXMAP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWBackPixmap` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:171:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWBackPixmap: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWBACK_PIXMAP`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWBackPixel` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5870,"byte_end":5881,"line_start":172,"line_end":172,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const CWBackPixel: u32 = 2;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5870,"byte_end":5881,"line_start":172,"line_end":172,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const CWBackPixel: u32 = 2;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"CWBACK_PIXEL","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWBackPixel` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:172:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWBackPixel: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWBACK_PIXEL`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWBorderPixmap` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5902,"byte_end":5916,"line_start":173,"line_end":173,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const CWBorderPixmap: u32 = 4;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5902,"byte_end":5916,"line_start":173,"line_end":173,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const CWBorderPixmap: u32 = 4;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"CWBORDER_PIXMAP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWBorderPixmap` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:173:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWBorderPixmap: u32 = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWBORDER_PIXMAP`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWBorderPixel` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5937,"byte_end":5950,"line_start":174,"line_end":174,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const CWBorderPixel: u32 = 8;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5937,"byte_end":5950,"line_start":174,"line_end":174,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const CWBorderPixel: u32 = 8;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"CWBORDER_PIXEL","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWBorderPixel` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:174:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWBorderPixel: u32 = 8;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWBORDER_PIXEL`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWBitGravity` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5971,"byte_end":5983,"line_start":175,"line_end":175,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const CWBitGravity: u32 = 16;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":5971,"byte_end":5983,"line_start":175,"line_end":175,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const CWBitGravity: u32 = 16;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"CWBIT_GRAVITY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWBitGravity` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:175:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWBitGravity: u32 = 16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWBIT_GRAVITY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWWinGravity` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6005,"byte_end":6017,"line_start":176,"line_end":176,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const CWWinGravity: u32 = 32;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6005,"byte_end":6017,"line_start":176,"line_end":176,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const CWWinGravity: u32 = 32;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"CWWIN_GRAVITY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWWinGravity` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:176:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWWinGravity: u32 = 32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWWIN_GRAVITY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWBackingStore` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6039,"byte_end":6053,"line_start":177,"line_end":177,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const CWBackingStore: u32 = 64;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6039,"byte_end":6053,"line_start":177,"line_end":177,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const CWBackingStore: u32 = 64;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"CWBACKING_STORE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWBackingStore` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:177:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWBackingStore: u32 = 64;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWBACKING_STORE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWBackingPlanes` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6075,"byte_end":6090,"line_start":178,"line_end":178,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const CWBackingPlanes: u32 = 128;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6075,"byte_end":6090,"line_start":178,"line_end":178,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const CWBackingPlanes: u32 = 128;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"CWBACKING_PLANES","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWBackingPlanes` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:178:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWBackingPlanes: u32 = 128;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWBACKING_PLANES`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWBackingPixel` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6113,"byte_end":6127,"line_start":179,"line_end":179,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const CWBackingPixel: u32 = 256;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6113,"byte_end":6127,"line_start":179,"line_end":179,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const CWBackingPixel: u32 = 256;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"CWBACKING_PIXEL","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWBackingPixel` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:179:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWBackingPixel: u32 = 256;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWBACKING_PIXEL`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWOverrideRedirect` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6150,"byte_end":6168,"line_start":180,"line_end":180,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const CWOverrideRedirect: u32 = 512;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6150,"byte_end":6168,"line_start":180,"line_end":180,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const CWOverrideRedirect: u32 = 512;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"CWOVERRIDE_REDIRECT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWOverrideRedirect` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:180:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m180\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWOverrideRedirect: u32 = 512;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWOVERRIDE_REDIRECT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWSaveUnder` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6191,"byte_end":6202,"line_start":181,"line_end":181,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const CWSaveUnder: u32 = 1024;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6191,"byte_end":6202,"line_start":181,"line_end":181,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const CWSaveUnder: u32 = 1024;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"CWSAVE_UNDER","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWSaveUnder` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:181:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWSaveUnder: u32 = 1024;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWSAVE_UNDER`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWEventMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6226,"byte_end":6237,"line_start":182,"line_end":182,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const CWEventMask: u32 = 2048;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6226,"byte_end":6237,"line_start":182,"line_end":182,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const CWEventMask: u32 = 2048;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"CWEVENT_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWEventMask` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:182:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWEventMask: u32 = 2048;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWEVENT_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWDontPropagate` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6261,"byte_end":6276,"line_start":183,"line_end":183,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const CWDontPropagate: u32 = 4096;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6261,"byte_end":6276,"line_start":183,"line_end":183,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const CWDontPropagate: u32 = 4096;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"CWDONT_PROPAGATE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWDontPropagate` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:183:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWDontPropagate: u32 = 4096;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWDONT_PROPAGATE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWColormap` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6300,"byte_end":6310,"line_start":184,"line_end":184,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const CWColormap: u32 = 8192;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6300,"byte_end":6310,"line_start":184,"line_end":184,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const CWColormap: u32 = 8192;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"CWCOLORMAP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWColormap` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:184:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWColormap: u32 = 8192;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWCOLORMAP`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWCursor` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6334,"byte_end":6342,"line_start":185,"line_end":185,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const CWCursor: u32 = 16384;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6334,"byte_end":6342,"line_start":185,"line_end":185,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const CWCursor: u32 = 16384;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"CWCURSOR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWCursor` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:185:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWCursor: u32 = 16384;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWCURSOR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWWidth` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6415,"byte_end":6422,"line_start":188,"line_end":188,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const CWWidth: u32 = 4;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6415,"byte_end":6422,"line_start":188,"line_end":188,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const CWWidth: u32 = 4;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"CWWIDTH","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWWidth` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:188:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWWidth: u32 = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWWIDTH`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWHeight` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6443,"byte_end":6451,"line_start":189,"line_end":189,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const CWHeight: u32 = 8;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6443,"byte_end":6451,"line_start":189,"line_end":189,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const CWHeight: u32 = 8;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"CWHEIGHT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWHeight` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:189:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWHeight: u32 = 8;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWHEIGHT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWBorderWidth` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6472,"byte_end":6485,"line_start":190,"line_end":190,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const CWBorderWidth: u32 = 16;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6472,"byte_end":6485,"line_start":190,"line_end":190,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const CWBorderWidth: u32 = 16;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"CWBORDER_WIDTH","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWBorderWidth` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:190:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWBorderWidth: u32 = 16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWBORDER_WIDTH`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWSibling` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6507,"byte_end":6516,"line_start":191,"line_end":191,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const CWSibling: u32 = 32;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6507,"byte_end":6516,"line_start":191,"line_end":191,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const CWSibling: u32 = 32;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"CWSIBLING","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWSibling` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:191:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWSibling: u32 = 32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWSIBLING`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CWStackMode` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6538,"byte_end":6549,"line_start":192,"line_end":192,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const CWStackMode: u32 = 64;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6538,"byte_end":6549,"line_start":192,"line_end":192,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const CWStackMode: u32 = 64;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"CWSTACK_MODE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CWStackMode` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:192:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CWStackMode: u32 = 64;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CWSTACK_MODE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ForgetGravity` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6571,"byte_end":6584,"line_start":193,"line_end":193,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const ForgetGravity: u32 = 0;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6571,"byte_end":6584,"line_start":193,"line_end":193,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const ForgetGravity: u32 = 0;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"FORGET_GRAVITY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ForgetGravity` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:193:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ForgetGravity: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FORGET_GRAVITY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NorthWestGravity` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6605,"byte_end":6621,"line_start":194,"line_end":194,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const NorthWestGravity: u32 = 1;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6605,"byte_end":6621,"line_start":194,"line_end":194,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const NorthWestGravity: u32 = 1;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"NORTH_WEST_GRAVITY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NorthWestGravity` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:194:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NorthWestGravity: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NORTH_WEST_GRAVITY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NorthGravity` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6642,"byte_end":6654,"line_start":195,"line_end":195,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const NorthGravity: u32 = 2;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6642,"byte_end":6654,"line_start":195,"line_end":195,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const NorthGravity: u32 = 2;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"NORTH_GRAVITY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NorthGravity` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:195:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NorthGravity: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NORTH_GRAVITY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NorthEastGravity` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6675,"byte_end":6691,"line_start":196,"line_end":196,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const NorthEastGravity: u32 = 3;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6675,"byte_end":6691,"line_start":196,"line_end":196,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const NorthEastGravity: u32 = 3;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"NORTH_EAST_GRAVITY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NorthEastGravity` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:196:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NorthEastGravity: u32 = 3;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NORTH_EAST_GRAVITY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `WestGravity` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6712,"byte_end":6723,"line_start":197,"line_end":197,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const WestGravity: u32 = 4;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6712,"byte_end":6723,"line_start":197,"line_end":197,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const WestGravity: u32 = 4;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"WEST_GRAVITY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `WestGravity` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:197:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const WestGravity: u32 = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `WEST_GRAVITY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CenterGravity` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6744,"byte_end":6757,"line_start":198,"line_end":198,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const CenterGravity: u32 = 5;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6744,"byte_end":6757,"line_start":198,"line_end":198,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const CenterGravity: u32 = 5;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"CENTER_GRAVITY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CenterGravity` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:198:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CenterGravity: u32 = 5;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CENTER_GRAVITY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `EastGravity` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6778,"byte_end":6789,"line_start":199,"line_end":199,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const EastGravity: u32 = 6;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6778,"byte_end":6789,"line_start":199,"line_end":199,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const EastGravity: u32 = 6;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"EAST_GRAVITY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `EastGravity` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:199:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m199\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const EastGravity: u32 = 6;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `EAST_GRAVITY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `SouthWestGravity` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6810,"byte_end":6826,"line_start":200,"line_end":200,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const SouthWestGravity: u32 = 7;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6810,"byte_end":6826,"line_start":200,"line_end":200,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const SouthWestGravity: u32 = 7;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"SOUTH_WEST_GRAVITY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `SouthWestGravity` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:200:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const SouthWestGravity: u32 = 7;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SOUTH_WEST_GRAVITY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `SouthGravity` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6847,"byte_end":6859,"line_start":201,"line_end":201,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const SouthGravity: u32 = 8;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6847,"byte_end":6859,"line_start":201,"line_end":201,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const SouthGravity: u32 = 8;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"SOUTH_GRAVITY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `SouthGravity` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:201:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m201\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const SouthGravity: u32 = 8;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SOUTH_GRAVITY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `SouthEastGravity` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6880,"byte_end":6896,"line_start":202,"line_end":202,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const SouthEastGravity: u32 = 9;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6880,"byte_end":6896,"line_start":202,"line_end":202,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const SouthEastGravity: u32 = 9;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"SOUTH_EAST_GRAVITY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `SouthEastGravity` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:202:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const SouthEastGravity: u32 = 9;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SOUTH_EAST_GRAVITY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `StaticGravity` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6917,"byte_end":6930,"line_start":203,"line_end":203,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const StaticGravity: u32 = 10;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6917,"byte_end":6930,"line_start":203,"line_end":203,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const StaticGravity: u32 = 10;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"STATIC_GRAVITY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `StaticGravity` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:203:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const StaticGravity: u32 = 10;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `STATIC_GRAVITY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `UnmapGravity` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6952,"byte_end":6964,"line_start":204,"line_end":204,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const UnmapGravity: u32 = 0;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6952,"byte_end":6964,"line_start":204,"line_end":204,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const UnmapGravity: u32 = 0;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"UNMAP_GRAVITY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `UnmapGravity` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:204:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m204\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const UnmapGravity: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `UNMAP_GRAVITY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NotUseful` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6985,"byte_end":6994,"line_start":205,"line_end":205,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const NotUseful: u32 = 0;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":6985,"byte_end":6994,"line_start":205,"line_end":205,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const NotUseful: u32 = 0;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"NOT_USEFUL","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NotUseful` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:205:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NotUseful: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NOT_USEFUL`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `WhenMapped` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7015,"byte_end":7025,"line_start":206,"line_end":206,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const WhenMapped: u32 = 1;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7015,"byte_end":7025,"line_start":206,"line_end":206,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const WhenMapped: u32 = 1;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"WHEN_MAPPED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `WhenMapped` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:206:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const WhenMapped: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `WHEN_MAPPED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Always` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7046,"byte_end":7052,"line_start":207,"line_end":207,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const Always: u32 = 2;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7046,"byte_end":7052,"line_start":207,"line_end":207,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const Always: u32 = 2;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"ALWAYS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Always` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:207:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Always: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ALWAYS`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `IsUnmapped` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7073,"byte_end":7083,"line_start":208,"line_end":208,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const IsUnmapped: u32 = 0;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7073,"byte_end":7083,"line_start":208,"line_end":208,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const IsUnmapped: u32 = 0;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"IS_UNMAPPED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `IsUnmapped` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:208:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const IsUnmapped: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `IS_UNMAPPED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `IsUnviewable` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7104,"byte_end":7116,"line_start":209,"line_end":209,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const IsUnviewable: u32 = 1;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7104,"byte_end":7116,"line_start":209,"line_end":209,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const IsUnviewable: u32 = 1;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"IS_UNVIEWABLE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `IsUnviewable` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:209:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m209\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const IsUnviewable: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `IS_UNVIEWABLE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `IsViewable` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7137,"byte_end":7147,"line_start":210,"line_end":210,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const IsViewable: u32 = 2;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7137,"byte_end":7147,"line_start":210,"line_end":210,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const IsViewable: u32 = 2;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"IS_VIEWABLE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `IsViewable` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:210:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const IsViewable: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `IS_VIEWABLE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `SetModeInsert` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7168,"byte_end":7181,"line_start":211,"line_end":211,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const SetModeInsert: u32 = 0;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7168,"byte_end":7181,"line_start":211,"line_end":211,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const SetModeInsert: u32 = 0;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"SET_MODE_INSERT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `SetModeInsert` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:211:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const SetModeInsert: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SET_MODE_INSERT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `SetModeDelete` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7202,"byte_end":7215,"line_start":212,"line_end":212,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const SetModeDelete: u32 = 1;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7202,"byte_end":7215,"line_start":212,"line_end":212,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const SetModeDelete: u32 = 1;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"SET_MODE_DELETE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `SetModeDelete` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:212:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const SetModeDelete: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SET_MODE_DELETE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `DestroyAll` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7236,"byte_end":7246,"line_start":213,"line_end":213,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const DestroyAll: u32 = 0;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7236,"byte_end":7246,"line_start":213,"line_end":213,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const DestroyAll: u32 = 0;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"DESTROY_ALL","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `DestroyAll` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:213:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const DestroyAll: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `DESTROY_ALL`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `RetainPermanent` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7267,"byte_end":7282,"line_start":214,"line_end":214,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const RetainPermanent: u32 = 1;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7267,"byte_end":7282,"line_start":214,"line_end":214,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const RetainPermanent: u32 = 1;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"RETAIN_PERMANENT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `RetainPermanent` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:214:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RetainPermanent: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `RETAIN_PERMANENT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `RetainTemporary` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7303,"byte_end":7318,"line_start":215,"line_end":215,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const RetainTemporary: u32 = 2;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7303,"byte_end":7318,"line_start":215,"line_end":215,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const RetainTemporary: u32 = 2;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"RETAIN_TEMPORARY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `RetainTemporary` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:215:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RetainTemporary: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `RETAIN_TEMPORARY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Above` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7339,"byte_end":7344,"line_start":216,"line_end":216,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const Above: u32 = 0;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7339,"byte_end":7344,"line_start":216,"line_end":216,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const Above: u32 = 0;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"ABOVE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Above` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:216:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Above: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ABOVE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Below` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7365,"byte_end":7370,"line_start":217,"line_end":217,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const Below: u32 = 1;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7365,"byte_end":7370,"line_start":217,"line_end":217,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const Below: u32 = 1;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"BELOW","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Below` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:217:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m217\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Below: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BELOW`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `TopIf` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7391,"byte_end":7396,"line_start":218,"line_end":218,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const TopIf: u32 = 2;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7391,"byte_end":7396,"line_start":218,"line_end":218,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const TopIf: u32 = 2;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"TOP_IF","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `TopIf` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:218:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const TopIf: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `TOP_IF`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `BottomIf` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7417,"byte_end":7425,"line_start":219,"line_end":219,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const BottomIf: u32 = 3;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7417,"byte_end":7425,"line_start":219,"line_end":219,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const BottomIf: u32 = 3;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"BOTTOM_IF","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BottomIf` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:219:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const BottomIf: u32 = 3;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BOTTOM_IF`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Opposite` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7446,"byte_end":7454,"line_start":220,"line_end":220,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const Opposite: u32 = 4;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7446,"byte_end":7454,"line_start":220,"line_end":220,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const Opposite: u32 = 4;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"OPPOSITE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Opposite` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:220:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Opposite: u32 = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `OPPOSITE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `RaiseLowest` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7475,"byte_end":7486,"line_start":221,"line_end":221,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const RaiseLowest: u32 = 0;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7475,"byte_end":7486,"line_start":221,"line_end":221,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const RaiseLowest: u32 = 0;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"RAISE_LOWEST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `RaiseLowest` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:221:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RaiseLowest: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `RAISE_LOWEST`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `LowerHighest` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7507,"byte_end":7519,"line_start":222,"line_end":222,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const LowerHighest: u32 = 1;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7507,"byte_end":7519,"line_start":222,"line_end":222,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const LowerHighest: u32 = 1;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"LOWER_HIGHEST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `LowerHighest` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:222:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const LowerHighest: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `LOWER_HIGHEST`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `PropModeReplace` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7540,"byte_end":7555,"line_start":223,"line_end":223,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const PropModeReplace: u32 = 0;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7540,"byte_end":7555,"line_start":223,"line_end":223,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const PropModeReplace: u32 = 0;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"PROP_MODE_REPLACE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `PropModeReplace` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:223:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const PropModeReplace: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `PROP_MODE_REPLACE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `PropModePrepend` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7576,"byte_end":7591,"line_start":224,"line_end":224,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const PropModePrepend: u32 = 1;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7576,"byte_end":7591,"line_start":224,"line_end":224,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const PropModePrepend: u32 = 1;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"PROP_MODE_PREPEND","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `PropModePrepend` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:224:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const PropModePrepend: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `PROP_MODE_PREPEND`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `PropModeAppend` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7612,"byte_end":7626,"line_start":225,"line_end":225,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const PropModeAppend: u32 = 2;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7612,"byte_end":7626,"line_start":225,"line_end":225,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const PropModeAppend: u32 = 2;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"PROP_MODE_APPEND","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `PropModeAppend` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:225:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const PropModeAppend: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `PROP_MODE_APPEND`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GXclear` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7647,"byte_end":7654,"line_start":226,"line_end":226,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const GXclear: u32 = 0;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7647,"byte_end":7654,"line_start":226,"line_end":226,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const GXclear: u32 = 0;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"GXCLEAR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GXclear` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:226:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m226\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GXclear: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GXCLEAR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GXand` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7675,"byte_end":7680,"line_start":227,"line_end":227,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const GXand: u32 = 1;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7675,"byte_end":7680,"line_start":227,"line_end":227,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const GXand: u32 = 1;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"GXAND","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GXand` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:227:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GXand: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GXAND`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GXandReverse` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7701,"byte_end":7713,"line_start":228,"line_end":228,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const GXandReverse: u32 = 2;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7701,"byte_end":7713,"line_start":228,"line_end":228,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const GXandReverse: u32 = 2;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"GXAND_REVERSE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GXandReverse` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:228:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GXandReverse: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GXAND_REVERSE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GXcopy` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7734,"byte_end":7740,"line_start":229,"line_end":229,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const GXcopy: u32 = 3;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7734,"byte_end":7740,"line_start":229,"line_end":229,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const GXcopy: u32 = 3;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"GXCOPY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GXcopy` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:229:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m229\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GXcopy: u32 = 3;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GXCOPY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GXandInverted` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7761,"byte_end":7774,"line_start":230,"line_end":230,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const GXandInverted: u32 = 4;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7761,"byte_end":7774,"line_start":230,"line_end":230,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const GXandInverted: u32 = 4;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"GXAND_INVERTED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GXandInverted` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:230:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GXandInverted: u32 = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GXAND_INVERTED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GXnoop` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7795,"byte_end":7801,"line_start":231,"line_end":231,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const GXnoop: u32 = 5;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7795,"byte_end":7801,"line_start":231,"line_end":231,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const GXnoop: u32 = 5;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"GXNOOP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GXnoop` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:231:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GXnoop: u32 = 5;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GXNOOP`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GXxor` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7822,"byte_end":7827,"line_start":232,"line_end":232,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const GXxor: u32 = 6;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7822,"byte_end":7827,"line_start":232,"line_end":232,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const GXxor: u32 = 6;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"GXXOR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GXxor` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:232:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m232\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GXxor: u32 = 6;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GXXOR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GXor` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7848,"byte_end":7852,"line_start":233,"line_end":233,"column_start":11,"column_end":15,"is_primary":true,"text":[{"text":"pub const GXor: u32 = 7;","highlight_start":11,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7848,"byte_end":7852,"line_start":233,"line_end":233,"column_start":11,"column_end":15,"is_primary":true,"text":[{"text":"pub const GXor: u32 = 7;","highlight_start":11,"highlight_end":15}],"label":null,"suggested_replacement":"GXOR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GXor` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:233:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m233\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GXor: u32 = 7;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GXOR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GXnor` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7873,"byte_end":7878,"line_start":234,"line_end":234,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const GXnor: u32 = 8;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7873,"byte_end":7878,"line_start":234,"line_end":234,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const GXnor: u32 = 8;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"GXNOR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GXnor` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:234:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GXnor: u32 = 8;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GXNOR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GXequiv` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7899,"byte_end":7906,"line_start":235,"line_end":235,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const GXequiv: u32 = 9;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7899,"byte_end":7906,"line_start":235,"line_end":235,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const GXequiv: u32 = 9;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"GXEQUIV","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GXequiv` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:235:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m235\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GXequiv: u32 = 9;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GXEQUIV`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GXinvert` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7927,"byte_end":7935,"line_start":236,"line_end":236,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const GXinvert: u32 = 10;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7927,"byte_end":7935,"line_start":236,"line_end":236,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const GXinvert: u32 = 10;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"GXINVERT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GXinvert` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:236:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m236\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GXinvert: u32 = 10;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GXINVERT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GXorReverse` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7957,"byte_end":7968,"line_start":237,"line_end":237,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const GXorReverse: u32 = 11;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7957,"byte_end":7968,"line_start":237,"line_end":237,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const GXorReverse: u32 = 11;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"GXOR_REVERSE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GXorReverse` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:237:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m237\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GXorReverse: u32 = 11;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GXOR_REVERSE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GXcopyInverted` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7990,"byte_end":8004,"line_start":238,"line_end":238,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const GXcopyInverted: u32 = 12;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":7990,"byte_end":8004,"line_start":238,"line_end":238,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const GXcopyInverted: u32 = 12;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"GXCOPY_INVERTED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GXcopyInverted` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:238:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GXcopyInverted: u32 = 12;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GXCOPY_INVERTED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GXorInverted` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8026,"byte_end":8038,"line_start":239,"line_end":239,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const GXorInverted: u32 = 13;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8026,"byte_end":8038,"line_start":239,"line_end":239,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const GXorInverted: u32 = 13;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"GXOR_INVERTED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GXorInverted` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:239:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GXorInverted: u32 = 13;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GXOR_INVERTED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GXnand` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8060,"byte_end":8066,"line_start":240,"line_end":240,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const GXnand: u32 = 14;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8060,"byte_end":8066,"line_start":240,"line_end":240,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const GXnand: u32 = 14;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"GXNAND","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GXnand` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:240:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GXnand: u32 = 14;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GXNAND`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GXset` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8088,"byte_end":8093,"line_start":241,"line_end":241,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const GXset: u32 = 15;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8088,"byte_end":8093,"line_start":241,"line_end":241,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const GXset: u32 = 15;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"GXSET","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GXset` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:241:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GXset: u32 = 15;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GXSET`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `LineSolid` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8115,"byte_end":8124,"line_start":242,"line_end":242,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const LineSolid: u32 = 0;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8115,"byte_end":8124,"line_start":242,"line_end":242,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const LineSolid: u32 = 0;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"LINE_SOLID","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `LineSolid` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:242:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m242\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const LineSolid: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `LINE_SOLID`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `LineOnOffDash` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8145,"byte_end":8158,"line_start":243,"line_end":243,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const LineOnOffDash: u32 = 1;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8145,"byte_end":8158,"line_start":243,"line_end":243,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const LineOnOffDash: u32 = 1;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"LINE_ON_OFF_DASH","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `LineOnOffDash` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:243:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const LineOnOffDash: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `LINE_ON_OFF_DASH`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `LineDoubleDash` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8179,"byte_end":8193,"line_start":244,"line_end":244,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const LineDoubleDash: u32 = 2;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8179,"byte_end":8193,"line_start":244,"line_end":244,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const LineDoubleDash: u32 = 2;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"LINE_DOUBLE_DASH","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `LineDoubleDash` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:244:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m244\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const LineDoubleDash: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `LINE_DOUBLE_DASH`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CapNotLast` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8214,"byte_end":8224,"line_start":245,"line_end":245,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const CapNotLast: u32 = 0;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8214,"byte_end":8224,"line_start":245,"line_end":245,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const CapNotLast: u32 = 0;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"CAP_NOT_LAST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CapNotLast` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:245:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CapNotLast: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CAP_NOT_LAST`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CapButt` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8245,"byte_end":8252,"line_start":246,"line_end":246,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const CapButt: u32 = 1;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8245,"byte_end":8252,"line_start":246,"line_end":246,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const CapButt: u32 = 1;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"CAP_BUTT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CapButt` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:246:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CapButt: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CAP_BUTT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CapRound` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8273,"byte_end":8281,"line_start":247,"line_end":247,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const CapRound: u32 = 2;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8273,"byte_end":8281,"line_start":247,"line_end":247,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const CapRound: u32 = 2;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"CAP_ROUND","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CapRound` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:247:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m247\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CapRound: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CAP_ROUND`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CapProjecting` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8302,"byte_end":8315,"line_start":248,"line_end":248,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const CapProjecting: u32 = 3;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8302,"byte_end":8315,"line_start":248,"line_end":248,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const CapProjecting: u32 = 3;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"CAP_PROJECTING","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CapProjecting` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:248:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CapProjecting: u32 = 3;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CAP_PROJECTING`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `JoinMiter` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8336,"byte_end":8345,"line_start":249,"line_end":249,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const JoinMiter: u32 = 0;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8336,"byte_end":8345,"line_start":249,"line_end":249,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const JoinMiter: u32 = 0;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"JOIN_MITER","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `JoinMiter` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:249:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m249\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const JoinMiter: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `JOIN_MITER`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `JoinRound` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8366,"byte_end":8375,"line_start":250,"line_end":250,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const JoinRound: u32 = 1;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8366,"byte_end":8375,"line_start":250,"line_end":250,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const JoinRound: u32 = 1;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"JOIN_ROUND","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `JoinRound` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:250:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m250\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const JoinRound: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `JOIN_ROUND`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `JoinBevel` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8396,"byte_end":8405,"line_start":251,"line_end":251,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const JoinBevel: u32 = 2;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8396,"byte_end":8405,"line_start":251,"line_end":251,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const JoinBevel: u32 = 2;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"JOIN_BEVEL","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `JoinBevel` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:251:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m251\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const JoinBevel: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `JOIN_BEVEL`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `FillSolid` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8426,"byte_end":8435,"line_start":252,"line_end":252,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const FillSolid: u32 = 0;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8426,"byte_end":8435,"line_start":252,"line_end":252,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const FillSolid: u32 = 0;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"FILL_SOLID","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `FillSolid` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:252:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const FillSolid: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FILL_SOLID`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `FillTiled` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8456,"byte_end":8465,"line_start":253,"line_end":253,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const FillTiled: u32 = 1;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8456,"byte_end":8465,"line_start":253,"line_end":253,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const FillTiled: u32 = 1;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"FILL_TILED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `FillTiled` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:253:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m253\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const FillTiled: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FILL_TILED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `FillStippled` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8486,"byte_end":8498,"line_start":254,"line_end":254,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const FillStippled: u32 = 2;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8486,"byte_end":8498,"line_start":254,"line_end":254,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const FillStippled: u32 = 2;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"FILL_STIPPLED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `FillStippled` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:254:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const FillStippled: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FILL_STIPPLED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `FillOpaqueStippled` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8519,"byte_end":8537,"line_start":255,"line_end":255,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const FillOpaqueStippled: u32 = 3;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8519,"byte_end":8537,"line_start":255,"line_end":255,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const FillOpaqueStippled: u32 = 3;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"FILL_OPAQUE_STIPPLED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `FillOpaqueStippled` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:255:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const FillOpaqueStippled: u32 = 3;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FILL_OPAQUE_STIPPLED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `EvenOddRule` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8558,"byte_end":8569,"line_start":256,"line_end":256,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const EvenOddRule: u32 = 0;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8558,"byte_end":8569,"line_start":256,"line_end":256,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const EvenOddRule: u32 = 0;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"EVEN_ODD_RULE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `EvenOddRule` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:256:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const EvenOddRule: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `EVEN_ODD_RULE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `WindingRule` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8590,"byte_end":8601,"line_start":257,"line_end":257,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const WindingRule: u32 = 1;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8590,"byte_end":8601,"line_start":257,"line_end":257,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const WindingRule: u32 = 1;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"WINDING_RULE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `WindingRule` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:257:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m257\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const WindingRule: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `WINDING_RULE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ClipByChildren` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8622,"byte_end":8636,"line_start":258,"line_end":258,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const ClipByChildren: u32 = 0;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8622,"byte_end":8636,"line_start":258,"line_end":258,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const ClipByChildren: u32 = 0;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"CLIP_BY_CHILDREN","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ClipByChildren` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:258:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m258\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ClipByChildren: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CLIP_BY_CHILDREN`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `IncludeInferiors` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8657,"byte_end":8673,"line_start":259,"line_end":259,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const IncludeInferiors: u32 = 1;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8657,"byte_end":8673,"line_start":259,"line_end":259,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const IncludeInferiors: u32 = 1;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"INCLUDE_INFERIORS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `IncludeInferiors` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:259:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const IncludeInferiors: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `INCLUDE_INFERIORS`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Unsorted` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8694,"byte_end":8702,"line_start":260,"line_end":260,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const Unsorted: u32 = 0;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8694,"byte_end":8702,"line_start":260,"line_end":260,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const Unsorted: u32 = 0;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"UNSORTED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Unsorted` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:260:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Unsorted: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `UNSORTED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `YSorted` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8723,"byte_end":8730,"line_start":261,"line_end":261,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const YSorted: u32 = 1;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8723,"byte_end":8730,"line_start":261,"line_end":261,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const YSorted: u32 = 1;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"YSORTED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `YSorted` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:261:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const YSorted: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `YSORTED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `YXSorted` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8751,"byte_end":8759,"line_start":262,"line_end":262,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const YXSorted: u32 = 2;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8751,"byte_end":8759,"line_start":262,"line_end":262,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const YXSorted: u32 = 2;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"YXSORTED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `YXSorted` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:262:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const YXSorted: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `YXSORTED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `YXBanded` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8780,"byte_end":8788,"line_start":263,"line_end":263,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const YXBanded: u32 = 3;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8780,"byte_end":8788,"line_start":263,"line_end":263,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const YXBanded: u32 = 3;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"YXBANDED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `YXBanded` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:263:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m263\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const YXBanded: u32 = 3;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `YXBANDED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CoordModeOrigin` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8809,"byte_end":8824,"line_start":264,"line_end":264,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const CoordModeOrigin: u32 = 0;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8809,"byte_end":8824,"line_start":264,"line_end":264,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const CoordModeOrigin: u32 = 0;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"COORD_MODE_ORIGIN","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CoordModeOrigin` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:264:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CoordModeOrigin: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `COORD_MODE_ORIGIN`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CoordModePrevious` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8845,"byte_end":8862,"line_start":265,"line_end":265,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const CoordModePrevious: u32 = 1;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8845,"byte_end":8862,"line_start":265,"line_end":265,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const CoordModePrevious: u32 = 1;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"COORD_MODE_PREVIOUS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CoordModePrevious` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:265:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CoordModePrevious: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `COORD_MODE_PREVIOUS`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Complex` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8883,"byte_end":8890,"line_start":266,"line_end":266,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const Complex: u32 = 0;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8883,"byte_end":8890,"line_start":266,"line_end":266,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const Complex: u32 = 0;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"COMPLEX","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Complex` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:266:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Complex: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `COMPLEX`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Nonconvex` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8911,"byte_end":8920,"line_start":267,"line_end":267,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const Nonconvex: u32 = 1;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8911,"byte_end":8920,"line_start":267,"line_end":267,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const Nonconvex: u32 = 1;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"NONCONVEX","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Nonconvex` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:267:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m267\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Nonconvex: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NONCONVEX`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `Convex` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8941,"byte_end":8947,"line_start":268,"line_end":268,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const Convex: u32 = 2;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8941,"byte_end":8947,"line_start":268,"line_end":268,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const Convex: u32 = 2;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"CONVEX","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `Convex` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:268:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const Convex: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CONVEX`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ArcChord` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8968,"byte_end":8976,"line_start":269,"line_end":269,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const ArcChord: u32 = 0;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8968,"byte_end":8976,"line_start":269,"line_end":269,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const ArcChord: u32 = 0;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"ARC_CHORD","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ArcChord` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:269:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ArcChord: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ARC_CHORD`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ArcPieSlice` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8997,"byte_end":9008,"line_start":270,"line_end":270,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const ArcPieSlice: u32 = 1;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":8997,"byte_end":9008,"line_start":270,"line_end":270,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const ArcPieSlice: u32 = 1;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"ARC_PIE_SLICE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ArcPieSlice` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:270:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ArcPieSlice: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ARC_PIE_SLICE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCFunction` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9029,"byte_end":9039,"line_start":271,"line_end":271,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const GCFunction: u32 = 1;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9029,"byte_end":9039,"line_start":271,"line_end":271,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const GCFunction: u32 = 1;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"GCFUNCTION","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCFunction` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:271:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCFunction: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCFUNCTION`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCPlaneMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9060,"byte_end":9071,"line_start":272,"line_end":272,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const GCPlaneMask: u32 = 2;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9060,"byte_end":9071,"line_start":272,"line_end":272,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const GCPlaneMask: u32 = 2;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"GCPLANE_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCPlaneMask` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:272:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m272\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCPlaneMask: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCPLANE_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCForeground` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9092,"byte_end":9104,"line_start":273,"line_end":273,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const GCForeground: u32 = 4;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9092,"byte_end":9104,"line_start":273,"line_end":273,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const GCForeground: u32 = 4;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"GCFOREGROUND","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCForeground` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:273:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m273\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCForeground: u32 = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCFOREGROUND`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCBackground` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9125,"byte_end":9137,"line_start":274,"line_end":274,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const GCBackground: u32 = 8;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9125,"byte_end":9137,"line_start":274,"line_end":274,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const GCBackground: u32 = 8;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"GCBACKGROUND","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCBackground` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:274:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m274\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCBackground: u32 = 8;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCBACKGROUND`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCLineWidth` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9158,"byte_end":9169,"line_start":275,"line_end":275,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const GCLineWidth: u32 = 16;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9158,"byte_end":9169,"line_start":275,"line_end":275,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const GCLineWidth: u32 = 16;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"GCLINE_WIDTH","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCLineWidth` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:275:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m275\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCLineWidth: u32 = 16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCLINE_WIDTH`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCLineStyle` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9191,"byte_end":9202,"line_start":276,"line_end":276,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const GCLineStyle: u32 = 32;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9191,"byte_end":9202,"line_start":276,"line_end":276,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const GCLineStyle: u32 = 32;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"GCLINE_STYLE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCLineStyle` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:276:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m276\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCLineStyle: u32 = 32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCLINE_STYLE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCCapStyle` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9224,"byte_end":9234,"line_start":277,"line_end":277,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const GCCapStyle: u32 = 64;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9224,"byte_end":9234,"line_start":277,"line_end":277,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const GCCapStyle: u32 = 64;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"GCCAP_STYLE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCCapStyle` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:277:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m277\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCCapStyle: u32 = 64;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCCAP_STYLE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCJoinStyle` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9256,"byte_end":9267,"line_start":278,"line_end":278,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const GCJoinStyle: u32 = 128;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9256,"byte_end":9267,"line_start":278,"line_end":278,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const GCJoinStyle: u32 = 128;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"GCJOIN_STYLE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCJoinStyle` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:278:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m278\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCJoinStyle: u32 = 128;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCJOIN_STYLE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCFillStyle` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9290,"byte_end":9301,"line_start":279,"line_end":279,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const GCFillStyle: u32 = 256;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9290,"byte_end":9301,"line_start":279,"line_end":279,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const GCFillStyle: u32 = 256;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"GCFILL_STYLE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCFillStyle` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:279:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m279\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCFillStyle: u32 = 256;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCFILL_STYLE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCFillRule` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9324,"byte_end":9334,"line_start":280,"line_end":280,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const GCFillRule: u32 = 512;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9324,"byte_end":9334,"line_start":280,"line_end":280,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const GCFillRule: u32 = 512;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"GCFILL_RULE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCFillRule` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:280:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m280\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCFillRule: u32 = 512;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCFILL_RULE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCTile` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9357,"byte_end":9363,"line_start":281,"line_end":281,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const GCTile: u32 = 1024;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9357,"byte_end":9363,"line_start":281,"line_end":281,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const GCTile: u32 = 1024;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"GCTILE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCTile` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:281:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m281\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCTile: u32 = 1024;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCTILE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCStipple` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9387,"byte_end":9396,"line_start":282,"line_end":282,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const GCStipple: u32 = 2048;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9387,"byte_end":9396,"line_start":282,"line_end":282,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const GCStipple: u32 = 2048;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"GCSTIPPLE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCStipple` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:282:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m282\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCStipple: u32 = 2048;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCSTIPPLE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCTileStipXOrigin` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9420,"byte_end":9437,"line_start":283,"line_end":283,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const GCTileStipXOrigin: u32 = 4096;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9420,"byte_end":9437,"line_start":283,"line_end":283,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const GCTileStipXOrigin: u32 = 4096;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"GCTILE_STIP_XORIGIN","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCTileStipXOrigin` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:283:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m283\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCTileStipXOrigin: u32 = 4096;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCTILE_STIP_XORIGIN`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCTileStipYOrigin` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9461,"byte_end":9478,"line_start":284,"line_end":284,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const GCTileStipYOrigin: u32 = 8192;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9461,"byte_end":9478,"line_start":284,"line_end":284,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const GCTileStipYOrigin: u32 = 8192;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"GCTILE_STIP_YORIGIN","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCTileStipYOrigin` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:284:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m284\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCTileStipYOrigin: u32 = 8192;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCTILE_STIP_YORIGIN`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCFont` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9502,"byte_end":9508,"line_start":285,"line_end":285,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const GCFont: u32 = 16384;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9502,"byte_end":9508,"line_start":285,"line_end":285,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const GCFont: u32 = 16384;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"GCFONT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCFont` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:285:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m285\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCFont: u32 = 16384;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCFONT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCSubwindowMode` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9533,"byte_end":9548,"line_start":286,"line_end":286,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const GCSubwindowMode: u32 = 32768;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9533,"byte_end":9548,"line_start":286,"line_end":286,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const GCSubwindowMode: u32 = 32768;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"GCSUBWINDOW_MODE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCSubwindowMode` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:286:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m286\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCSubwindowMode: u32 = 32768;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCSUBWINDOW_MODE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCGraphicsExposures` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9573,"byte_end":9592,"line_start":287,"line_end":287,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const GCGraphicsExposures: u32 = 65536;","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9573,"byte_end":9592,"line_start":287,"line_end":287,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const GCGraphicsExposures: u32 = 65536;","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":"GCGRAPHICS_EXPOSURES","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCGraphicsExposures` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:287:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCGraphicsExposures: u32 = 65536;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCGRAPHICS_EXPOSURES`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCClipXOrigin` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9617,"byte_end":9630,"line_start":288,"line_end":288,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const GCClipXOrigin: u32 = 131072;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9617,"byte_end":9630,"line_start":288,"line_end":288,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const GCClipXOrigin: u32 = 131072;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"GCCLIP_XORIGIN","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCClipXOrigin` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:288:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCClipXOrigin: u32 = 131072;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCCLIP_XORIGIN`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCClipYOrigin` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9656,"byte_end":9669,"line_start":289,"line_end":289,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const GCClipYOrigin: u32 = 262144;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9656,"byte_end":9669,"line_start":289,"line_end":289,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const GCClipYOrigin: u32 = 262144;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"GCCLIP_YORIGIN","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCClipYOrigin` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:289:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCClipYOrigin: u32 = 262144;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCCLIP_YORIGIN`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCClipMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9695,"byte_end":9705,"line_start":290,"line_end":290,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const GCClipMask: u32 = 524288;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9695,"byte_end":9705,"line_start":290,"line_end":290,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const GCClipMask: u32 = 524288;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"GCCLIP_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCClipMask` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:290:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m290\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCClipMask: u32 = 524288;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCCLIP_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCDashOffset` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9731,"byte_end":9743,"line_start":291,"line_end":291,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const GCDashOffset: u32 = 1048576;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9731,"byte_end":9743,"line_start":291,"line_end":291,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const GCDashOffset: u32 = 1048576;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"GCDASH_OFFSET","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCDashOffset` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:291:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m291\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCDashOffset: u32 = 1048576;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCDASH_OFFSET`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCDashList` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9770,"byte_end":9780,"line_start":292,"line_end":292,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const GCDashList: u32 = 2097152;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9770,"byte_end":9780,"line_start":292,"line_end":292,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const GCDashList: u32 = 2097152;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"GCDASH_LIST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCDashList` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:292:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCDashList: u32 = 2097152;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCDASH_LIST`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCArcMode` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9807,"byte_end":9816,"line_start":293,"line_end":293,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const GCArcMode: u32 = 4194304;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9807,"byte_end":9816,"line_start":293,"line_end":293,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const GCArcMode: u32 = 4194304;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"GCARC_MODE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCArcMode` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:293:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m293\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCArcMode: u32 = 4194304;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCARC_MODE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GCLastBit` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9843,"byte_end":9852,"line_start":294,"line_end":294,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const GCLastBit: u32 = 22;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9843,"byte_end":9852,"line_start":294,"line_end":294,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const GCLastBit: u32 = 22;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"GCLAST_BIT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GCLastBit` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:294:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m294\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GCLastBit: u32 = 22;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCLAST_BIT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `FontLeftToRight` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9874,"byte_end":9889,"line_start":295,"line_end":295,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const FontLeftToRight: u32 = 0;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9874,"byte_end":9889,"line_start":295,"line_end":295,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const FontLeftToRight: u32 = 0;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"FONT_LEFT_TO_RIGHT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `FontLeftToRight` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:295:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m295\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const FontLeftToRight: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FONT_LEFT_TO_RIGHT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `FontRightToLeft` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9910,"byte_end":9925,"line_start":296,"line_end":296,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const FontRightToLeft: u32 = 1;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9910,"byte_end":9925,"line_start":296,"line_end":296,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const FontRightToLeft: u32 = 1;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"FONT_RIGHT_TO_LEFT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `FontRightToLeft` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:296:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const FontRightToLeft: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FONT_RIGHT_TO_LEFT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `FontChange` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9946,"byte_end":9956,"line_start":297,"line_end":297,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const FontChange: u32 = 255;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9946,"byte_end":9956,"line_start":297,"line_end":297,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const FontChange: u32 = 255;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"FONT_CHANGE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `FontChange` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:297:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m297\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const FontChange: u32 = 255;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FONT_CHANGE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XYBitmap` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9979,"byte_end":9987,"line_start":298,"line_end":298,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const XYBitmap: u32 = 0;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":9979,"byte_end":9987,"line_start":298,"line_end":298,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const XYBitmap: u32 = 0;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"XYBITMAP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XYBitmap` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:298:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m298\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XYBitmap: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XYBITMAP`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XYPixmap` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10008,"byte_end":10016,"line_start":299,"line_end":299,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const XYPixmap: u32 = 1;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10008,"byte_end":10016,"line_start":299,"line_end":299,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const XYPixmap: u32 = 1;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"XYPIXMAP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XYPixmap` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:299:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m299\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XYPixmap: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XYPIXMAP`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ZPixmap` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10037,"byte_end":10044,"line_start":300,"line_end":300,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const ZPixmap: u32 = 2;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10037,"byte_end":10044,"line_start":300,"line_end":300,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const ZPixmap: u32 = 2;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"ZPIXMAP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ZPixmap` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:300:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m300\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ZPixmap: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ZPIXMAP`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `AllocNone` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10065,"byte_end":10074,"line_start":301,"line_end":301,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const AllocNone: u32 = 0;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10065,"byte_end":10074,"line_start":301,"line_end":301,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const AllocNone: u32 = 0;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"ALLOC_NONE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `AllocNone` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:301:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m301\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AllocNone: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ALLOC_NONE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `AllocAll` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10095,"byte_end":10103,"line_start":302,"line_end":302,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const AllocAll: u32 = 1;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10095,"byte_end":10103,"line_start":302,"line_end":302,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const AllocAll: u32 = 1;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"ALLOC_ALL","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `AllocAll` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:302:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AllocAll: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ALLOC_ALL`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `DoRed` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10124,"byte_end":10129,"line_start":303,"line_end":303,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const DoRed: u32 = 1;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10124,"byte_end":10129,"line_start":303,"line_end":303,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const DoRed: u32 = 1;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"DO_RED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `DoRed` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:303:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m303\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const DoRed: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `DO_RED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `DoGreen` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10150,"byte_end":10157,"line_start":304,"line_end":304,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const DoGreen: u32 = 2;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10150,"byte_end":10157,"line_start":304,"line_end":304,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"pub const DoGreen: u32 = 2;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"DO_GREEN","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `DoGreen` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:304:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m304\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const DoGreen: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `DO_GREEN`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `DoBlue` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10178,"byte_end":10184,"line_start":305,"line_end":305,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const DoBlue: u32 = 4;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10178,"byte_end":10184,"line_start":305,"line_end":305,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const DoBlue: u32 = 4;","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"DO_BLUE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `DoBlue` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:305:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m305\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const DoBlue: u32 = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `DO_BLUE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CursorShape` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10205,"byte_end":10216,"line_start":306,"line_end":306,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const CursorShape: u32 = 0;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10205,"byte_end":10216,"line_start":306,"line_end":306,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const CursorShape: u32 = 0;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"CURSOR_SHAPE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CursorShape` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:306:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CursorShape: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CURSOR_SHAPE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `TileShape` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10237,"byte_end":10246,"line_start":307,"line_end":307,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const TileShape: u32 = 1;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10237,"byte_end":10246,"line_start":307,"line_end":307,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const TileShape: u32 = 1;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"TILE_SHAPE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `TileShape` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:307:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m307\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const TileShape: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `TILE_SHAPE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `StippleShape` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10267,"byte_end":10279,"line_start":308,"line_end":308,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const StippleShape: u32 = 2;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10267,"byte_end":10279,"line_start":308,"line_end":308,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const StippleShape: u32 = 2;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"STIPPLE_SHAPE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `StippleShape` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:308:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m308\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const StippleShape: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `STIPPLE_SHAPE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `AutoRepeatModeOff` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10300,"byte_end":10317,"line_start":309,"line_end":309,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const AutoRepeatModeOff: u32 = 0;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10300,"byte_end":10317,"line_start":309,"line_end":309,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const AutoRepeatModeOff: u32 = 0;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"AUTO_REPEAT_MODE_OFF","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `AutoRepeatModeOff` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:309:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AutoRepeatModeOff: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `AUTO_REPEAT_MODE_OFF`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `AutoRepeatModeOn` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10338,"byte_end":10354,"line_start":310,"line_end":310,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const AutoRepeatModeOn: u32 = 1;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10338,"byte_end":10354,"line_start":310,"line_end":310,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const AutoRepeatModeOn: u32 = 1;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"AUTO_REPEAT_MODE_ON","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `AutoRepeatModeOn` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:310:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AutoRepeatModeOn: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `AUTO_REPEAT_MODE_ON`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `AutoRepeatModeDefault` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10375,"byte_end":10396,"line_start":311,"line_end":311,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"pub const AutoRepeatModeDefault: u32 = 2;","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10375,"byte_end":10396,"line_start":311,"line_end":311,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"pub const AutoRepeatModeDefault: u32 = 2;","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":"AUTO_REPEAT_MODE_DEFAULT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `AutoRepeatModeDefault` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:311:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m311\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AutoRepeatModeDefault: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `AUTO_REPEAT_MODE_DEFAULT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `LedModeOff` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10417,"byte_end":10427,"line_start":312,"line_end":312,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const LedModeOff: u32 = 0;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10417,"byte_end":10427,"line_start":312,"line_end":312,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const LedModeOff: u32 = 0;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"LED_MODE_OFF","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `LedModeOff` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:312:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m312\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const LedModeOff: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `LED_MODE_OFF`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `LedModeOn` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10448,"byte_end":10457,"line_start":313,"line_end":313,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const LedModeOn: u32 = 1;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10448,"byte_end":10457,"line_start":313,"line_end":313,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const LedModeOn: u32 = 1;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"LED_MODE_ON","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `LedModeOn` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:313:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m313\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const LedModeOn: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `LED_MODE_ON`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `KBKeyClickPercent` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10478,"byte_end":10495,"line_start":314,"line_end":314,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const KBKeyClickPercent: u32 = 1;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10478,"byte_end":10495,"line_start":314,"line_end":314,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const KBKeyClickPercent: u32 = 1;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"KBKEY_CLICK_PERCENT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `KBKeyClickPercent` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:314:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const KBKeyClickPercent: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `KBKEY_CLICK_PERCENT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `KBBellPercent` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10516,"byte_end":10529,"line_start":315,"line_end":315,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const KBBellPercent: u32 = 2;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10516,"byte_end":10529,"line_start":315,"line_end":315,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const KBBellPercent: u32 = 2;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"KBBELL_PERCENT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `KBBellPercent` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:315:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m315\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const KBBellPercent: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `KBBELL_PERCENT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `KBBellPitch` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10550,"byte_end":10561,"line_start":316,"line_end":316,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const KBBellPitch: u32 = 4;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10550,"byte_end":10561,"line_start":316,"line_end":316,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const KBBellPitch: u32 = 4;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"KBBELL_PITCH","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `KBBellPitch` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:316:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const KBBellPitch: u32 = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `KBBELL_PITCH`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `KBBellDuration` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10582,"byte_end":10596,"line_start":317,"line_end":317,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const KBBellDuration: u32 = 8;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10582,"byte_end":10596,"line_start":317,"line_end":317,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const KBBellDuration: u32 = 8;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"KBBELL_DURATION","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `KBBellDuration` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:317:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m317\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const KBBellDuration: u32 = 8;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `KBBELL_DURATION`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `KBLed` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10617,"byte_end":10622,"line_start":318,"line_end":318,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const KBLed: u32 = 16;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10617,"byte_end":10622,"line_start":318,"line_end":318,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const KBLed: u32 = 16;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"KBLED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `KBLed` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:318:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m318\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const KBLed: u32 = 16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `KBLED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `KBLedMode` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10644,"byte_end":10653,"line_start":319,"line_end":319,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const KBLedMode: u32 = 32;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10644,"byte_end":10653,"line_start":319,"line_end":319,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const KBLedMode: u32 = 32;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"KBLED_MODE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `KBLedMode` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:319:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m319\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const KBLedMode: u32 = 32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `KBLED_MODE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `KBKey` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10675,"byte_end":10680,"line_start":320,"line_end":320,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const KBKey: u32 = 64;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10675,"byte_end":10680,"line_start":320,"line_end":320,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const KBKey: u32 = 64;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"KBKEY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `KBKey` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:320:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m320\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const KBKey: u32 = 64;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `KBKEY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `KBAutoRepeatMode` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10702,"byte_end":10718,"line_start":321,"line_end":321,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const KBAutoRepeatMode: u32 = 128;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10702,"byte_end":10718,"line_start":321,"line_end":321,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const KBAutoRepeatMode: u32 = 128;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"KBAUTO_REPEAT_MODE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `KBAutoRepeatMode` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:321:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const KBAutoRepeatMode: u32 = 128;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `KBAUTO_REPEAT_MODE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `MappingSuccess` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10741,"byte_end":10755,"line_start":322,"line_end":322,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const MappingSuccess: u32 = 0;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10741,"byte_end":10755,"line_start":322,"line_end":322,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const MappingSuccess: u32 = 0;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"MAPPING_SUCCESS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `MappingSuccess` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:322:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m322\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const MappingSuccess: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MAPPING_SUCCESS`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `MappingBusy` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10776,"byte_end":10787,"line_start":323,"line_end":323,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const MappingBusy: u32 = 1;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10776,"byte_end":10787,"line_start":323,"line_end":323,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const MappingBusy: u32 = 1;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"MAPPING_BUSY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `MappingBusy` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:323:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m323\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const MappingBusy: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MAPPING_BUSY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `MappingFailed` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10808,"byte_end":10821,"line_start":324,"line_end":324,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const MappingFailed: u32 = 2;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10808,"byte_end":10821,"line_start":324,"line_end":324,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const MappingFailed: u32 = 2;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"MAPPING_FAILED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `MappingFailed` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:324:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m324\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const MappingFailed: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MAPPING_FAILED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `MappingModifier` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10842,"byte_end":10857,"line_start":325,"line_end":325,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const MappingModifier: u32 = 0;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10842,"byte_end":10857,"line_start":325,"line_end":325,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const MappingModifier: u32 = 0;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"MAPPING_MODIFIER","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `MappingModifier` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:325:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m325\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const MappingModifier: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MAPPING_MODIFIER`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `MappingKeyboard` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10878,"byte_end":10893,"line_start":326,"line_end":326,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const MappingKeyboard: u32 = 1;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10878,"byte_end":10893,"line_start":326,"line_end":326,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const MappingKeyboard: u32 = 1;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"MAPPING_KEYBOARD","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `MappingKeyboard` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:326:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m326\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const MappingKeyboard: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MAPPING_KEYBOARD`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `MappingPointer` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10914,"byte_end":10928,"line_start":327,"line_end":327,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const MappingPointer: u32 = 2;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10914,"byte_end":10928,"line_start":327,"line_end":327,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const MappingPointer: u32 = 2;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"MAPPING_POINTER","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `MappingPointer` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:327:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m327\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const MappingPointer: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MAPPING_POINTER`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `DontPreferBlanking` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10949,"byte_end":10967,"line_start":328,"line_end":328,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const DontPreferBlanking: u32 = 0;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10949,"byte_end":10967,"line_start":328,"line_end":328,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const DontPreferBlanking: u32 = 0;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"DONT_PREFER_BLANKING","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `DontPreferBlanking` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:328:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m328\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const DontPreferBlanking: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `DONT_PREFER_BLANKING`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `PreferBlanking` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10988,"byte_end":11002,"line_start":329,"line_end":329,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const PreferBlanking: u32 = 1;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":10988,"byte_end":11002,"line_start":329,"line_end":329,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const PreferBlanking: u32 = 1;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"PREFER_BLANKING","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `PreferBlanking` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:329:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m329\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const PreferBlanking: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `PREFER_BLANKING`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `DefaultBlanking` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11023,"byte_end":11038,"line_start":330,"line_end":330,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const DefaultBlanking: u32 = 2;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11023,"byte_end":11038,"line_start":330,"line_end":330,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const DefaultBlanking: u32 = 2;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"DEFAULT_BLANKING","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `DefaultBlanking` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:330:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m330\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const DefaultBlanking: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `DEFAULT_BLANKING`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `DisableScreenSaver` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11059,"byte_end":11077,"line_start":331,"line_end":331,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const DisableScreenSaver: u32 = 0;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11059,"byte_end":11077,"line_start":331,"line_end":331,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const DisableScreenSaver: u32 = 0;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"DISABLE_SCREEN_SAVER","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `DisableScreenSaver` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:331:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m331\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const DisableScreenSaver: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `DISABLE_SCREEN_SAVER`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `DisableScreenInterval` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11098,"byte_end":11119,"line_start":332,"line_end":332,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"pub const DisableScreenInterval: u32 = 0;","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11098,"byte_end":11119,"line_start":332,"line_end":332,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"pub const DisableScreenInterval: u32 = 0;","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":"DISABLE_SCREEN_INTERVAL","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `DisableScreenInterval` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:332:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m332\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const DisableScreenInterval: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `DISABLE_SCREEN_INTERVAL`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `DontAllowExposures` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11140,"byte_end":11158,"line_start":333,"line_end":333,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const DontAllowExposures: u32 = 0;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11140,"byte_end":11158,"line_start":333,"line_end":333,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const DontAllowExposures: u32 = 0;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"DONT_ALLOW_EXPOSURES","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `DontAllowExposures` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:333:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m333\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const DontAllowExposures: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `DONT_ALLOW_EXPOSURES`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `AllowExposures` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11179,"byte_end":11193,"line_start":334,"line_end":334,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const AllowExposures: u32 = 1;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11179,"byte_end":11193,"line_start":334,"line_end":334,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const AllowExposures: u32 = 1;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"ALLOW_EXPOSURES","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `AllowExposures` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:334:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m334\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AllowExposures: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ALLOW_EXPOSURES`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `DefaultExposures` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11214,"byte_end":11230,"line_start":335,"line_end":335,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const DefaultExposures: u32 = 2;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11214,"byte_end":11230,"line_start":335,"line_end":335,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const DefaultExposures: u32 = 2;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"DEFAULT_EXPOSURES","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `DefaultExposures` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:335:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m335\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const DefaultExposures: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `DEFAULT_EXPOSURES`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ScreenSaverReset` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11251,"byte_end":11267,"line_start":336,"line_end":336,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const ScreenSaverReset: u32 = 0;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11251,"byte_end":11267,"line_start":336,"line_end":336,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const ScreenSaverReset: u32 = 0;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"SCREEN_SAVER_RESET","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ScreenSaverReset` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:336:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m336\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ScreenSaverReset: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SCREEN_SAVER_RESET`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ScreenSaverActive` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11288,"byte_end":11305,"line_start":337,"line_end":337,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const ScreenSaverActive: u32 = 1;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11288,"byte_end":11305,"line_start":337,"line_end":337,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const ScreenSaverActive: u32 = 1;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"SCREEN_SAVER_ACTIVE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ScreenSaverActive` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:337:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m337\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const ScreenSaverActive: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SCREEN_SAVER_ACTIVE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `HostInsert` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11326,"byte_end":11336,"line_start":338,"line_end":338,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const HostInsert: u32 = 0;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11326,"byte_end":11336,"line_start":338,"line_end":338,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const HostInsert: u32 = 0;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"HOST_INSERT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `HostInsert` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:338:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m338\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const HostInsert: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `HOST_INSERT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `HostDelete` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11357,"byte_end":11367,"line_start":339,"line_end":339,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const HostDelete: u32 = 1;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11357,"byte_end":11367,"line_start":339,"line_end":339,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const HostDelete: u32 = 1;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"HOST_DELETE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `HostDelete` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:339:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m339\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const HostDelete: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `HOST_DELETE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `EnableAccess` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11388,"byte_end":11400,"line_start":340,"line_end":340,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const EnableAccess: u32 = 1;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11388,"byte_end":11400,"line_start":340,"line_end":340,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const EnableAccess: u32 = 1;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"ENABLE_ACCESS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `EnableAccess` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:340:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m340\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const EnableAccess: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ENABLE_ACCESS`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `DisableAccess` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11421,"byte_end":11434,"line_start":341,"line_end":341,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const DisableAccess: u32 = 0;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11421,"byte_end":11434,"line_start":341,"line_end":341,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const DisableAccess: u32 = 0;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"DISABLE_ACCESS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `DisableAccess` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:341:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const DisableAccess: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `DISABLE_ACCESS`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `StaticGray` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11455,"byte_end":11465,"line_start":342,"line_end":342,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const StaticGray: u32 = 0;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11455,"byte_end":11465,"line_start":342,"line_end":342,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const StaticGray: u32 = 0;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"STATIC_GRAY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `StaticGray` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:342:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m342\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const StaticGray: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `STATIC_GRAY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GrayScale` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11486,"byte_end":11495,"line_start":343,"line_end":343,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const GrayScale: u32 = 1;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11486,"byte_end":11495,"line_start":343,"line_end":343,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const GrayScale: u32 = 1;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"GRAY_SCALE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GrayScale` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:343:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m343\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GrayScale: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GRAY_SCALE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `StaticColor` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11516,"byte_end":11527,"line_start":344,"line_end":344,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const StaticColor: u32 = 2;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11516,"byte_end":11527,"line_start":344,"line_end":344,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const StaticColor: u32 = 2;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"STATIC_COLOR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `StaticColor` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:344:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const StaticColor: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `STATIC_COLOR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `PseudoColor` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11548,"byte_end":11559,"line_start":345,"line_end":345,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const PseudoColor: u32 = 3;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11548,"byte_end":11559,"line_start":345,"line_end":345,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const PseudoColor: u32 = 3;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"PSEUDO_COLOR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `PseudoColor` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:345:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m345\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const PseudoColor: u32 = 3;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `PSEUDO_COLOR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `TrueColor` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11580,"byte_end":11589,"line_start":346,"line_end":346,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const TrueColor: u32 = 4;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11580,"byte_end":11589,"line_start":346,"line_end":346,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const TrueColor: u32 = 4;","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"TRUE_COLOR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `TrueColor` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:346:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const TrueColor: u32 = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `TRUE_COLOR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `DirectColor` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11610,"byte_end":11621,"line_start":347,"line_end":347,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const DirectColor: u32 = 5;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11610,"byte_end":11621,"line_start":347,"line_end":347,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const DirectColor: u32 = 5;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"DIRECT_COLOR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `DirectColor` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:347:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m347\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const DirectColor: u32 = 5;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `DIRECT_COLOR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `LSBFirst` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11642,"byte_end":11650,"line_start":348,"line_end":348,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const LSBFirst: u32 = 0;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11642,"byte_end":11650,"line_start":348,"line_end":348,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const LSBFirst: u32 = 0;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"LSBFIRST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `LSBFirst` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:348:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m348\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const LSBFirst: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `LSBFIRST`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `MSBFirst` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11671,"byte_end":11679,"line_start":349,"line_end":349,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const MSBFirst: u32 = 1;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11671,"byte_end":11679,"line_start":349,"line_end":349,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const MSBFirst: u32 = 1;","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"MSBFIRST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `MSBFirst` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:349:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const MSBFirst: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `MSBFIRST`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NeedFunctionPrototypes` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11700,"byte_end":11722,"line_start":350,"line_end":350,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"pub const NeedFunctionPrototypes: u32 = 1;","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11700,"byte_end":11722,"line_start":350,"line_end":350,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"pub const NeedFunctionPrototypes: u32 = 1;","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":"NEED_FUNCTION_PROTOTYPES","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NeedFunctionPrototypes` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:350:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m350\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NeedFunctionPrototypes: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NEED_FUNCTION_PROTOTYPES`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NeedVarargsPrototypes` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11743,"byte_end":11764,"line_start":351,"line_end":351,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"pub const NeedVarargsPrototypes: u32 = 1;","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11743,"byte_end":11764,"line_start":351,"line_end":351,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"pub const NeedVarargsPrototypes: u32 = 1;","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":"NEED_VARARGS_PROTOTYPES","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NeedVarargsPrototypes` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:351:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m351\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NeedVarargsPrototypes: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NEED_VARARGS_PROTOTYPES`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NeedNestedPrototypes` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11785,"byte_end":11805,"line_start":352,"line_end":352,"column_start":11,"column_end":31,"is_primary":true,"text":[{"text":"pub const NeedNestedPrototypes: u32 = 1;","highlight_start":11,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11785,"byte_end":11805,"line_start":352,"line_end":352,"column_start":11,"column_end":31,"is_primary":true,"text":[{"text":"pub const NeedNestedPrototypes: u32 = 1;","highlight_start":11,"highlight_end":31}],"label":null,"suggested_replacement":"NEED_NESTED_PROTOTYPES","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NeedNestedPrototypes` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:352:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NeedNestedPrototypes: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NEED_NESTED_PROTOTYPES`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `NeedWidePrototypes` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11857,"byte_end":11875,"line_start":354,"line_end":354,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const NeedWidePrototypes: u32 = 0;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11857,"byte_end":11875,"line_start":354,"line_end":354,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const NeedWidePrototypes: u32 = 0;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"NEED_WIDE_PROTOTYPES","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `NeedWidePrototypes` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:354:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const NeedWidePrototypes: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NEED_WIDE_PROTOTYPES`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `True` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11935,"byte_end":11939,"line_start":356,"line_end":356,"column_start":11,"column_end":15,"is_primary":true,"text":[{"text":"pub const True: u32 = 1;","highlight_start":11,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11935,"byte_end":11939,"line_start":356,"line_end":356,"column_start":11,"column_end":15,"is_primary":true,"text":[{"text":"pub const True: u32 = 1;","highlight_start":11,"highlight_end":15}],"label":null,"suggested_replacement":"TRUE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `True` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:356:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m356\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const True: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `TRUE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `False` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11960,"byte_end":11965,"line_start":357,"line_end":357,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const False: u32 = 0;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11960,"byte_end":11965,"line_start":357,"line_end":357,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"pub const False: u32 = 0;","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"FALSE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `False` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:357:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const False: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FALSE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `QueuedAlready` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11986,"byte_end":11999,"line_start":358,"line_end":358,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const QueuedAlready: u32 = 0;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":11986,"byte_end":11999,"line_start":358,"line_end":358,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const QueuedAlready: u32 = 0;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"QUEUED_ALREADY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `QueuedAlready` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:358:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const QueuedAlready: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `QUEUED_ALREADY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `QueuedAfterReading` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12020,"byte_end":12038,"line_start":359,"line_end":359,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const QueuedAfterReading: u32 = 1;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12020,"byte_end":12038,"line_start":359,"line_end":359,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const QueuedAfterReading: u32 = 1;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"QUEUED_AFTER_READING","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `QueuedAfterReading` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:359:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m359\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const QueuedAfterReading: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `QUEUED_AFTER_READING`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `QueuedAfterFlush` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12059,"byte_end":12075,"line_start":360,"line_end":360,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const QueuedAfterFlush: u32 = 2;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12059,"byte_end":12075,"line_start":360,"line_end":360,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const QueuedAfterFlush: u32 = 2;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"QUEUED_AFTER_FLUSH","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `QueuedAfterFlush` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:360:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m360\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const QueuedAfterFlush: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `QUEUED_AFTER_FLUSH`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNRequiredCharSet` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12096,"byte_end":12113,"line_start":361,"line_end":361,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const XNRequiredCharSet: &[u8; 16] = b\"requiredCharSet\\0\";","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12096,"byte_end":12113,"line_start":361,"line_end":361,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const XNRequiredCharSet: &[u8; 16] = b\"requiredCharSet\\0\";","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"XNREQUIRED_CHAR_SET","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNRequiredCharSet` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:361:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m361\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNRequiredCharSet: &[u8; 16] = b\"requiredCharSet\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNREQUIRED_CHAR_SET`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNQueryOrientation` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12159,"byte_end":12177,"line_start":362,"line_end":362,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const XNQueryOrientation: &[u8; 17] = b\"queryOrientation\\0\";","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12159,"byte_end":12177,"line_start":362,"line_end":362,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const XNQueryOrientation: &[u8; 17] = b\"queryOrientation\\0\";","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"XNQUERY_ORIENTATION","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNQueryOrientation` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:362:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m362\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNQueryOrientation: &[u8; 17] = b\"queryOrientation\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNQUERY_ORIENTATION`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNBaseFontName` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12224,"byte_end":12238,"line_start":363,"line_end":363,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const XNBaseFontName: &[u8; 13] = b\"baseFontName\\0\";","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12224,"byte_end":12238,"line_start":363,"line_end":363,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const XNBaseFontName: &[u8; 13] = b\"baseFontName\\0\";","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"XNBASE_FONT_NAME","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNBaseFontName` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:363:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m363\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNBaseFontName: &[u8; 13] = b\"baseFontName\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNBASE_FONT_NAME`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNOMAutomatic` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12281,"byte_end":12294,"line_start":364,"line_end":364,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const XNOMAutomatic: &[u8; 12] = b\"omAutomatic\\0\";","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12281,"byte_end":12294,"line_start":364,"line_end":364,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const XNOMAutomatic: &[u8; 12] = b\"omAutomatic\\0\";","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"XNOMAUTOMATIC","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNOMAutomatic` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:364:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m364\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNOMAutomatic: &[u8; 12] = b\"omAutomatic\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNOMAUTOMATIC`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNMissingCharSet` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12336,"byte_end":12352,"line_start":365,"line_end":365,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const XNMissingCharSet: &[u8; 15] = b\"missingCharSet\\0\";","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12336,"byte_end":12352,"line_start":365,"line_end":365,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const XNMissingCharSet: &[u8; 15] = b\"missingCharSet\\0\";","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"XNMISSING_CHAR_SET","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNMissingCharSet` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:365:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m365\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNMissingCharSet: &[u8; 15] = b\"missingCharSet\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNMISSING_CHAR_SET`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNDefaultString` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12397,"byte_end":12412,"line_start":366,"line_end":366,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const XNDefaultString: &[u8; 14] = b\"defaultString\\0\";","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12397,"byte_end":12412,"line_start":366,"line_end":366,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const XNDefaultString: &[u8; 14] = b\"defaultString\\0\";","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"XNDEFAULT_STRING","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNDefaultString` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:366:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m366\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNDefaultString: &[u8; 14] = b\"defaultString\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNDEFAULT_STRING`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNOrientation` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12456,"byte_end":12469,"line_start":367,"line_end":367,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const XNOrientation: &[u8; 12] = b\"orientation\\0\";","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12456,"byte_end":12469,"line_start":367,"line_end":367,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const XNOrientation: &[u8; 12] = b\"orientation\\0\";","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"XNORIENTATION","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNOrientation` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:367:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m367\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNOrientation: &[u8; 12] = b\"orientation\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNORIENTATION`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNDirectionalDependentDrawing` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12511,"byte_end":12540,"line_start":368,"line_end":368,"column_start":11,"column_end":40,"is_primary":true,"text":[{"text":"pub const XNDirectionalDependentDrawing: &[u8; 28] = b\"directionalDependentDrawing\\0\";","highlight_start":11,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12511,"byte_end":12540,"line_start":368,"line_end":368,"column_start":11,"column_end":40,"is_primary":true,"text":[{"text":"pub const XNDirectionalDependentDrawing: &[u8; 28] = b\"directionalDependentDrawing\\0\";","highlight_start":11,"highlight_end":40}],"label":null,"suggested_replacement":"XNDIRECTIONAL_DEPENDENT_DRAWING","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNDirectionalDependentDrawing` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:368:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m368\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNDirectionalDependentDrawing: &[u8; 28] = b\"directionalDependentDrawing\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNDIRECTIONAL_DEPENDENT_DRAWING`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNContextualDrawing` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12598,"byte_end":12617,"line_start":369,"line_end":369,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const XNContextualDrawing: &[u8; 18] = b\"contextualDrawing\\0\";","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12598,"byte_end":12617,"line_start":369,"line_end":369,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const XNContextualDrawing: &[u8; 18] = b\"contextualDrawing\\0\";","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":"XNCONTEXTUAL_DRAWING","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNContextualDrawing` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:369:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m369\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNContextualDrawing: &[u8; 18] = b\"contextualDrawing\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNCONTEXTUAL_DRAWING`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNFontInfo` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12665,"byte_end":12675,"line_start":370,"line_end":370,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const XNFontInfo: &[u8; 9] = b\"fontInfo\\0\";","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12665,"byte_end":12675,"line_start":370,"line_end":370,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const XNFontInfo: &[u8; 9] = b\"fontInfo\\0\";","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"XNFONT_INFO","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNFontInfo` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:370:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m370\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNFontInfo: &[u8; 9] = b\"fontInfo\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNFONT_INFO`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMPreeditArea` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12713,"byte_end":12727,"line_start":371,"line_end":371,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const XIMPreeditArea: u32 = 1;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12713,"byte_end":12727,"line_start":371,"line_end":371,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const XIMPreeditArea: u32 = 1;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"XIMPREEDIT_AREA","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMPreeditArea` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:371:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m371\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMPreeditArea: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMPREEDIT_AREA`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMPreeditCallbacks` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12748,"byte_end":12767,"line_start":372,"line_end":372,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const XIMPreeditCallbacks: u32 = 2;","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12748,"byte_end":12767,"line_start":372,"line_end":372,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const XIMPreeditCallbacks: u32 = 2;","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":"XIMPREEDIT_CALLBACKS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMPreeditCallbacks` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:372:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m372\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMPreeditCallbacks: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMPREEDIT_CALLBACKS`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMPreeditPosition` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12788,"byte_end":12806,"line_start":373,"line_end":373,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const XIMPreeditPosition: u32 = 4;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12788,"byte_end":12806,"line_start":373,"line_end":373,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const XIMPreeditPosition: u32 = 4;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"XIMPREEDIT_POSITION","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMPreeditPosition` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:373:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m373\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMPreeditPosition: u32 = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMPREEDIT_POSITION`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMPreeditNothing` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12827,"byte_end":12844,"line_start":374,"line_end":374,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const XIMPreeditNothing: u32 = 8;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12827,"byte_end":12844,"line_start":374,"line_end":374,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const XIMPreeditNothing: u32 = 8;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"XIMPREEDIT_NOTHING","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMPreeditNothing` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:374:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m374\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMPreeditNothing: u32 = 8;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMPREEDIT_NOTHING`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMPreeditNone` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12865,"byte_end":12879,"line_start":375,"line_end":375,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const XIMPreeditNone: u32 = 16;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12865,"byte_end":12879,"line_start":375,"line_end":375,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const XIMPreeditNone: u32 = 16;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"XIMPREEDIT_NONE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMPreeditNone` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:375:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m375\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMPreeditNone: u32 = 16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMPREEDIT_NONE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMStatusArea` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12901,"byte_end":12914,"line_start":376,"line_end":376,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const XIMStatusArea: u32 = 256;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12901,"byte_end":12914,"line_start":376,"line_end":376,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const XIMStatusArea: u32 = 256;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"XIMSTATUS_AREA","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMStatusArea` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:376:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m376\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMStatusArea: u32 = 256;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMSTATUS_AREA`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMStatusCallbacks` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12937,"byte_end":12955,"line_start":377,"line_end":377,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const XIMStatusCallbacks: u32 = 512;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12937,"byte_end":12955,"line_start":377,"line_end":377,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const XIMStatusCallbacks: u32 = 512;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"XIMSTATUS_CALLBACKS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMStatusCallbacks` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:377:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m377\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMStatusCallbacks: u32 = 512;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMSTATUS_CALLBACKS`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMStatusNothing` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12978,"byte_end":12994,"line_start":378,"line_end":378,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const XIMStatusNothing: u32 = 1024;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":12978,"byte_end":12994,"line_start":378,"line_end":378,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const XIMStatusNothing: u32 = 1024;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"XIMSTATUS_NOTHING","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMStatusNothing` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:378:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m378\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMStatusNothing: u32 = 1024;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMSTATUS_NOTHING`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMStatusNone` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13018,"byte_end":13031,"line_start":379,"line_end":379,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const XIMStatusNone: u32 = 2048;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13018,"byte_end":13031,"line_start":379,"line_end":379,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const XIMStatusNone: u32 = 2048;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"XIMSTATUS_NONE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMStatusNone` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:379:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m379\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMStatusNone: u32 = 2048;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMSTATUS_NONE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNVaNestedList` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13055,"byte_end":13069,"line_start":380,"line_end":380,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const XNVaNestedList: &[u8; 15] = b\"XNVaNestedList\\0\";","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13055,"byte_end":13069,"line_start":380,"line_end":380,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const XNVaNestedList: &[u8; 15] = b\"XNVaNestedList\\0\";","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"XNVA_NESTED_LIST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNVaNestedList` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:380:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m380\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNVaNestedList: &[u8; 15] = b\"XNVaNestedList\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNVA_NESTED_LIST`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNQueryInputStyle` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13114,"byte_end":13131,"line_start":381,"line_end":381,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const XNQueryInputStyle: &[u8; 16] = b\"queryInputStyle\\0\";","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13114,"byte_end":13131,"line_start":381,"line_end":381,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const XNQueryInputStyle: &[u8; 16] = b\"queryInputStyle\\0\";","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"XNQUERY_INPUT_STYLE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNQueryInputStyle` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:381:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m381\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNQueryInputStyle: &[u8; 16] = b\"queryInputStyle\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNQUERY_INPUT_STYLE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNClientWindow` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13177,"byte_end":13191,"line_start":382,"line_end":382,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const XNClientWindow: &[u8; 13] = b\"clientWindow\\0\";","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13177,"byte_end":13191,"line_start":382,"line_end":382,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const XNClientWindow: &[u8; 13] = b\"clientWindow\\0\";","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"XNCLIENT_WINDOW","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNClientWindow` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:382:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m382\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNClientWindow: &[u8; 13] = b\"clientWindow\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNCLIENT_WINDOW`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNInputStyle` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13234,"byte_end":13246,"line_start":383,"line_end":383,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const XNInputStyle: &[u8; 11] = b\"inputStyle\\0\";","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13234,"byte_end":13246,"line_start":383,"line_end":383,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const XNInputStyle: &[u8; 11] = b\"inputStyle\\0\";","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"XNINPUT_STYLE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNInputStyle` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:383:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m383\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNInputStyle: &[u8; 11] = b\"inputStyle\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNINPUT_STYLE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNFocusWindow` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13287,"byte_end":13300,"line_start":384,"line_end":384,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const XNFocusWindow: &[u8; 12] = b\"focusWindow\\0\";","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13287,"byte_end":13300,"line_start":384,"line_end":384,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const XNFocusWindow: &[u8; 12] = b\"focusWindow\\0\";","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"XNFOCUS_WINDOW","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNFocusWindow` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:384:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m384\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNFocusWindow: &[u8; 12] = b\"focusWindow\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNFOCUS_WINDOW`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNResourceName` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13342,"byte_end":13356,"line_start":385,"line_end":385,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const XNResourceName: &[u8; 13] = b\"resourceName\\0\";","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13342,"byte_end":13356,"line_start":385,"line_end":385,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const XNResourceName: &[u8; 13] = b\"resourceName\\0\";","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"XNRESOURCE_NAME","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNResourceName` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:385:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m385\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNResourceName: &[u8; 13] = b\"resourceName\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNRESOURCE_NAME`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNResourceClass` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13399,"byte_end":13414,"line_start":386,"line_end":386,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const XNResourceClass: &[u8; 14] = b\"resourceClass\\0\";","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13399,"byte_end":13414,"line_start":386,"line_end":386,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const XNResourceClass: &[u8; 14] = b\"resourceClass\\0\";","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"XNRESOURCE_CLASS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNResourceClass` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:386:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m386\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNResourceClass: &[u8; 14] = b\"resourceClass\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNRESOURCE_CLASS`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNGeometryCallback` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13458,"byte_end":13476,"line_start":387,"line_end":387,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const XNGeometryCallback: &[u8; 17] = b\"geometryCallback\\0\";","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13458,"byte_end":13476,"line_start":387,"line_end":387,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const XNGeometryCallback: &[u8; 17] = b\"geometryCallback\\0\";","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"XNGEOMETRY_CALLBACK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNGeometryCallback` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:387:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m387\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNGeometryCallback: &[u8; 17] = b\"geometryCallback\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNGEOMETRY_CALLBACK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNDestroyCallback` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13523,"byte_end":13540,"line_start":388,"line_end":388,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const XNDestroyCallback: &[u8; 16] = b\"destroyCallback\\0\";","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13523,"byte_end":13540,"line_start":388,"line_end":388,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const XNDestroyCallback: &[u8; 16] = b\"destroyCallback\\0\";","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"XNDESTROY_CALLBACK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNDestroyCallback` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:388:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m388\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNDestroyCallback: &[u8; 16] = b\"destroyCallback\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNDESTROY_CALLBACK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNFilterEvents` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13586,"byte_end":13600,"line_start":389,"line_end":389,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const XNFilterEvents: &[u8; 13] = b\"filterEvents\\0\";","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13586,"byte_end":13600,"line_start":389,"line_end":389,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const XNFilterEvents: &[u8; 13] = b\"filterEvents\\0\";","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"XNFILTER_EVENTS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNFilterEvents` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:389:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m389\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNFilterEvents: &[u8; 13] = b\"filterEvents\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNFILTER_EVENTS`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNPreeditStartCallback` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13643,"byte_end":13665,"line_start":390,"line_end":390,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"pub const XNPreeditStartCallback: &[u8; 21] = b\"preeditStartCallback\\0\";","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13643,"byte_end":13665,"line_start":390,"line_end":390,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"pub const XNPreeditStartCallback: &[u8; 21] = b\"preeditStartCallback\\0\";","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":"XNPREEDIT_START_CALLBACK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNPreeditStartCallback` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:390:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m390\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNPreeditStartCallback: &[u8; 21] = b\"preeditStartCallback\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNPREEDIT_START_CALLBACK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNPreeditDoneCallback` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13716,"byte_end":13737,"line_start":391,"line_end":391,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"pub const XNPreeditDoneCallback: &[u8; 20] = b\"preeditDoneCallback\\0\";","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13716,"byte_end":13737,"line_start":391,"line_end":391,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"pub const XNPreeditDoneCallback: &[u8; 20] = b\"preeditDoneCallback\\0\";","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":"XNPREEDIT_DONE_CALLBACK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNPreeditDoneCallback` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:391:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m391\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNPreeditDoneCallback: &[u8; 20] = b\"preeditDoneCallback\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNPREEDIT_DONE_CALLBACK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNPreeditDrawCallback` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13787,"byte_end":13808,"line_start":392,"line_end":392,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"pub const XNPreeditDrawCallback: &[u8; 20] = b\"preeditDrawCallback\\0\";","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13787,"byte_end":13808,"line_start":392,"line_end":392,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"pub const XNPreeditDrawCallback: &[u8; 20] = b\"preeditDrawCallback\\0\";","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":"XNPREEDIT_DRAW_CALLBACK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNPreeditDrawCallback` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:392:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m392\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNPreeditDrawCallback: &[u8; 20] = b\"preeditDrawCallback\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNPREEDIT_DRAW_CALLBACK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNPreeditCaretCallback` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13858,"byte_end":13880,"line_start":393,"line_end":393,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"pub const XNPreeditCaretCallback: &[u8; 21] = b\"preeditCaretCallback\\0\";","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13858,"byte_end":13880,"line_start":393,"line_end":393,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"pub const XNPreeditCaretCallback: &[u8; 21] = b\"preeditCaretCallback\\0\";","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":"XNPREEDIT_CARET_CALLBACK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNPreeditCaretCallback` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:393:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m393\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNPreeditCaretCallback: &[u8; 21] = b\"preeditCaretCallback\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNPREEDIT_CARET_CALLBACK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNPreeditStateNotifyCallback` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13931,"byte_end":13959,"line_start":394,"line_end":394,"column_start":11,"column_end":39,"is_primary":true,"text":[{"text":"pub const XNPreeditStateNotifyCallback: &[u8; 27] = b\"preeditStateNotifyCallback\\0\";","highlight_start":11,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":13931,"byte_end":13959,"line_start":394,"line_end":394,"column_start":11,"column_end":39,"is_primary":true,"text":[{"text":"pub const XNPreeditStateNotifyCallback: &[u8; 27] = b\"preeditStateNotifyCallback\\0\";","highlight_start":11,"highlight_end":39}],"label":null,"suggested_replacement":"XNPREEDIT_STATE_NOTIFY_CALLBACK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNPreeditStateNotifyCallback` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:394:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m394\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNPreeditStateNotifyCallback: &[u8; 27] = b\"preeditStateNotifyCallback\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNPREEDIT_STATE_NOTIFY_CALLBACK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNPreeditAttributes` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14016,"byte_end":14035,"line_start":395,"line_end":395,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const XNPreeditAttributes: &[u8; 18] = b\"preeditAttributes\\0\";","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14016,"byte_end":14035,"line_start":395,"line_end":395,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const XNPreeditAttributes: &[u8; 18] = b\"preeditAttributes\\0\";","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":"XNPREEDIT_ATTRIBUTES","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNPreeditAttributes` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:395:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m395\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNPreeditAttributes: &[u8; 18] = b\"preeditAttributes\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNPREEDIT_ATTRIBUTES`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNStatusStartCallback` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14083,"byte_end":14104,"line_start":396,"line_end":396,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"pub const XNStatusStartCallback: &[u8; 20] = b\"statusStartCallback\\0\";","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14083,"byte_end":14104,"line_start":396,"line_end":396,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"pub const XNStatusStartCallback: &[u8; 20] = b\"statusStartCallback\\0\";","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":"XNSTATUS_START_CALLBACK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNStatusStartCallback` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:396:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m396\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNStatusStartCallback: &[u8; 20] = b\"statusStartCallback\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNSTATUS_START_CALLBACK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNStatusDoneCallback` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14154,"byte_end":14174,"line_start":397,"line_end":397,"column_start":11,"column_end":31,"is_primary":true,"text":[{"text":"pub const XNStatusDoneCallback: &[u8; 19] = b\"statusDoneCallback\\0\";","highlight_start":11,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14154,"byte_end":14174,"line_start":397,"line_end":397,"column_start":11,"column_end":31,"is_primary":true,"text":[{"text":"pub const XNStatusDoneCallback: &[u8; 19] = b\"statusDoneCallback\\0\";","highlight_start":11,"highlight_end":31}],"label":null,"suggested_replacement":"XNSTATUS_DONE_CALLBACK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNStatusDoneCallback` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:397:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m397\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNStatusDoneCallback: &[u8; 19] = b\"statusDoneCallback\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNSTATUS_DONE_CALLBACK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNStatusDrawCallback` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14223,"byte_end":14243,"line_start":398,"line_end":398,"column_start":11,"column_end":31,"is_primary":true,"text":[{"text":"pub const XNStatusDrawCallback: &[u8; 19] = b\"statusDrawCallback\\0\";","highlight_start":11,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14223,"byte_end":14243,"line_start":398,"line_end":398,"column_start":11,"column_end":31,"is_primary":true,"text":[{"text":"pub const XNStatusDrawCallback: &[u8; 19] = b\"statusDrawCallback\\0\";","highlight_start":11,"highlight_end":31}],"label":null,"suggested_replacement":"XNSTATUS_DRAW_CALLBACK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNStatusDrawCallback` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:398:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m398\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNStatusDrawCallback: &[u8; 19] = b\"statusDrawCallback\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNSTATUS_DRAW_CALLBACK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNStatusAttributes` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14292,"byte_end":14310,"line_start":399,"line_end":399,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const XNStatusAttributes: &[u8; 17] = b\"statusAttributes\\0\";","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14292,"byte_end":14310,"line_start":399,"line_end":399,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const XNStatusAttributes: &[u8; 17] = b\"statusAttributes\\0\";","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"XNSTATUS_ATTRIBUTES","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNStatusAttributes` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:399:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m399\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNStatusAttributes: &[u8; 17] = b\"statusAttributes\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNSTATUS_ATTRIBUTES`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNArea` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14357,"byte_end":14363,"line_start":400,"line_end":400,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const XNArea: &[u8; 5] = b\"area\\0\";","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14357,"byte_end":14363,"line_start":400,"line_end":400,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"pub const XNArea: &[u8; 5] = b\"area\\0\";","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"XNAREA","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNArea` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:400:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m400\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNArea: &[u8; 5] = b\"area\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNAREA`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNAreaNeeded` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14397,"byte_end":14409,"line_start":401,"line_end":401,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const XNAreaNeeded: &[u8; 11] = b\"areaNeeded\\0\";","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14397,"byte_end":14409,"line_start":401,"line_end":401,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const XNAreaNeeded: &[u8; 11] = b\"areaNeeded\\0\";","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"XNAREA_NEEDED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNAreaNeeded` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:401:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m401\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNAreaNeeded: &[u8; 11] = b\"areaNeeded\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNAREA_NEEDED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNSpotLocation` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14450,"byte_end":14464,"line_start":402,"line_end":402,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const XNSpotLocation: &[u8; 13] = b\"spotLocation\\0\";","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14450,"byte_end":14464,"line_start":402,"line_end":402,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const XNSpotLocation: &[u8; 13] = b\"spotLocation\\0\";","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"XNSPOT_LOCATION","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNSpotLocation` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:402:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m402\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNSpotLocation: &[u8; 13] = b\"spotLocation\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNSPOT_LOCATION`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNColormap` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14507,"byte_end":14517,"line_start":403,"line_end":403,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const XNColormap: &[u8; 9] = b\"colorMap\\0\";","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14507,"byte_end":14517,"line_start":403,"line_end":403,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const XNColormap: &[u8; 9] = b\"colorMap\\0\";","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"XNCOLORMAP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNColormap` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:403:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m403\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNColormap: &[u8; 9] = b\"colorMap\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNCOLORMAP`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNStdColormap` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14555,"byte_end":14568,"line_start":404,"line_end":404,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const XNStdColormap: &[u8; 12] = b\"stdColorMap\\0\";","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14555,"byte_end":14568,"line_start":404,"line_end":404,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const XNStdColormap: &[u8; 12] = b\"stdColorMap\\0\";","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"XNSTD_COLORMAP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNStdColormap` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:404:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m404\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNStdColormap: &[u8; 12] = b\"stdColorMap\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNSTD_COLORMAP`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNForeground` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14610,"byte_end":14622,"line_start":405,"line_end":405,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const XNForeground: &[u8; 11] = b\"foreground\\0\";","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14610,"byte_end":14622,"line_start":405,"line_end":405,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const XNForeground: &[u8; 11] = b\"foreground\\0\";","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"XNFOREGROUND","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNForeground` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:405:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m405\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNForeground: &[u8; 11] = b\"foreground\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNFOREGROUND`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNBackground` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14663,"byte_end":14675,"line_start":406,"line_end":406,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const XNBackground: &[u8; 11] = b\"background\\0\";","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14663,"byte_end":14675,"line_start":406,"line_end":406,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const XNBackground: &[u8; 11] = b\"background\\0\";","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"XNBACKGROUND","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNBackground` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:406:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m406\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNBackground: &[u8; 11] = b\"background\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNBACKGROUND`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNBackgroundPixmap` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14716,"byte_end":14734,"line_start":407,"line_end":407,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const XNBackgroundPixmap: &[u8; 17] = b\"backgroundPixmap\\0\";","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14716,"byte_end":14734,"line_start":407,"line_end":407,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const XNBackgroundPixmap: &[u8; 17] = b\"backgroundPixmap\\0\";","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"XNBACKGROUND_PIXMAP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNBackgroundPixmap` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:407:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m407\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNBackgroundPixmap: &[u8; 17] = b\"backgroundPixmap\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNBACKGROUND_PIXMAP`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNFontSet` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14781,"byte_end":14790,"line_start":408,"line_end":408,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const XNFontSet: &[u8; 8] = b\"fontSet\\0\";","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14781,"byte_end":14790,"line_start":408,"line_end":408,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"pub const XNFontSet: &[u8; 8] = b\"fontSet\\0\";","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"XNFONT_SET","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNFontSet` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:408:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m408\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNFontSet: &[u8; 8] = b\"fontSet\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNFONT_SET`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNLineSpace` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14827,"byte_end":14838,"line_start":409,"line_end":409,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const XNLineSpace: &[u8; 10] = b\"lineSpace\\0\";","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14827,"byte_end":14838,"line_start":409,"line_end":409,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const XNLineSpace: &[u8; 10] = b\"lineSpace\\0\";","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"XNLINE_SPACE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNLineSpace` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:409:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m409\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNLineSpace: &[u8; 10] = b\"lineSpace\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNLINE_SPACE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNCursor` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14878,"byte_end":14886,"line_start":410,"line_end":410,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const XNCursor: &[u8; 7] = b\"cursor\\0\";","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14878,"byte_end":14886,"line_start":410,"line_end":410,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const XNCursor: &[u8; 7] = b\"cursor\\0\";","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"XNCURSOR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNCursor` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:410:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m410\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNCursor: &[u8; 7] = b\"cursor\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNCURSOR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNQueryIMValuesList` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14922,"byte_end":14941,"line_start":411,"line_end":411,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const XNQueryIMValuesList: &[u8; 18] = b\"queryIMValuesList\\0\";","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14922,"byte_end":14941,"line_start":411,"line_end":411,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const XNQueryIMValuesList: &[u8; 18] = b\"queryIMValuesList\\0\";","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":"XNQUERY_IMVALUES_LIST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNQueryIMValuesList` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:411:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m411\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNQueryIMValuesList: &[u8; 18] = b\"queryIMValuesList\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNQUERY_IMVALUES_LIST`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNQueryICValuesList` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14989,"byte_end":15008,"line_start":412,"line_end":412,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const XNQueryICValuesList: &[u8; 18] = b\"queryICValuesList\\0\";","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":14989,"byte_end":15008,"line_start":412,"line_end":412,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const XNQueryICValuesList: &[u8; 18] = b\"queryICValuesList\\0\";","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":"XNQUERY_ICVALUES_LIST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNQueryICValuesList` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:412:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m412\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNQueryICValuesList: &[u8; 18] = b\"queryICValuesList\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNQUERY_ICVALUES_LIST`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNVisiblePosition` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15056,"byte_end":15073,"line_start":413,"line_end":413,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const XNVisiblePosition: &[u8; 16] = b\"visiblePosition\\0\";","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15056,"byte_end":15073,"line_start":413,"line_end":413,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const XNVisiblePosition: &[u8; 16] = b\"visiblePosition\\0\";","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"XNVISIBLE_POSITION","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNVisiblePosition` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:413:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNVisiblePosition: &[u8; 16] = b\"visiblePosition\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNVISIBLE_POSITION`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNR6PreeditCallback` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15119,"byte_end":15138,"line_start":414,"line_end":414,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const XNR6PreeditCallback: &[u8; 18] = b\"r6PreeditCallback\\0\";","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15119,"byte_end":15138,"line_start":414,"line_end":414,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const XNR6PreeditCallback: &[u8; 18] = b\"r6PreeditCallback\\0\";","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":"XNR6_PREEDIT_CALLBACK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNR6PreeditCallback` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:414:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNR6PreeditCallback: &[u8; 18] = b\"r6PreeditCallback\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNR6_PREEDIT_CALLBACK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNStringConversionCallback` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15186,"byte_end":15212,"line_start":415,"line_end":415,"column_start":11,"column_end":37,"is_primary":true,"text":[{"text":"pub const XNStringConversionCallback: &[u8; 25] = b\"stringConversionCallback\\0\";","highlight_start":11,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15186,"byte_end":15212,"line_start":415,"line_end":415,"column_start":11,"column_end":37,"is_primary":true,"text":[{"text":"pub const XNStringConversionCallback: &[u8; 25] = b\"stringConversionCallback\\0\";","highlight_start":11,"highlight_end":37}],"label":null,"suggested_replacement":"XNSTRING_CONVERSION_CALLBACK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNStringConversionCallback` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:415:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m415\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNStringConversionCallback: &[u8; 25] = b\"stringConversionCallback\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNSTRING_CONVERSION_CALLBACK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNStringConversion` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15267,"byte_end":15285,"line_start":416,"line_end":416,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const XNStringConversion: &[u8; 17] = b\"stringConversion\\0\";","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15267,"byte_end":15285,"line_start":416,"line_end":416,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const XNStringConversion: &[u8; 17] = b\"stringConversion\\0\";","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"XNSTRING_CONVERSION","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNStringConversion` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:416:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m416\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNStringConversion: &[u8; 17] = b\"stringConversion\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNSTRING_CONVERSION`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNResetState` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15332,"byte_end":15344,"line_start":417,"line_end":417,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const XNResetState: &[u8; 11] = b\"resetState\\0\";","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15332,"byte_end":15344,"line_start":417,"line_end":417,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const XNResetState: &[u8; 11] = b\"resetState\\0\";","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"XNRESET_STATE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNResetState` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:417:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m417\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNResetState: &[u8; 11] = b\"resetState\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNRESET_STATE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNHotKey` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15385,"byte_end":15393,"line_start":418,"line_end":418,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const XNHotKey: &[u8; 7] = b\"hotKey\\0\";","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15385,"byte_end":15393,"line_start":418,"line_end":418,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const XNHotKey: &[u8; 7] = b\"hotKey\\0\";","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"XNHOT_KEY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNHotKey` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:418:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m418\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNHotKey: &[u8; 7] = b\"hotKey\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNHOT_KEY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNHotKeyState` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15429,"byte_end":15442,"line_start":419,"line_end":419,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const XNHotKeyState: &[u8; 12] = b\"hotKeyState\\0\";","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15429,"byte_end":15442,"line_start":419,"line_end":419,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const XNHotKeyState: &[u8; 12] = b\"hotKeyState\\0\";","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"XNHOT_KEY_STATE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNHotKeyState` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:419:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m419\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNHotKeyState: &[u8; 12] = b\"hotKeyState\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNHOT_KEY_STATE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNPreeditState` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15484,"byte_end":15498,"line_start":420,"line_end":420,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const XNPreeditState: &[u8; 13] = b\"preeditState\\0\";","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15484,"byte_end":15498,"line_start":420,"line_end":420,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const XNPreeditState: &[u8; 13] = b\"preeditState\\0\";","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"XNPREEDIT_STATE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNPreeditState` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:420:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m420\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNPreeditState: &[u8; 13] = b\"preeditState\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNPREEDIT_STATE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XNSeparatorofNestedList` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15541,"byte_end":15564,"line_start":421,"line_end":421,"column_start":11,"column_end":34,"is_primary":true,"text":[{"text":"pub const XNSeparatorofNestedList: &[u8; 22] = b\"separatorofNestedList\\0\";","highlight_start":11,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15541,"byte_end":15564,"line_start":421,"line_end":421,"column_start":11,"column_end":34,"is_primary":true,"text":[{"text":"pub const XNSeparatorofNestedList: &[u8; 22] = b\"separatorofNestedList\\0\";","highlight_start":11,"highlight_end":34}],"label":null,"suggested_replacement":"XNSEPARATOROF_NESTED_LIST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XNSeparatorofNestedList` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:421:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m421\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XNSeparatorofNestedList: &[u8; 22] = b\"separatorofNestedList\\0\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XNSEPARATOROF_NESTED_LIST`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XBufferOverflow` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15616,"byte_end":15631,"line_start":422,"line_end":422,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const XBufferOverflow: i32 = -1;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15616,"byte_end":15631,"line_start":422,"line_end":422,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const XBufferOverflow: i32 = -1;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"XBUFFER_OVERFLOW","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XBufferOverflow` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:422:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m422\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XBufferOverflow: i32 = -1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XBUFFER_OVERFLOW`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XLookupNone` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15653,"byte_end":15664,"line_start":423,"line_end":423,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const XLookupNone: u32 = 1;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15653,"byte_end":15664,"line_start":423,"line_end":423,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const XLookupNone: u32 = 1;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"XLOOKUP_NONE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XLookupNone` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:423:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m423\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XLookupNone: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XLOOKUP_NONE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XLookupChars` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15685,"byte_end":15697,"line_start":424,"line_end":424,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const XLookupChars: u32 = 2;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15685,"byte_end":15697,"line_start":424,"line_end":424,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const XLookupChars: u32 = 2;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"XLOOKUP_CHARS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XLookupChars` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:424:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m424\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XLookupChars: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XLOOKUP_CHARS`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XLookupKeySym` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15718,"byte_end":15731,"line_start":425,"line_end":425,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const XLookupKeySym: u32 = 3;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15718,"byte_end":15731,"line_start":425,"line_end":425,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"pub const XLookupKeySym: u32 = 3;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"XLOOKUP_KEY_SYM","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XLookupKeySym` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:425:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m425\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XLookupKeySym: u32 = 3;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XLOOKUP_KEY_SYM`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XLookupBoth` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15752,"byte_end":15763,"line_start":426,"line_end":426,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const XLookupBoth: u32 = 4;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15752,"byte_end":15763,"line_start":426,"line_end":426,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const XLookupBoth: u32 = 4;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"XLOOKUP_BOTH","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XLookupBoth` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:426:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m426\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XLookupBoth: u32 = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XLOOKUP_BOTH`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMReverse` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15784,"byte_end":15794,"line_start":427,"line_end":427,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const XIMReverse: u32 = 1;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15784,"byte_end":15794,"line_start":427,"line_end":427,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const XIMReverse: u32 = 1;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"XIMREVERSE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMReverse` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:427:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m427\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMReverse: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMREVERSE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMUnderline` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15815,"byte_end":15827,"line_start":428,"line_end":428,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const XIMUnderline: u32 = 2;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15815,"byte_end":15827,"line_start":428,"line_end":428,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const XIMUnderline: u32 = 2;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"XIMUNDERLINE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMUnderline` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:428:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m428\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMUnderline: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMUNDERLINE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMHighlight` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15848,"byte_end":15860,"line_start":429,"line_end":429,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const XIMHighlight: u32 = 4;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15848,"byte_end":15860,"line_start":429,"line_end":429,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const XIMHighlight: u32 = 4;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"XIMHIGHLIGHT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMHighlight` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:429:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMHighlight: u32 = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMHIGHLIGHT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMPrimary` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15881,"byte_end":15891,"line_start":430,"line_end":430,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const XIMPrimary: u32 = 32;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15881,"byte_end":15891,"line_start":430,"line_end":430,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"pub const XIMPrimary: u32 = 32;","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":"XIMPRIMARY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMPrimary` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:430:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m430\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMPrimary: u32 = 32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMPRIMARY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMSecondary` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15913,"byte_end":15925,"line_start":431,"line_end":431,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const XIMSecondary: u32 = 64;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15913,"byte_end":15925,"line_start":431,"line_end":431,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"pub const XIMSecondary: u32 = 64;","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"XIMSECONDARY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMSecondary` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:431:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m431\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMSecondary: u32 = 64;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMSECONDARY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMTertiary` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15947,"byte_end":15958,"line_start":432,"line_end":432,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const XIMTertiary: u32 = 128;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15947,"byte_end":15958,"line_start":432,"line_end":432,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"pub const XIMTertiary: u32 = 128;","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"XIMTERTIARY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMTertiary` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:432:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m432\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMTertiary: u32 = 128;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMTERTIARY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMVisibleToForward` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15981,"byte_end":16000,"line_start":433,"line_end":433,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const XIMVisibleToForward: u32 = 256;","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":15981,"byte_end":16000,"line_start":433,"line_end":433,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"pub const XIMVisibleToForward: u32 = 256;","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":"XIMVISIBLE_TO_FORWARD","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMVisibleToForward` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:433:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m433\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMVisibleToForward: u32 = 256;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMVISIBLE_TO_FORWARD`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMVisibleToBackword` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16023,"byte_end":16043,"line_start":434,"line_end":434,"column_start":11,"column_end":31,"is_primary":true,"text":[{"text":"pub const XIMVisibleToBackword: u32 = 512;","highlight_start":11,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16023,"byte_end":16043,"line_start":434,"line_end":434,"column_start":11,"column_end":31,"is_primary":true,"text":[{"text":"pub const XIMVisibleToBackword: u32 = 512;","highlight_start":11,"highlight_end":31}],"label":null,"suggested_replacement":"XIMVISIBLE_TO_BACKWORD","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMVisibleToBackword` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:434:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m434\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMVisibleToBackword: u32 = 512;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMVISIBLE_TO_BACKWORD`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMVisibleToCenter` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16066,"byte_end":16084,"line_start":435,"line_end":435,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const XIMVisibleToCenter: u32 = 1024;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16066,"byte_end":16084,"line_start":435,"line_end":435,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const XIMVisibleToCenter: u32 = 1024;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"XIMVISIBLE_TO_CENTER","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMVisibleToCenter` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:435:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m435\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMVisibleToCenter: u32 = 1024;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMVISIBLE_TO_CENTER`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMPreeditUnKnown` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16108,"byte_end":16125,"line_start":436,"line_end":436,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const XIMPreeditUnKnown: u32 = 0;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16108,"byte_end":16125,"line_start":436,"line_end":436,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const XIMPreeditUnKnown: u32 = 0;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"XIMPREEDIT_UN_KNOWN","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMPreeditUnKnown` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:436:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m436\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMPreeditUnKnown: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMPREEDIT_UN_KNOWN`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMPreeditEnable` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16146,"byte_end":16162,"line_start":437,"line_end":437,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const XIMPreeditEnable: u32 = 1;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16146,"byte_end":16162,"line_start":437,"line_end":437,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const XIMPreeditEnable: u32 = 1;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"XIMPREEDIT_ENABLE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMPreeditEnable` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:437:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m437\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMPreeditEnable: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMPREEDIT_ENABLE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMPreeditDisable` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16183,"byte_end":16200,"line_start":438,"line_end":438,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const XIMPreeditDisable: u32 = 2;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16183,"byte_end":16200,"line_start":438,"line_end":438,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const XIMPreeditDisable: u32 = 2;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"XIMPREEDIT_DISABLE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMPreeditDisable` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:438:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m438\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMPreeditDisable: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMPREEDIT_DISABLE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMInitialState` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16221,"byte_end":16236,"line_start":439,"line_end":439,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const XIMInitialState: u32 = 1;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16221,"byte_end":16236,"line_start":439,"line_end":439,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const XIMInitialState: u32 = 1;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"XIMINITIAL_STATE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMInitialState` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:439:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m439\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMInitialState: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMINITIAL_STATE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMPreserveState` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16257,"byte_end":16273,"line_start":440,"line_end":440,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const XIMPreserveState: u32 = 2;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16257,"byte_end":16273,"line_start":440,"line_end":440,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const XIMPreserveState: u32 = 2;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"XIMPRESERVE_STATE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMPreserveState` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:440:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m440\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMPreserveState: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMPRESERVE_STATE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMStringConversionLeftEdge` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16294,"byte_end":16321,"line_start":441,"line_end":441,"column_start":11,"column_end":38,"is_primary":true,"text":[{"text":"pub const XIMStringConversionLeftEdge: u32 = 1;","highlight_start":11,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16294,"byte_end":16321,"line_start":441,"line_end":441,"column_start":11,"column_end":38,"is_primary":true,"text":[{"text":"pub const XIMStringConversionLeftEdge: u32 = 1;","highlight_start":11,"highlight_end":38}],"label":null,"suggested_replacement":"XIMSTRING_CONVERSION_LEFT_EDGE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMStringConversionLeftEdge` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:441:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m441\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMStringConversionLeftEdge: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMSTRING_CONVERSION_LEFT_EDGE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMStringConversionRightEdge` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16342,"byte_end":16370,"line_start":442,"line_end":442,"column_start":11,"column_end":39,"is_primary":true,"text":[{"text":"pub const XIMStringConversionRightEdge: u32 = 2;","highlight_start":11,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16342,"byte_end":16370,"line_start":442,"line_end":442,"column_start":11,"column_end":39,"is_primary":true,"text":[{"text":"pub const XIMStringConversionRightEdge: u32 = 2;","highlight_start":11,"highlight_end":39}],"label":null,"suggested_replacement":"XIMSTRING_CONVERSION_RIGHT_EDGE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMStringConversionRightEdge` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:442:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m442\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMStringConversionRightEdge: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMSTRING_CONVERSION_RIGHT_EDGE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMStringConversionTopEdge` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16391,"byte_end":16417,"line_start":443,"line_end":443,"column_start":11,"column_end":37,"is_primary":true,"text":[{"text":"pub const XIMStringConversionTopEdge: u32 = 4;","highlight_start":11,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16391,"byte_end":16417,"line_start":443,"line_end":443,"column_start":11,"column_end":37,"is_primary":true,"text":[{"text":"pub const XIMStringConversionTopEdge: u32 = 4;","highlight_start":11,"highlight_end":37}],"label":null,"suggested_replacement":"XIMSTRING_CONVERSION_TOP_EDGE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMStringConversionTopEdge` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:443:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m443\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMStringConversionTopEdge: u32 = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMSTRING_CONVERSION_TOP_EDGE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMStringConversionBottomEdge` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16438,"byte_end":16467,"line_start":444,"line_end":444,"column_start":11,"column_end":40,"is_primary":true,"text":[{"text":"pub const XIMStringConversionBottomEdge: u32 = 8;","highlight_start":11,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16438,"byte_end":16467,"line_start":444,"line_end":444,"column_start":11,"column_end":40,"is_primary":true,"text":[{"text":"pub const XIMStringConversionBottomEdge: u32 = 8;","highlight_start":11,"highlight_end":40}],"label":null,"suggested_replacement":"XIMSTRING_CONVERSION_BOTTOM_EDGE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMStringConversionBottomEdge` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:444:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m444\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMStringConversionBottomEdge: u32 = 8;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMSTRING_CONVERSION_BOTTOM_EDGE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMStringConversionConcealed` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16488,"byte_end":16516,"line_start":445,"line_end":445,"column_start":11,"column_end":39,"is_primary":true,"text":[{"text":"pub const XIMStringConversionConcealed: u32 = 16;","highlight_start":11,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16488,"byte_end":16516,"line_start":445,"line_end":445,"column_start":11,"column_end":39,"is_primary":true,"text":[{"text":"pub const XIMStringConversionConcealed: u32 = 16;","highlight_start":11,"highlight_end":39}],"label":null,"suggested_replacement":"XIMSTRING_CONVERSION_CONCEALED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMStringConversionConcealed` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:445:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m445\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMStringConversionConcealed: u32 = 16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMSTRING_CONVERSION_CONCEALED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMStringConversionWrapped` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16538,"byte_end":16564,"line_start":446,"line_end":446,"column_start":11,"column_end":37,"is_primary":true,"text":[{"text":"pub const XIMStringConversionWrapped: u32 = 32;","highlight_start":11,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16538,"byte_end":16564,"line_start":446,"line_end":446,"column_start":11,"column_end":37,"is_primary":true,"text":[{"text":"pub const XIMStringConversionWrapped: u32 = 32;","highlight_start":11,"highlight_end":37}],"label":null,"suggested_replacement":"XIMSTRING_CONVERSION_WRAPPED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMStringConversionWrapped` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:446:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m446\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMStringConversionWrapped: u32 = 32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMSTRING_CONVERSION_WRAPPED`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMStringConversionBuffer` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16586,"byte_end":16611,"line_start":447,"line_end":447,"column_start":11,"column_end":36,"is_primary":true,"text":[{"text":"pub const XIMStringConversionBuffer: u32 = 1;","highlight_start":11,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16586,"byte_end":16611,"line_start":447,"line_end":447,"column_start":11,"column_end":36,"is_primary":true,"text":[{"text":"pub const XIMStringConversionBuffer: u32 = 1;","highlight_start":11,"highlight_end":36}],"label":null,"suggested_replacement":"XIMSTRING_CONVERSION_BUFFER","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMStringConversionBuffer` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:447:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m447\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMStringConversionBuffer: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMSTRING_CONVERSION_BUFFER`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMStringConversionLine` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16632,"byte_end":16655,"line_start":448,"line_end":448,"column_start":11,"column_end":34,"is_primary":true,"text":[{"text":"pub const XIMStringConversionLine: u32 = 2;","highlight_start":11,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16632,"byte_end":16655,"line_start":448,"line_end":448,"column_start":11,"column_end":34,"is_primary":true,"text":[{"text":"pub const XIMStringConversionLine: u32 = 2;","highlight_start":11,"highlight_end":34}],"label":null,"suggested_replacement":"XIMSTRING_CONVERSION_LINE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMStringConversionLine` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:448:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m448\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMStringConversionLine: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMSTRING_CONVERSION_LINE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMStringConversionWord` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16676,"byte_end":16699,"line_start":449,"line_end":449,"column_start":11,"column_end":34,"is_primary":true,"text":[{"text":"pub const XIMStringConversionWord: u32 = 3;","highlight_start":11,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16676,"byte_end":16699,"line_start":449,"line_end":449,"column_start":11,"column_end":34,"is_primary":true,"text":[{"text":"pub const XIMStringConversionWord: u32 = 3;","highlight_start":11,"highlight_end":34}],"label":null,"suggested_replacement":"XIMSTRING_CONVERSION_WORD","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMStringConversionWord` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:449:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m449\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMStringConversionWord: u32 = 3;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMSTRING_CONVERSION_WORD`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMStringConversionChar` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16720,"byte_end":16743,"line_start":450,"line_end":450,"column_start":11,"column_end":34,"is_primary":true,"text":[{"text":"pub const XIMStringConversionChar: u32 = 4;","highlight_start":11,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16720,"byte_end":16743,"line_start":450,"line_end":450,"column_start":11,"column_end":34,"is_primary":true,"text":[{"text":"pub const XIMStringConversionChar: u32 = 4;","highlight_start":11,"highlight_end":34}],"label":null,"suggested_replacement":"XIMSTRING_CONVERSION_CHAR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMStringConversionChar` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:450:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m450\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMStringConversionChar: u32 = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMSTRING_CONVERSION_CHAR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMStringConversionSubstitution` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16764,"byte_end":16795,"line_start":451,"line_end":451,"column_start":11,"column_end":42,"is_primary":true,"text":[{"text":"pub const XIMStringConversionSubstitution: u32 = 1;","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16764,"byte_end":16795,"line_start":451,"line_end":451,"column_start":11,"column_end":42,"is_primary":true,"text":[{"text":"pub const XIMStringConversionSubstitution: u32 = 1;","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":"XIMSTRING_CONVERSION_SUBSTITUTION","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMStringConversionSubstitution` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:451:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m451\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMStringConversionSubstitution: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMSTRING_CONVERSION_SUBSTITUTION`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMStringConversionRetrieval` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16816,"byte_end":16844,"line_start":452,"line_end":452,"column_start":11,"column_end":39,"is_primary":true,"text":[{"text":"pub const XIMStringConversionRetrieval: u32 = 2;","highlight_start":11,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16816,"byte_end":16844,"line_start":452,"line_end":452,"column_start":11,"column_end":39,"is_primary":true,"text":[{"text":"pub const XIMStringConversionRetrieval: u32 = 2;","highlight_start":11,"highlight_end":39}],"label":null,"suggested_replacement":"XIMSTRING_CONVERSION_RETRIEVAL","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMStringConversionRetrieval` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:452:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m452\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMStringConversionRetrieval: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMSTRING_CONVERSION_RETRIEVAL`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMHotKeyStateON` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16865,"byte_end":16881,"line_start":453,"line_end":453,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const XIMHotKeyStateON: u32 = 1;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16865,"byte_end":16881,"line_start":453,"line_end":453,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"pub const XIMHotKeyStateON: u32 = 1;","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"XIMHOT_KEY_STATE_ON","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMHotKeyStateON` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:453:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m453\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMHotKeyStateON: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMHOT_KEY_STATE_ON`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMHotKeyStateOFF` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16902,"byte_end":16919,"line_start":454,"line_end":454,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const XIMHotKeyStateOFF: u32 = 2;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":16902,"byte_end":16919,"line_start":454,"line_end":454,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"pub const XIMHotKeyStateOFF: u32 = 2;","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"XIMHOT_KEY_STATE_OFF","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMHotKeyStateOFF` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:454:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m454\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMHotKeyStateOFF: u32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMHOT_KEY_STATE_OFF`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XOrientation_XOMOrientation_LTR_TTB` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":61724,"byte_end":61759,"line_start":1964,"line_end":1964,"column_start":11,"column_end":46,"is_primary":true,"text":[{"text":"pub const XOrientation_XOMOrientation_LTR_TTB: XOrientation = 0;","highlight_start":11,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":61724,"byte_end":61759,"line_start":1964,"line_end":1964,"column_start":11,"column_end":46,"is_primary":true,"text":[{"text":"pub const XOrientation_XOMOrientation_LTR_TTB: XOrientation = 0;","highlight_start":11,"highlight_end":46}],"label":null,"suggested_replacement":"XORIENTATION_XOMORIENTATION_LTR_TTB","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XOrientation_XOMOrientation_LTR_TTB` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:1964:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1964\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XOrientation_XOMOrientation_LTR_TTB: XOrientation = 0;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XORIENTATION_XOMORIENTATION_LTR_TTB`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XOrientation_XOMOrientation_RTL_TTB` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":61789,"byte_end":61824,"line_start":1965,"line_end":1965,"column_start":11,"column_end":46,"is_primary":true,"text":[{"text":"pub const XOrientation_XOMOrientation_RTL_TTB: XOrientation = 1;","highlight_start":11,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":61789,"byte_end":61824,"line_start":1965,"line_end":1965,"column_start":11,"column_end":46,"is_primary":true,"text":[{"text":"pub const XOrientation_XOMOrientation_RTL_TTB: XOrientation = 1;","highlight_start":11,"highlight_end":46}],"label":null,"suggested_replacement":"XORIENTATION_XOMORIENTATION_RTL_TTB","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XOrientation_XOMOrientation_RTL_TTB` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:1965:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1965\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XOrientation_XOMOrientation_RTL_TTB: XOrientation = 1;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XORIENTATION_XOMORIENTATION_RTL_TTB`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XOrientation_XOMOrientation_TTB_LTR` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":61854,"byte_end":61889,"line_start":1966,"line_end":1966,"column_start":11,"column_end":46,"is_primary":true,"text":[{"text":"pub const XOrientation_XOMOrientation_TTB_LTR: XOrientation = 2;","highlight_start":11,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":61854,"byte_end":61889,"line_start":1966,"line_end":1966,"column_start":11,"column_end":46,"is_primary":true,"text":[{"text":"pub const XOrientation_XOMOrientation_TTB_LTR: XOrientation = 2;","highlight_start":11,"highlight_end":46}],"label":null,"suggested_replacement":"XORIENTATION_XOMORIENTATION_TTB_LTR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XOrientation_XOMOrientation_TTB_LTR` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:1966:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1966\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XOrientation_XOMOrientation_TTB_LTR: XOrientation = 2;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XORIENTATION_XOMORIENTATION_TTB_LTR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XOrientation_XOMOrientation_TTB_RTL` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":61919,"byte_end":61954,"line_start":1967,"line_end":1967,"column_start":11,"column_end":46,"is_primary":true,"text":[{"text":"pub const XOrientation_XOMOrientation_TTB_RTL: XOrientation = 3;","highlight_start":11,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":61919,"byte_end":61954,"line_start":1967,"line_end":1967,"column_start":11,"column_end":46,"is_primary":true,"text":[{"text":"pub const XOrientation_XOMOrientation_TTB_RTL: XOrientation = 3;","highlight_start":11,"highlight_end":46}],"label":null,"suggested_replacement":"XORIENTATION_XOMORIENTATION_TTB_RTL","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XOrientation_XOMOrientation_TTB_RTL` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:1967:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1967\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XOrientation_XOMOrientation_TTB_RTL: XOrientation = 3;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XORIENTATION_XOMORIENTATION_TTB_RTL`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XOrientation_XOMOrientation_Context` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":61984,"byte_end":62019,"line_start":1968,"line_end":1968,"column_start":11,"column_end":46,"is_primary":true,"text":[{"text":"pub const XOrientation_XOMOrientation_Context: XOrientation = 4;","highlight_start":11,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":61984,"byte_end":62019,"line_start":1968,"line_end":1968,"column_start":11,"column_end":46,"is_primary":true,"text":[{"text":"pub const XOrientation_XOMOrientation_Context: XOrientation = 4;","highlight_start":11,"highlight_end":46}],"label":null,"suggested_replacement":"XORIENTATION_XOMORIENTATION_CONTEXT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XOrientation_XOMOrientation_Context` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:1968:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1968\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XOrientation_XOMOrientation_Context: XOrientation = 4;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XORIENTATION_XOMORIENTATION_CONTEXT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMCaretDirection_XIMForwardChar` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68379,"byte_end":68411,"line_start":2170,"line_end":2170,"column_start":11,"column_end":43,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMForwardChar: XIMCaretDirection = 0;","highlight_start":11,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68379,"byte_end":68411,"line_start":2170,"line_end":2170,"column_start":11,"column_end":43,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMForwardChar: XIMCaretDirection = 0;","highlight_start":11,"highlight_end":43}],"label":null,"suggested_replacement":"XIMCARET_DIRECTION_XIMFORWARD_CHAR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMCaretDirection_XIMForwardChar` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2170:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMCaretDirection_XIMForwardChar: XIMCaretDirection = 0;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMCARET_DIRECTION_XIMFORWARD_CHAR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMCaretDirection_XIMBackwardChar` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68446,"byte_end":68479,"line_start":2171,"line_end":2171,"column_start":11,"column_end":44,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMBackwardChar: XIMCaretDirection = 1;","highlight_start":11,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68446,"byte_end":68479,"line_start":2171,"line_end":2171,"column_start":11,"column_end":44,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMBackwardChar: XIMCaretDirection = 1;","highlight_start":11,"highlight_end":44}],"label":null,"suggested_replacement":"XIMCARET_DIRECTION_XIMBACKWARD_CHAR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMCaretDirection_XIMBackwardChar` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2171:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMCaretDirection_XIMBackwardChar: XIMCaretDirection = 1;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMCARET_DIRECTION_XIMBACKWARD_CHAR`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMCaretDirection_XIMForwardWord` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68514,"byte_end":68546,"line_start":2172,"line_end":2172,"column_start":11,"column_end":43,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMForwardWord: XIMCaretDirection = 2;","highlight_start":11,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68514,"byte_end":68546,"line_start":2172,"line_end":2172,"column_start":11,"column_end":43,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMForwardWord: XIMCaretDirection = 2;","highlight_start":11,"highlight_end":43}],"label":null,"suggested_replacement":"XIMCARET_DIRECTION_XIMFORWARD_WORD","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMCaretDirection_XIMForwardWord` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2172:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMCaretDirection_XIMForwardWord: XIMCaretDirection = 2;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMCARET_DIRECTION_XIMFORWARD_WORD`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMCaretDirection_XIMBackwardWord` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68581,"byte_end":68614,"line_start":2173,"line_end":2173,"column_start":11,"column_end":44,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMBackwardWord: XIMCaretDirection = 3;","highlight_start":11,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68581,"byte_end":68614,"line_start":2173,"line_end":2173,"column_start":11,"column_end":44,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMBackwardWord: XIMCaretDirection = 3;","highlight_start":11,"highlight_end":44}],"label":null,"suggested_replacement":"XIMCARET_DIRECTION_XIMBACKWARD_WORD","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMCaretDirection_XIMBackwardWord` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2173:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMCaretDirection_XIMBackwardWord: XIMCaretDirection = 3;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMCARET_DIRECTION_XIMBACKWARD_WORD`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMCaretDirection_XIMCaretUp` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68649,"byte_end":68677,"line_start":2174,"line_end":2174,"column_start":11,"column_end":39,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMCaretUp: XIMCaretDirection = 4;","highlight_start":11,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68649,"byte_end":68677,"line_start":2174,"line_end":2174,"column_start":11,"column_end":39,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMCaretUp: XIMCaretDirection = 4;","highlight_start":11,"highlight_end":39}],"label":null,"suggested_replacement":"XIMCARET_DIRECTION_XIMCARET_UP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMCaretDirection_XIMCaretUp` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2174:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMCaretDirection_XIMCaretUp: XIMCaretDirection = 4;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMCARET_DIRECTION_XIMCARET_UP`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMCaretDirection_XIMCaretDown` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68712,"byte_end":68742,"line_start":2175,"line_end":2175,"column_start":11,"column_end":41,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMCaretDown: XIMCaretDirection = 5;","highlight_start":11,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68712,"byte_end":68742,"line_start":2175,"line_end":2175,"column_start":11,"column_end":41,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMCaretDown: XIMCaretDirection = 5;","highlight_start":11,"highlight_end":41}],"label":null,"suggested_replacement":"XIMCARET_DIRECTION_XIMCARET_DOWN","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMCaretDirection_XIMCaretDown` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2175:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMCaretDirection_XIMCaretDown: XIMCaretDirection = 5;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMCARET_DIRECTION_XIMCARET_DOWN`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMCaretDirection_XIMNextLine` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68777,"byte_end":68806,"line_start":2176,"line_end":2176,"column_start":11,"column_end":40,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMNextLine: XIMCaretDirection = 6;","highlight_start":11,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68777,"byte_end":68806,"line_start":2176,"line_end":2176,"column_start":11,"column_end":40,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMNextLine: XIMCaretDirection = 6;","highlight_start":11,"highlight_end":40}],"label":null,"suggested_replacement":"XIMCARET_DIRECTION_XIMNEXT_LINE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMCaretDirection_XIMNextLine` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2176:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMCaretDirection_XIMNextLine: XIMCaretDirection = 6;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMCARET_DIRECTION_XIMNEXT_LINE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMCaretDirection_XIMPreviousLine` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68841,"byte_end":68874,"line_start":2177,"line_end":2177,"column_start":11,"column_end":44,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMPreviousLine: XIMCaretDirection = 7;","highlight_start":11,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68841,"byte_end":68874,"line_start":2177,"line_end":2177,"column_start":11,"column_end":44,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMPreviousLine: XIMCaretDirection = 7;","highlight_start":11,"highlight_end":44}],"label":null,"suggested_replacement":"XIMCARET_DIRECTION_XIMPREVIOUS_LINE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMCaretDirection_XIMPreviousLine` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2177:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMCaretDirection_XIMPreviousLine: XIMCaretDirection = 7;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMCARET_DIRECTION_XIMPREVIOUS_LINE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMCaretDirection_XIMLineStart` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68909,"byte_end":68939,"line_start":2178,"line_end":2178,"column_start":11,"column_end":41,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMLineStart: XIMCaretDirection = 8;","highlight_start":11,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68909,"byte_end":68939,"line_start":2178,"line_end":2178,"column_start":11,"column_end":41,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMLineStart: XIMCaretDirection = 8;","highlight_start":11,"highlight_end":41}],"label":null,"suggested_replacement":"XIMCARET_DIRECTION_XIMLINE_START","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMCaretDirection_XIMLineStart` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2178:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMCaretDirection_XIMLineStart: XIMCaretDirection = 8;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMCARET_DIRECTION_XIMLINE_START`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMCaretDirection_XIMLineEnd` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68974,"byte_end":69002,"line_start":2179,"line_end":2179,"column_start":11,"column_end":39,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMLineEnd: XIMCaretDirection = 9;","highlight_start":11,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":68974,"byte_end":69002,"line_start":2179,"line_end":2179,"column_start":11,"column_end":39,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMLineEnd: XIMCaretDirection = 9;","highlight_start":11,"highlight_end":39}],"label":null,"suggested_replacement":"XIMCARET_DIRECTION_XIMLINE_END","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMCaretDirection_XIMLineEnd` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2179:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMCaretDirection_XIMLineEnd: XIMCaretDirection = 9;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMCARET_DIRECTION_XIMLINE_END`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMCaretDirection_XIMAbsolutePosition` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":69037,"byte_end":69074,"line_start":2180,"line_end":2180,"column_start":11,"column_end":48,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMAbsolutePosition: XIMCaretDirection = 10;","highlight_start":11,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":69037,"byte_end":69074,"line_start":2180,"line_end":2180,"column_start":11,"column_end":48,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMAbsolutePosition: XIMCaretDirection = 10;","highlight_start":11,"highlight_end":48}],"label":null,"suggested_replacement":"XIMCARET_DIRECTION_XIMABSOLUTE_POSITION","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMCaretDirection_XIMAbsolutePosition` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2180:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2180\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMCaretDirection_XIMAbsolutePosition: XIMCaretDirection = 10;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMCARET_DIRECTION_XIMABSOLUTE_POSITION`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMCaretDirection_XIMDontChange` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":69110,"byte_end":69141,"line_start":2181,"line_end":2181,"column_start":11,"column_end":42,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMDontChange: XIMCaretDirection = 11;","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":69110,"byte_end":69141,"line_start":2181,"line_end":2181,"column_start":11,"column_end":42,"is_primary":true,"text":[{"text":"pub const XIMCaretDirection_XIMDontChange: XIMCaretDirection = 11;","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":"XIMCARET_DIRECTION_XIMDONT_CHANGE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMCaretDirection_XIMDontChange` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2181:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMCaretDirection_XIMDontChange: XIMCaretDirection = 11;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMCARET_DIRECTION_XIMDONT_CHANGE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMCaretStyle_XIMIsInvisible` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":70447,"byte_end":70475,"line_start":2220,"line_end":2220,"column_start":11,"column_end":39,"is_primary":true,"text":[{"text":"pub const XIMCaretStyle_XIMIsInvisible: XIMCaretStyle = 0;","highlight_start":11,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":70447,"byte_end":70475,"line_start":2220,"line_end":2220,"column_start":11,"column_end":39,"is_primary":true,"text":[{"text":"pub const XIMCaretStyle_XIMIsInvisible: XIMCaretStyle = 0;","highlight_start":11,"highlight_end":39}],"label":null,"suggested_replacement":"XIMCARET_STYLE_XIMIS_INVISIBLE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMCaretStyle_XIMIsInvisible` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2220:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMCaretStyle_XIMIsInvisible: XIMCaretStyle = 0;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMCARET_STYLE_XIMIS_INVISIBLE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMCaretStyle_XIMIsPrimary` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":70506,"byte_end":70532,"line_start":2221,"line_end":2221,"column_start":11,"column_end":37,"is_primary":true,"text":[{"text":"pub const XIMCaretStyle_XIMIsPrimary: XIMCaretStyle = 1;","highlight_start":11,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":70506,"byte_end":70532,"line_start":2221,"line_end":2221,"column_start":11,"column_end":37,"is_primary":true,"text":[{"text":"pub const XIMCaretStyle_XIMIsPrimary: XIMCaretStyle = 1;","highlight_start":11,"highlight_end":37}],"label":null,"suggested_replacement":"XIMCARET_STYLE_XIMIS_PRIMARY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMCaretStyle_XIMIsPrimary` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2221:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMCaretStyle_XIMIsPrimary: XIMCaretStyle = 1;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMCARET_STYLE_XIMIS_PRIMARY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMCaretStyle_XIMIsSecondary` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":70563,"byte_end":70591,"line_start":2222,"line_end":2222,"column_start":11,"column_end":39,"is_primary":true,"text":[{"text":"pub const XIMCaretStyle_XIMIsSecondary: XIMCaretStyle = 2;","highlight_start":11,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":70563,"byte_end":70591,"line_start":2222,"line_end":2222,"column_start":11,"column_end":39,"is_primary":true,"text":[{"text":"pub const XIMCaretStyle_XIMIsSecondary: XIMCaretStyle = 2;","highlight_start":11,"highlight_end":39}],"label":null,"suggested_replacement":"XIMCARET_STYLE_XIMIS_SECONDARY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMCaretStyle_XIMIsSecondary` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2222:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMCaretStyle_XIMIsSecondary: XIMCaretStyle = 2;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMCARET_STYLE_XIMIS_SECONDARY`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMStatusDataType_XIMTextType` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":71198,"byte_end":71227,"line_start":2241,"line_end":2241,"column_start":11,"column_end":40,"is_primary":true,"text":[{"text":"pub const XIMStatusDataType_XIMTextType: XIMStatusDataType = 0;","highlight_start":11,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":71198,"byte_end":71227,"line_start":2241,"line_end":2241,"column_start":11,"column_end":40,"is_primary":true,"text":[{"text":"pub const XIMStatusDataType_XIMTextType: XIMStatusDataType = 0;","highlight_start":11,"highlight_end":40}],"label":null,"suggested_replacement":"XIMSTATUS_DATA_TYPE_XIMTEXT_TYPE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMStatusDataType_XIMTextType` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2241:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMStatusDataType_XIMTextType: XIMStatusDataType = 0;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMSTATUS_DATA_TYPE_XIMTEXT_TYPE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `XIMStatusDataType_XIMBitmapType` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":71262,"byte_end":71293,"line_start":2242,"line_end":2242,"column_start":11,"column_end":42,"is_primary":true,"text":[{"text":"pub const XIMStatusDataType_XIMBitmapType: XIMStatusDataType = 1;","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":71262,"byte_end":71293,"line_start":2242,"line_end":2242,"column_start":11,"column_end":42,"is_primary":true,"text":[{"text":"pub const XIMStatusDataType_XIMBitmapType: XIMStatusDataType = 1;","highlight_start":11,"highlight_end":42}],"label":null,"suggested_replacement":"XIMSTATUS_DATA_TYPE_XIMBITMAP_TYPE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `XIMStatusDataType_XIMBitmapType` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2242:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2242\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const XIMStatusDataType_XIMBitmapType: XIMStatusDataType = 1;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `XIMSTATUS_DATA_TYPE_XIMBITMAP_TYPE`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`extern` fn uses type `CStr`, which is not FFI-safe","code":{"code":"improper_ctypes_definitions","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":1659,"byte_end":1674,"line_start":52,"line_end":52,"column_start":41,"column_end":56,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn log_debug(fmt: &std::ffi::CStr, args: *mut libc::c_void) {","highlight_start":41,"highlight_end":56}],"label":"not FFI-safe","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider passing a `*const std::ffi::c_char` instead, and use `CStr::as_ptr()`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`CStr`/`CString` do not have a guaranteed layout","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(improper_ctypes_definitions)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `extern` fn uses type `CStr`, which is not FFI-safe\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:52:41\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn log_debug(fmt: &std::ffi::CStr, args: *mut libc::c_void) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mnot FFI-safe\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider passing a `*const std::ffi::c_char` instead, and use `CStr::as_ptr()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `CStr`/`CString` do not have a guaranteed layout\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(improper_ctypes_definitions)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function `MXError` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":2511,"byte_end":2518,"line_start":82,"line_end":82,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"pub fn MXError(display: &Display, error: &XErrorEvent) -> i32 {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":2511,"byte_end":2518,"line_start":82,"line_end":82,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"pub fn MXError(display: &Display, error: &XErrorEvent) -> i32 {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"mxerror","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `MXError` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:82:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn MXError(display: &Display, error: &XErrorEvent) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mxerror`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `X_GetGeometry` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":2796,"byte_end":2809,"line_start":88,"line_end":88,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"            X_GetGeometry => {","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":2796,"byte_end":2809,"line_start":88,"line_end":88,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"            X_GetGeometry => {","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":"x_get_geometry","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X_GetGeometry` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:88:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            X_GetGeometry => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `x_get_geometry`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `X_GetWindowAttributes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":2953,"byte_end":2974,"line_start":93,"line_end":93,"column_start":13,"column_end":34,"is_primary":true,"text":[{"text":"            X_GetWindowAttributes => {","highlight_start":13,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":2953,"byte_end":2974,"line_start":93,"line_end":93,"column_start":13,"column_end":34,"is_primary":true,"text":[{"text":"            X_GetWindowAttributes => {","highlight_start":13,"highlight_end":34}],"label":null,"suggested_replacement":"x_get_window_attributes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X_GetWindowAttributes` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:93:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            X_GetWindowAttributes => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `x_get_window_attributes`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `X_QueryTree` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":3116,"byte_end":3127,"line_start":98,"line_end":98,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"            X_QueryTree => {","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":3116,"byte_end":3127,"line_start":98,"line_end":98,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"            X_QueryTree => {","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"x_query_tree","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X_QueryTree` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:98:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            X_QueryTree => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `x_query_tree`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `X_QueryColors` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":3269,"byte_end":3282,"line_start":103,"line_end":103,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"            X_QueryColors => {","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":3269,"byte_end":3282,"line_start":103,"line_end":103,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"            X_QueryColors => {","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":"x_query_colors","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X_QueryColors` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:103:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            X_QueryColors => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `x_query_colors`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function `test_MXError` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":3925,"byte_end":3937,"line_start":126,"line_end":126,"column_start":8,"column_end":20,"is_primary":true,"text":[{"text":"pub fn test_MXError() {","highlight_start":8,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":3925,"byte_end":3937,"line_start":126,"line_end":126,"column_start":8,"column_end":20,"is_primary":true,"text":[{"text":"pub fn test_MXError() {","highlight_start":8,"highlight_end":20}],"label":null,"suggested_replacement":"test_mxerror","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `test_MXError` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:126:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn test_MXError() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `test_mxerror`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"dereferencing a null pointer","code":{"code":"deref_nullptr","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":4246,"byte_end":4279,"line_start":137,"line_end":137,"column_start":32,"column_end":65,"is_primary":true,"text":[{"text":"    let rc = MXError(unsafe { &*std::ptr::null::<ffi::Display>() }, &err);","highlight_start":32,"highlight_end":65}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(deref_nullptr)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: dereferencing a null pointer\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:137:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let rc = MXError(unsafe { &*std::ptr::null::<ffi::Display>() }, &err);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(deref_nullptr)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function `findSubWindow` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":4375,"byte_end":4388,"line_start":141,"line_end":141,"column_start":8,"column_end":21,"is_primary":true,"text":[{"text":"pub fn findSubWindow(","highlight_start":8,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":4375,"byte_end":4388,"line_start":141,"line_end":141,"column_start":8,"column_end":21,"is_primary":true,"text":[{"text":"pub fn findSubWindow(","highlight_start":8,"highlight_end":21}],"label":null,"suggested_replacement":"find_sub_window","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `findSubWindow` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:141:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn findSubWindow(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `find_sub_window`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ButtonPressMask` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":8944,"byte_end":8959,"line_start":287,"line_end":287,"column_start":7,"column_end":22,"is_primary":true,"text":[{"text":"const ButtonPressMask: i32 = 0;","highlight_start":7,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":8944,"byte_end":8959,"line_start":287,"line_end":287,"column_start":7,"column_end":22,"is_primary":true,"text":[{"text":"const ButtonPressMask: i32 = 0;","highlight_start":7,"highlight_end":22}],"label":null,"suggested_replacement":"BUTTON_PRESS_MASK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ButtonPressMask` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:287:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst ButtonPressMask: i32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BUTTON_PRESS_MASK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GrabModeSync` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":8976,"byte_end":8988,"line_start":288,"line_end":288,"column_start":7,"column_end":19,"is_primary":true,"text":[{"text":"const GrabModeSync: i32 = 0;","highlight_start":7,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":8976,"byte_end":8988,"line_start":288,"line_end":288,"column_start":7,"column_end":19,"is_primary":true,"text":[{"text":"const GrabModeSync: i32 = 0;","highlight_start":7,"highlight_end":19}],"label":null,"suggested_replacement":"GRAB_MODE_SYNC","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GrabModeSync` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:288:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst GrabModeSync: i32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GRAB_MODE_SYNC`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GrabModeAsync` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":9005,"byte_end":9018,"line_start":289,"line_end":289,"column_start":7,"column_end":20,"is_primary":true,"text":[{"text":"const GrabModeAsync: i32 = 1;","highlight_start":7,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":9005,"byte_end":9018,"line_start":289,"line_end":289,"column_start":7,"column_end":20,"is_primary":true,"text":[{"text":"const GrabModeAsync: i32 = 1;","highlight_start":7,"highlight_end":20}],"label":null,"suggested_replacement":"GRAB_MODE_ASYNC","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GrabModeAsync` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:289:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst GrabModeAsync: i32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GRAB_MODE_ASYNC`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `GrabSuccess` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":9035,"byte_end":9046,"line_start":290,"line_end":290,"column_start":7,"column_end":18,"is_primary":true,"text":[{"text":"const GrabSuccess: i32 = 0;","highlight_start":7,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":9035,"byte_end":9046,"line_start":290,"line_end":290,"column_start":7,"column_end":18,"is_primary":true,"text":[{"text":"const GrabSuccess: i32 = 0;","highlight_start":7,"highlight_end":18}],"label":null,"suggested_replacement":"GRAB_SUCCESS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `GrabSuccess` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:290:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m290\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst GrabSuccess: i32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GRAB_SUCCESS`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `SyncPointer` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":9063,"byte_end":9074,"line_start":291,"line_end":291,"column_start":7,"column_end":18,"is_primary":true,"text":[{"text":"const SyncPointer: i32 = 0;","highlight_start":7,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":9063,"byte_end":9074,"line_start":291,"line_end":291,"column_start":7,"column_end":18,"is_primary":true,"text":[{"text":"const SyncPointer: i32 = 0;","highlight_start":7,"highlight_end":18}],"label":null,"suggested_replacement":"SYNC_POINTER","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `SyncPointer` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:291:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m291\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst SyncPointer: i32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SYNC_POINTER`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `CurrentTime` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":9091,"byte_end":9102,"line_start":292,"line_end":292,"column_start":7,"column_end":18,"is_primary":true,"text":[{"text":"const CurrentTime: u32 = 0;","highlight_start":7,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":9091,"byte_end":9102,"line_start":292,"line_end":292,"column_start":7,"column_end":18,"is_primary":true,"text":[{"text":"const CurrentTime: u32 = 0;","highlight_start":7,"highlight_end":18}],"label":null,"suggested_replacement":"CURRENT_TIME","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `CurrentTime` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:292:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst CurrentTime: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CURRENT_TIME`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`extern` fn uses type `Option<u64>`, which is not FFI-safe","code":{"code":"improper_ctypes_definitions","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":11810,"byte_end":11824,"line_start":375,"line_end":375,"column_start":6,"column_end":20,"is_primary":true,"text":[{"text":") -> Option<Window> {","highlight_start":6,"highlight_end":20}],"label":"not FFI-safe","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider adding a `#[repr(C)]`, `#[repr(transparent)]`, or integer `#[repr(...)]` attribute to this enum","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"enum has no representation hint","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `extern` fn uses type `Option<u64>`, which is not FFI-safe\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:375:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m375\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m) -> Option<Window> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mnot FFI-safe\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding a `#[repr(C)]`, `#[repr(transparent)]`, or integer `#[repr(...)]` attribute to this enum\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: enum has no representation hint\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`extern` block uses type `x_image::XImage`, which is not FFI-safe","code":{"code":"improper_ctypes","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":11873,"byte_end":11884,"line_start":377,"line_end":377,"column_start":30,"column_end":41,"is_primary":true,"text":[{"text":"        fn XGetPixel(ximage: *mut XImage, x: i32, y: i32) -> u64;","highlight_start":30,"highlight_end":41}],"label":"not FFI-safe","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider adding a `#[repr(C)]` or `#[repr(transparent)]` attribute to this struct","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"this struct has unspecified layout","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type is defined here","code":null,"level":"note","spans":[{"file_name":"src/x_image.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"pub struct XImage {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`#[warn(improper_ctypes)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `extern` block uses type `x_image::XImage`, which is not FFI-safe\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:377:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m377\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        fn XGetPixel(ximage: *mut XImage, x: i32, y: i32) -> u64;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mnot FFI-safe\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding a `#[repr(C)]` or `#[repr(transparent)]` attribute to this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this struct has unspecified layout\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the type is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x_image.rs:3:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct XImage {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(improper_ctypes)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`extern` block uses type `x_image::XImage`, which is not FFI-safe","code":{"code":"improper_ctypes","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":11943,"byte_end":11954,"line_start":378,"line_end":378,"column_start":34,"column_end":45,"is_primary":true,"text":[{"text":"        fn XDestroyImage(ximage: *mut XImage);","highlight_start":34,"highlight_end":45}],"label":"not FFI-safe","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider adding a `#[repr(C)]` or `#[repr(transparent)]` attribute to this struct","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"this struct has unspecified layout","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type is defined here","code":null,"level":"note","spans":[{"file_name":"src/x_image.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"pub struct XImage {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `extern` block uses type `x_image::XImage`, which is not FFI-safe\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:378:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m378\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        fn XDestroyImage(ximage: *mut XImage);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mnot FFI-safe\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding a `#[repr(C)]` or `#[repr(transparent)]` attribute to this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this struct has unspecified layout\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the type is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x_image.rs:3:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct XImage {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`extern` block uses type `x_image::XImage`, which is not FFI-safe","code":{"code":"improper_ctypes","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":12198,"byte_end":12209,"line_start":388,"line_end":388,"column_start":14,"column_end":25,"is_primary":true,"text":[{"text":"        ) -> *mut XImage;","highlight_start":14,"highlight_end":25}],"label":"not FFI-safe","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider adding a `#[repr(C)]` or `#[repr(transparent)]` attribute to this struct","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"this struct has unspecified layout","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the type is defined here","code":null,"level":"note","spans":[{"file_name":"src/x_image.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"pub struct XImage {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `extern` block uses type `x_image::XImage`, which is not FFI-safe\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:388:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m388\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ) -> *mut XImage;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mnot FFI-safe\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding a `#[repr(C)]` or `#[repr(transparent)]` attribute to this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this struct has unspecified layout\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the type is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x_image.rs:3:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct XImage {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `ZPixmap` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/test_grabc.rs","byte_start":12387,"byte_end":12394,"line_start":394,"line_end":394,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"    const ZPixmap: i32 = 2;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/test_grabc.rs","byte_start":12387,"byte_end":12394,"line_start":394,"line_end":394,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"    const ZPixmap: i32 = 2;","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"ZPIXMAP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ZPixmap` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:394:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m394\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const ZPixmap: i32 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `ZPIXMAP`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`XGrabPointer` redeclared with a different signature","code":{"code":"clashing_extern_declarations","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":110721,"byte_end":111026,"line_start":3696,"line_end":3706,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub fn XGrabPointer(","highlight_start":5,"highlight_end":25},{"text":"        arg1: *mut Display,","highlight_start":1,"highlight_end":28},{"text":"        arg2: Window,","highlight_start":1,"highlight_end":22},{"text":"        arg3: std::os::raw::c_int,","highlight_start":1,"highlight_end":35},{"text":"        arg4: std::os::raw::c_uint,","highlight_start":1,"highlight_end":36},{"text":"        arg5: std::os::raw::c_int,","highlight_start":1,"highlight_end":35},{"text":"        arg6: std::os::raw::c_int,","highlight_start":1,"highlight_end":35},{"text":"        arg7: Window,","highlight_start":1,"highlight_end":22},{"text":"        arg8: Cursor,","highlight_start":1,"highlight_end":22},{"text":"        arg9: Time,","highlight_start":1,"highlight_end":20},{"text":"    ) -> std::os::raw::c_int;","highlight_start":1,"highlight_end":30}],"label":"`XGrabPointer` previously declared here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test_grabc.rs","byte_start":8425,"byte_end":8693,"line_start":270,"line_end":280,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    fn XGrabPointer(","highlight_start":5,"highlight_end":21},{"text":"        display: *mut Display,","highlight_start":1,"highlight_end":31},{"text":"        grab_window: Window,","highlight_start":1,"highlight_end":29},{"text":"        owner_events: i32,","highlight_start":1,"highlight_end":27},{"text":"        event_mask: u32,","highlight_start":1,"highlight_end":25},{"text":"        pointer_mode: i32,","highlight_start":1,"highlight_end":27},{"text":"        keyboard_mode: i32,","highlight_start":1,"highlight_end":28},{"text":"        confine_to: Window,","highlight_start":1,"highlight_end":28},{"text":"        cursor: Cursor,","highlight_start":1,"highlight_end":24},{"text":"        time: u32,","highlight_start":1,"highlight_end":19},{"text":"    ) -> i32;","highlight_start":1,"highlight_end":14}],"label":"this signature doesn't match the previous declaration","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected `unsafe extern \"C\" fn(*mut _XDisplay, u64, i32, u32, i32, i32, u64, u64, u64) -> i32`\n   found `unsafe extern \"C\" fn(*mut _XDisplay, u64, i32, u32, i32, i32, u64, u64, u32) -> i32`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clashing_extern_declarations)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `XGrabPointer` redeclared with a different signature\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:270:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m270\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn XGrabPointer(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        display: *mut Display,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m272\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        grab_window: Window,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m273\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        owner_events: i32,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m279\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        time: u32,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m280\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> i32;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis signature doesn't match the previous declaration\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:3696:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3696\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn XGrabPointer(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3697\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        arg1: *mut Display,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3698\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        arg2: Window,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3699\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        arg3: std::os::raw::c_int,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3705\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        arg9: Time,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3706\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> std::os::raw::c_int;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`XGrabPointer` previously declared here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected `unsafe extern \"C\" fn(*mut _XDisplay, u64, i32, u32, i32, i32, u64, u64, u64) -> i32`\u001b[0m\n\u001b[0m                found `\u001b[0m\u001b[0m\u001b[1m\u001b[35munsafe extern \"C\" fn(*mut _XDisplay, u64, i32, u32, i32, i32, u64, u64, u32) -> i32\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clashing_extern_declarations)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`XAllowEvents` redeclared with a different signature","code":{"code":"clashing_extern_declarations","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":91183,"byte_end":91316,"line_start":2965,"line_end":2969,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub fn XAllowEvents(","highlight_start":5,"highlight_end":25},{"text":"        arg1: *mut Display,","highlight_start":1,"highlight_end":28},{"text":"        arg2: std::os::raw::c_int,","highlight_start":1,"highlight_end":35},{"text":"        arg3: Time,","highlight_start":1,"highlight_end":20},{"text":"    ) -> std::os::raw::c_int;","highlight_start":1,"highlight_end":30}],"label":"`XAllowEvents` previously declared here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test_grabc.rs","byte_start":8699,"byte_end":8766,"line_start":282,"line_end":282,"column_start":5,"column_end":72,"is_primary":true,"text":[{"text":"    fn XAllowEvents(display: *mut Display, event_mode: i32, time: u32);","highlight_start":5,"highlight_end":72}],"label":"this signature doesn't match the previous declaration","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected `unsafe extern \"C\" fn(*mut _XDisplay, i32, u64) -> i32`\n   found `unsafe extern \"C\" fn(*mut _XDisplay, i32, u32)`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `XAllowEvents` redeclared with a different signature\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:282:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m282\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    fn XAllowEvents(display: *mut Display, event_mode: i32, time: u32);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis signature doesn't match the previous declaration\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2965:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2965\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn XAllowEvents(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2966\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        arg1: *mut Display,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2967\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        arg2: std::os::raw::c_int,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2968\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        arg3: Time,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2969\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> std::os::raw::c_int;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`XAllowEvents` previously declared here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected `unsafe extern \"C\" fn(*mut _XDisplay, i32, u64) -> i32`\u001b[0m\n\u001b[0m                found `\u001b[0m\u001b[0m\u001b[1m\u001b[35munsafe extern \"C\" fn(*mut _XDisplay, i32, u32)\u001b[0m\u001b[0m`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`XWindowEvent` redeclared with a different signature","code":{"code":"clashing_extern_declarations","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":131944,"byte_end":132107,"line_start":4499,"line_end":4504,"column_start":5,"column_end":30,"is_primary":false,"text":[{"text":"    pub fn XWindowEvent(","highlight_start":5,"highlight_end":25},{"text":"        arg1: *mut Display,","highlight_start":1,"highlight_end":28},{"text":"        arg2: Window,","highlight_start":1,"highlight_end":22},{"text":"        arg3: std::os::raw::c_long,","highlight_start":1,"highlight_end":36},{"text":"        arg4: *mut XEvent,","highlight_start":1,"highlight_end":27},{"text":"    ) -> std::os::raw::c_int;","highlight_start":1,"highlight_end":30}],"label":"`XWindowEvent` previously declared here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test_grabc.rs","byte_start":8771,"byte_end":8870,"line_start":283,"line_end":283,"column_start":5,"column_end":104,"is_primary":true,"text":[{"text":"    fn XWindowEvent(display: *mut Display, window: Window, event_mask: i32, event_return: *mut XEvent);","highlight_start":5,"highlight_end":104}],"label":"this signature doesn't match the previous declaration","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected `unsafe extern \"C\" fn(*mut _XDisplay, u64, i64, *mut _XEvent) -> i32`\n   found `unsafe extern \"C\" fn(*mut _XDisplay, u64, i32, *mut _XEvent)`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `XWindowEvent` redeclared with a different signature\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:283:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m283\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    fn XWindowEvent(display: *mut Display, window: Window, event_mask: i32, event_return: *mut XEvent);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis signature doesn't match the previous declaration\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:4499:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4499\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn XWindowEvent(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4500\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        arg1: *mut Display,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4501\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        arg2: Window,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4502\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        arg3: std::os::raw::c_long,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4503\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        arg4: *mut XEvent,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4504\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> std::os::raw::c_int;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`XWindowEvent` previously declared here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected `unsafe extern \"C\" fn(*mut _XDisplay, u64, i64, *mut _XEvent) -> i32`\u001b[0m\n\u001b[0m                found `\u001b[0m\u001b[0m\u001b[1m\u001b[35munsafe extern \"C\" fn(*mut _XDisplay, u64, i32, *mut _XEvent)\u001b[0m\u001b[0m`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`XGetImage` redeclared with a different signature","code":{"code":"clashing_extern_declarations","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":75500,"byte_end":75805,"line_start":2388,"line_end":2397,"column_start":5,"column_end":22,"is_primary":false,"text":[{"text":"    pub fn XGetImage(","highlight_start":5,"highlight_end":22},{"text":"        arg1: *mut Display,","highlight_start":1,"highlight_end":28},{"text":"        arg2: Drawable,","highlight_start":1,"highlight_end":24},{"text":"        arg3: std::os::raw::c_int,","highlight_start":1,"highlight_end":35},{"text":"        arg4: std::os::raw::c_int,","highlight_start":1,"highlight_end":35},{"text":"        arg5: std::os::raw::c_uint,","highlight_start":1,"highlight_end":36},{"text":"        arg6: std::os::raw::c_uint,","highlight_start":1,"highlight_end":36},{"text":"        arg7: std::os::raw::c_ulong,","highlight_start":1,"highlight_end":37},{"text":"        arg8: std::os::raw::c_int,","highlight_start":1,"highlight_end":35},{"text":"    ) -> *mut XImage;","highlight_start":1,"highlight_end":22}],"label":"`XGetImage` previously declared here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test_grabc.rs","byte_start":11965,"byte_end":12210,"line_start":379,"line_end":388,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        fn XGetImage(","highlight_start":9,"highlight_end":22},{"text":"            display: *mut Display,","highlight_start":1,"highlight_end":35},{"text":"            window: Window,","highlight_start":1,"highlight_end":28},{"text":"            x: i32,","highlight_start":1,"highlight_end":20},{"text":"            y: i32,","highlight_start":1,"highlight_end":20},{"text":"            width: u32,","highlight_start":1,"highlight_end":24},{"text":"            height: u32,","highlight_start":1,"highlight_end":25},{"text":"            plane_mask: i64,","highlight_start":1,"highlight_end":29},{"text":"            format: i32,","highlight_start":1,"highlight_end":25},{"text":"        ) -> *mut XImage;","highlight_start":1,"highlight_end":26}],"label":"this signature doesn't match the previous declaration","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected `unsafe extern \"C\" fn(*mut _XDisplay, u64, i32, i32, u32, u32, u64, i32) -> *mut _XImage`\n   found `unsafe extern \"C\" fn(*mut _XDisplay, u64, i32, i32, u32, u32, i64, i32) -> *mut x_image::XImage`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `XGetImage` redeclared with a different signature\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:379:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m379\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        fn XGetImage(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m380\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            display: *mut Display,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m381\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            window: Window,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m382\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            x: i32,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m387\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            format: i32,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m388\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ) -> *mut XImage;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis signature doesn't match the previous declaration\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2388:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2388\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn XGetImage(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2389\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        arg1: *mut Display,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2390\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        arg2: Drawable,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2391\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        arg3: std::os::raw::c_int,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2396\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        arg8: std::os::raw::c_int,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2397\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> *mut XImage;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`XGetImage` previously declared here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected `unsafe extern \"C\" fn(*mut _XDisplay, u64, i32, i32, u32, u32, u64, i32) -> *mut _XImage`\u001b[0m\n\u001b[0m                found `\u001b[0m\u001b[0m\u001b[1m\u001b[35munsafe extern \"C\" fn(*mut _XDisplay, u64, i32, i32, u32, u32, i64, i32) -> *mut x_image::XImage\u001b[0m\u001b[0m`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`XAllPlanes` redeclared with a different signature","code":{"code":"clashing_extern_declarations","explanation":null},"level":"warning","spans":[{"file_name":"/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs","byte_start":85363,"byte_end":85408,"line_start":2752,"line_end":2752,"column_start":5,"column_end":50,"is_primary":false,"text":[{"text":"    pub fn XAllPlanes() -> std::os::raw::c_ulong;","highlight_start":5,"highlight_end":50}],"label":"`XAllPlanes` previously declared here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test_grabc.rs","byte_start":12346,"byte_end":12369,"line_start":391,"line_end":391,"column_start":9,"column_end":32,"is_primary":true,"text":[{"text":"        fn XAllPlanes() -> i64;","highlight_start":9,"highlight_end":32}],"label":"this signature doesn't match the previous declaration","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected `unsafe extern \"C\" fn() -> u64`\n   found `unsafe extern \"C\" fn() -> i64`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `XAllPlanes` redeclared with a different signature\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test_grabc.rs:391:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m391\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        fn XAllPlanes() -> i64;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis signature doesn't match the previous declaration\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ubuntu/C2RustTranslation/artifacts/grabc/translate_new_ablation/target/debug/build/translate_new-e0d8d45eed799f23/out/bindings.rs:2752:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2752\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn XAllPlanes() -> std::os::raw::c_ulong;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`XAllPlanes` previously declared here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected `unsafe extern \"C\" fn() -> u64`\u001b[0m\n\u001b[0m                found `\u001b[0m\u001b[0m\u001b[1m\u001b[35munsafe extern \"C\" fn() -> i64\u001b[0m\u001b[0m`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"591 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 591 warnings emitted\u001b[0m\n\n"}
