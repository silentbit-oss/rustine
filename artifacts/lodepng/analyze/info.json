{
    "special_type": [
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Enum'>",
            "definition": "typedef enum LodePNGColorType\n{\n  LCT_GREY = 0,\n  LCT_RGB = 2,\n  LCT_PALETTE = 3,\n  LCT_GREY_ALPHA = 4,\n  LCT_RGBA = 6,\n  LCT_MAX_OCTET_VALUE = 255\n} LodePNGColorType",
            "name": "LodePNGColorType",
            "names": [],
            "inner": {
                "special_type": [],
                "global_variable": [],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Struct'>",
            "definition": "struct LodePNGDecompressSettings\n{\n  unsigned ignore_adler32;\n  unsigned ignore_nlen;\n  size_t max_output_size;\n  unsigned (*custom_zlib)(unsigned char **, size_t *, const unsigned char *, size_t, const LodePNGDecompressSettings *);\n  unsigned (*custom_inflate)(unsigned char **, size_t *, const unsigned char *, size_t, const LodePNGDecompressSettings *);\n  const void *custom_context;\n}",
            "name": "LodePNGDecompressSettings",
            "names": [
                "typedef struct LodePNGDecompressSettings LodePNGDecompressSettings"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "ignore_adler32",
                        "type": "unsigned",
                        "definition": [
                            "unsigned ignore_adler32"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ignore_nlen",
                        "type": "unsigned",
                        "definition": [
                            "unsigned ignore_nlen"
                        ]
                    },
                    {
                        "path": null,
                        "name": "max_output_size",
                        "type": "size_t",
                        "definition": [
                            "size_t max_output_size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "custom_zlib",
                        "type": "unsigned (*)(unsigned char **, size_t *, const unsigned char *, size_t, const LodePNGDecompressSettings *)",
                        "definition": [
                            "unsigned (*custom_zlib)(unsigned char **, size_t *, const unsigned char *, size_t, const LodePNGDecompressSettings *)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "custom_inflate",
                        "type": "unsigned (*)(unsigned char **, size_t *, const unsigned char *, size_t, const LodePNGDecompressSettings *)",
                        "definition": [
                            "unsigned (*custom_inflate)(unsigned char **, size_t *, const unsigned char *, size_t, const LodePNGDecompressSettings *)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "custom_context",
                        "type": "const void *",
                        "definition": [
                            "const void *custom_context"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Struct'>",
            "definition": "struct LodePNGCompressSettings\n{\n  unsigned btype;\n  unsigned use_lz77;\n  unsigned windowsize;\n  unsigned minmatch;\n  unsigned nicematch;\n  unsigned lazymatching;\n  unsigned (*custom_zlib)(unsigned char **, size_t *, const unsigned char *, size_t, const LodePNGCompressSettings *);\n  unsigned (*custom_deflate)(unsigned char **, size_t *, const unsigned char *, size_t, const LodePNGCompressSettings *);\n  const void *custom_context;\n}",
            "name": "LodePNGCompressSettings",
            "names": [
                "typedef struct LodePNGCompressSettings LodePNGCompressSettings"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "btype",
                        "type": "unsigned",
                        "definition": [
                            "unsigned btype"
                        ]
                    },
                    {
                        "path": null,
                        "name": "use_lz77",
                        "type": "unsigned",
                        "definition": [
                            "unsigned use_lz77"
                        ]
                    },
                    {
                        "path": null,
                        "name": "windowsize",
                        "type": "unsigned",
                        "definition": [
                            "unsigned windowsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "minmatch",
                        "type": "unsigned",
                        "definition": [
                            "unsigned minmatch"
                        ]
                    },
                    {
                        "path": null,
                        "name": "nicematch",
                        "type": "unsigned",
                        "definition": [
                            "unsigned nicematch"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazymatching",
                        "type": "unsigned",
                        "definition": [
                            "unsigned lazymatching"
                        ]
                    },
                    {
                        "path": null,
                        "name": "custom_zlib",
                        "type": "unsigned (*)(unsigned char **, size_t *, const unsigned char *, size_t, const LodePNGCompressSettings *)",
                        "definition": [
                            "unsigned (*custom_zlib)(unsigned char **, size_t *, const unsigned char *, size_t, const LodePNGCompressSettings *)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "custom_deflate",
                        "type": "unsigned (*)(unsigned char **, size_t *, const unsigned char *, size_t, const LodePNGCompressSettings *)",
                        "definition": [
                            "unsigned (*custom_deflate)(unsigned char **, size_t *, const unsigned char *, size_t, const LodePNGCompressSettings *)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "custom_context",
                        "type": "const void *",
                        "definition": [
                            "const void *custom_context"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Struct'>",
            "definition": "typedef struct LodePNGColorMode\n{\n  LodePNGColorType colortype;\n  unsigned bitdepth;\n  unsigned char *palette;\n  size_t palettesize;\n  unsigned key_defined;\n  unsigned key_r;\n  unsigned key_g;\n  unsigned key_b;\n} LodePNGColorMode",
            "name": "LodePNGColorMode",
            "names": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "colortype",
                        "type": "LodePNGColorType",
                        "definition": [
                            "LodePNGColorType colortype"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitdepth",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bitdepth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "palette",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *palette"
                        ]
                    },
                    {
                        "path": null,
                        "name": "palettesize",
                        "type": "size_t",
                        "definition": [
                            "size_t palettesize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key_defined",
                        "type": "unsigned",
                        "definition": [
                            "unsigned key_defined"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key_r",
                        "type": "unsigned",
                        "definition": [
                            "unsigned key_r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key_g",
                        "type": "unsigned",
                        "definition": [
                            "unsigned key_g"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key_b",
                        "type": "unsigned",
                        "definition": [
                            "unsigned key_b"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Struct'>",
            "definition": "typedef struct LodePNGTime\n{\n  unsigned year;\n  unsigned month;\n  unsigned day;\n  unsigned hour;\n  unsigned minute;\n  unsigned second;\n} LodePNGTime",
            "name": "LodePNGTime",
            "names": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "year",
                        "type": "unsigned",
                        "definition": [
                            "unsigned year"
                        ]
                    },
                    {
                        "path": null,
                        "name": "month",
                        "type": "unsigned",
                        "definition": [
                            "unsigned month"
                        ]
                    },
                    {
                        "path": null,
                        "name": "day",
                        "type": "unsigned",
                        "definition": [
                            "unsigned day"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hour",
                        "type": "unsigned",
                        "definition": [
                            "unsigned hour"
                        ]
                    },
                    {
                        "path": null,
                        "name": "minute",
                        "type": "unsigned",
                        "definition": [
                            "unsigned minute"
                        ]
                    },
                    {
                        "path": null,
                        "name": "second",
                        "type": "unsigned",
                        "definition": [
                            "unsigned second"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Struct'>",
            "definition": "typedef struct LodePNGInfo\n{\n  unsigned compression_method;\n  unsigned filter_method;\n  unsigned interlace_method;\n  LodePNGColorMode color;\n  unsigned background_defined;\n  unsigned background_r;\n  unsigned background_g;\n  unsigned background_b;\n  size_t text_num;\n  char **text_keys;\n  char **text_strings;\n  size_t itext_num;\n  char **itext_keys;\n  char **itext_langtags;\n  char **itext_transkeys;\n  char **itext_strings;\n  unsigned time_defined;\n  LodePNGTime time;\n  unsigned phys_defined;\n  unsigned phys_x;\n  unsigned phys_y;\n  unsigned phys_unit;\n  unsigned gama_defined;\n  unsigned gama_gamma;\n  unsigned chrm_defined;\n  unsigned chrm_white_x;\n  unsigned chrm_white_y;\n  unsigned chrm_red_x;\n  unsigned chrm_red_y;\n  unsigned chrm_green_x;\n  unsigned chrm_green_y;\n  unsigned chrm_blue_x;\n  unsigned chrm_blue_y;\n  unsigned srgb_defined;\n  unsigned srgb_intent;\n  unsigned iccp_defined;\n  char *iccp_name;\n  unsigned char *iccp_profile;\n  unsigned iccp_profile_size;\n  unsigned sbit_defined;\n  unsigned sbit_r;\n  unsigned sbit_g;\n  unsigned sbit_b;\n  unsigned sbit_a;\n  unsigned char *unknown_chunks_data[3];\n  size_t unknown_chunks_size[3];\n} LodePNGInfo",
            "name": "LodePNGInfo",
            "names": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "compression_method",
                        "type": "unsigned",
                        "definition": [
                            "unsigned compression_method"
                        ]
                    },
                    {
                        "path": null,
                        "name": "filter_method",
                        "type": "unsigned",
                        "definition": [
                            "unsigned filter_method"
                        ]
                    },
                    {
                        "path": null,
                        "name": "interlace_method",
                        "type": "unsigned",
                        "definition": [
                            "unsigned interlace_method"
                        ]
                    },
                    {
                        "path": null,
                        "name": "color",
                        "type": "LodePNGColorMode",
                        "definition": [
                            "LodePNGColorMode color"
                        ]
                    },
                    {
                        "path": null,
                        "name": "background_defined",
                        "type": "unsigned",
                        "definition": [
                            "unsigned background_defined"
                        ]
                    },
                    {
                        "path": null,
                        "name": "background_r",
                        "type": "unsigned",
                        "definition": [
                            "unsigned background_r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "background_g",
                        "type": "unsigned",
                        "definition": [
                            "unsigned background_g"
                        ]
                    },
                    {
                        "path": null,
                        "name": "background_b",
                        "type": "unsigned",
                        "definition": [
                            "unsigned background_b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "text_num",
                        "type": "size_t",
                        "definition": [
                            "size_t text_num"
                        ]
                    },
                    {
                        "path": null,
                        "name": "text_keys",
                        "type": "char **",
                        "definition": [
                            "char **text_keys"
                        ]
                    },
                    {
                        "path": null,
                        "name": "text_strings",
                        "type": "char **",
                        "definition": [
                            "char **text_strings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "itext_num",
                        "type": "size_t",
                        "definition": [
                            "size_t itext_num"
                        ]
                    },
                    {
                        "path": null,
                        "name": "itext_keys",
                        "type": "char **",
                        "definition": [
                            "char **itext_keys"
                        ]
                    },
                    {
                        "path": null,
                        "name": "itext_langtags",
                        "type": "char **",
                        "definition": [
                            "char **itext_langtags"
                        ]
                    },
                    {
                        "path": null,
                        "name": "itext_transkeys",
                        "type": "char **",
                        "definition": [
                            "char **itext_transkeys"
                        ]
                    },
                    {
                        "path": null,
                        "name": "itext_strings",
                        "type": "char **",
                        "definition": [
                            "char **itext_strings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "time_defined",
                        "type": "unsigned",
                        "definition": [
                            "unsigned time_defined"
                        ]
                    },
                    {
                        "path": null,
                        "name": "time",
                        "type": "LodePNGTime",
                        "definition": [
                            "LodePNGTime time"
                        ]
                    },
                    {
                        "path": null,
                        "name": "phys_defined",
                        "type": "unsigned",
                        "definition": [
                            "unsigned phys_defined"
                        ]
                    },
                    {
                        "path": null,
                        "name": "phys_x",
                        "type": "unsigned",
                        "definition": [
                            "unsigned phys_x"
                        ]
                    },
                    {
                        "path": null,
                        "name": "phys_y",
                        "type": "unsigned",
                        "definition": [
                            "unsigned phys_y"
                        ]
                    },
                    {
                        "path": null,
                        "name": "phys_unit",
                        "type": "unsigned",
                        "definition": [
                            "unsigned phys_unit"
                        ]
                    },
                    {
                        "path": null,
                        "name": "gama_defined",
                        "type": "unsigned",
                        "definition": [
                            "unsigned gama_defined"
                        ]
                    },
                    {
                        "path": null,
                        "name": "gama_gamma",
                        "type": "unsigned",
                        "definition": [
                            "unsigned gama_gamma"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chrm_defined",
                        "type": "unsigned",
                        "definition": [
                            "unsigned chrm_defined"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chrm_white_x",
                        "type": "unsigned",
                        "definition": [
                            "unsigned chrm_white_x"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chrm_white_y",
                        "type": "unsigned",
                        "definition": [
                            "unsigned chrm_white_y"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chrm_red_x",
                        "type": "unsigned",
                        "definition": [
                            "unsigned chrm_red_x"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chrm_red_y",
                        "type": "unsigned",
                        "definition": [
                            "unsigned chrm_red_y"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chrm_green_x",
                        "type": "unsigned",
                        "definition": [
                            "unsigned chrm_green_x"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chrm_green_y",
                        "type": "unsigned",
                        "definition": [
                            "unsigned chrm_green_y"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chrm_blue_x",
                        "type": "unsigned",
                        "definition": [
                            "unsigned chrm_blue_x"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chrm_blue_y",
                        "type": "unsigned",
                        "definition": [
                            "unsigned chrm_blue_y"
                        ]
                    },
                    {
                        "path": null,
                        "name": "srgb_defined",
                        "type": "unsigned",
                        "definition": [
                            "unsigned srgb_defined"
                        ]
                    },
                    {
                        "path": null,
                        "name": "srgb_intent",
                        "type": "unsigned",
                        "definition": [
                            "unsigned srgb_intent"
                        ]
                    },
                    {
                        "path": null,
                        "name": "iccp_defined",
                        "type": "unsigned",
                        "definition": [
                            "unsigned iccp_defined"
                        ]
                    },
                    {
                        "path": null,
                        "name": "iccp_name",
                        "type": "char *",
                        "definition": [
                            "char *iccp_name"
                        ]
                    },
                    {
                        "path": null,
                        "name": "iccp_profile",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *iccp_profile"
                        ]
                    },
                    {
                        "path": null,
                        "name": "iccp_profile_size",
                        "type": "unsigned",
                        "definition": [
                            "unsigned iccp_profile_size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "sbit_defined",
                        "type": "unsigned",
                        "definition": [
                            "unsigned sbit_defined"
                        ]
                    },
                    {
                        "path": null,
                        "name": "sbit_r",
                        "type": "unsigned",
                        "definition": [
                            "unsigned sbit_r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "sbit_g",
                        "type": "unsigned",
                        "definition": [
                            "unsigned sbit_g"
                        ]
                    },
                    {
                        "path": null,
                        "name": "sbit_b",
                        "type": "unsigned",
                        "definition": [
                            "unsigned sbit_b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "sbit_a",
                        "type": "unsigned",
                        "definition": [
                            "unsigned sbit_a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "unknown_chunks_data",
                        "type": "unsigned char *[3]",
                        "definition": [
                            "unsigned char *unknown_chunks_data[3]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "unknown_chunks_size",
                        "type": "size_t [3]",
                        "definition": [
                            "size_t unknown_chunks_size[3]"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Struct'>",
            "definition": "typedef struct LodePNGDecoderSettings\n{\n  LodePNGDecompressSettings zlibsettings;\n  unsigned ignore_crc;\n  unsigned ignore_critical;\n  unsigned ignore_end;\n  unsigned color_convert;\n  unsigned read_text_chunks;\n  unsigned remember_unknown_chunks;\n  size_t max_text_size;\n  size_t max_icc_size;\n} LodePNGDecoderSettings",
            "name": "LodePNGDecoderSettings",
            "names": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "zlibsettings",
                        "type": "LodePNGDecompressSettings",
                        "definition": [
                            "LodePNGDecompressSettings zlibsettings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ignore_crc",
                        "type": "unsigned",
                        "definition": [
                            "unsigned ignore_crc"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ignore_critical",
                        "type": "unsigned",
                        "definition": [
                            "unsigned ignore_critical"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ignore_end",
                        "type": "unsigned",
                        "definition": [
                            "unsigned ignore_end"
                        ]
                    },
                    {
                        "path": null,
                        "name": "color_convert",
                        "type": "unsigned",
                        "definition": [
                            "unsigned color_convert"
                        ]
                    },
                    {
                        "path": null,
                        "name": "read_text_chunks",
                        "type": "unsigned",
                        "definition": [
                            "unsigned read_text_chunks"
                        ]
                    },
                    {
                        "path": null,
                        "name": "remember_unknown_chunks",
                        "type": "unsigned",
                        "definition": [
                            "unsigned remember_unknown_chunks"
                        ]
                    },
                    {
                        "path": null,
                        "name": "max_text_size",
                        "type": "size_t",
                        "definition": [
                            "size_t max_text_size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "max_icc_size",
                        "type": "size_t",
                        "definition": [
                            "size_t max_icc_size"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Enum'>",
            "definition": "typedef enum LodePNGFilterStrategy\n{\n  LFS_ZERO = 0,\n  LFS_ONE = 1,\n  LFS_TWO = 2,\n  LFS_THREE = 3,\n  LFS_FOUR = 4,\n  LFS_MINSUM,\n  LFS_ENTROPY,\n  LFS_BRUTE_FORCE,\n  LFS_PREDEFINED\n} LodePNGFilterStrategy",
            "name": "LodePNGFilterStrategy",
            "names": [],
            "inner": {
                "special_type": [],
                "global_variable": [],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Struct'>",
            "definition": "typedef struct LodePNGColorStats\n{\n  unsigned colored;\n  unsigned key;\n  unsigned short key_r;\n  unsigned short key_g;\n  unsigned short key_b;\n  unsigned alpha;\n  unsigned numcolors;\n  unsigned char palette[1024];\n  unsigned bits;\n  size_t numpixels;\n  unsigned allow_palette;\n  unsigned allow_greyscale;\n} LodePNGColorStats",
            "name": "LodePNGColorStats",
            "names": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "colored",
                        "type": "unsigned",
                        "definition": [
                            "unsigned colored"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key",
                        "type": "unsigned",
                        "definition": [
                            "unsigned key"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key_r",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short key_r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key_g",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short key_g"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key_b",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short key_b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "alpha",
                        "type": "unsigned",
                        "definition": [
                            "unsigned alpha"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcolors",
                        "type": "unsigned",
                        "definition": [
                            "unsigned numcolors"
                        ]
                    },
                    {
                        "path": null,
                        "name": "palette",
                        "type": "unsigned char [1024]",
                        "definition": [
                            "unsigned char palette[1024]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bits",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numpixels",
                        "type": "size_t",
                        "definition": [
                            "size_t numpixels"
                        ]
                    },
                    {
                        "path": null,
                        "name": "allow_palette",
                        "type": "unsigned",
                        "definition": [
                            "unsigned allow_palette"
                        ]
                    },
                    {
                        "path": null,
                        "name": "allow_greyscale",
                        "type": "unsigned",
                        "definition": [
                            "unsigned allow_greyscale"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Struct'>",
            "definition": "typedef struct LodePNGEncoderSettings\n{\n  LodePNGCompressSettings zlibsettings;\n  unsigned auto_convert;\n  unsigned filter_palette_zero;\n  LodePNGFilterStrategy filter_strategy;\n  const unsigned char *predefined_filters;\n  unsigned force_palette;\n  unsigned add_id;\n  unsigned text_compression;\n} LodePNGEncoderSettings",
            "name": "LodePNGEncoderSettings",
            "names": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "zlibsettings",
                        "type": "LodePNGCompressSettings",
                        "definition": [
                            "LodePNGCompressSettings zlibsettings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "auto_convert",
                        "type": "unsigned",
                        "definition": [
                            "unsigned auto_convert"
                        ]
                    },
                    {
                        "path": null,
                        "name": "filter_palette_zero",
                        "type": "unsigned",
                        "definition": [
                            "unsigned filter_palette_zero"
                        ]
                    },
                    {
                        "path": null,
                        "name": "filter_strategy",
                        "type": "LodePNGFilterStrategy",
                        "definition": [
                            "LodePNGFilterStrategy filter_strategy"
                        ]
                    },
                    {
                        "path": null,
                        "name": "predefined_filters",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *predefined_filters"
                        ]
                    },
                    {
                        "path": null,
                        "name": "force_palette",
                        "type": "unsigned",
                        "definition": [
                            "unsigned force_palette"
                        ]
                    },
                    {
                        "path": null,
                        "name": "add_id",
                        "type": "unsigned",
                        "definition": [
                            "unsigned add_id"
                        ]
                    },
                    {
                        "path": null,
                        "name": "text_compression",
                        "type": "unsigned",
                        "definition": [
                            "unsigned text_compression"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Struct'>",
            "definition": "typedef struct LodePNGState\n{\n  LodePNGDecoderSettings decoder;\n  LodePNGEncoderSettings encoder;\n  LodePNGColorMode info_raw;\n  LodePNGInfo info_png;\n  unsigned error;\n} LodePNGState",
            "name": "LodePNGState",
            "names": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "decoder",
                        "type": "LodePNGDecoderSettings",
                        "definition": [
                            "LodePNGDecoderSettings decoder"
                        ]
                    },
                    {
                        "path": null,
                        "name": "encoder",
                        "type": "LodePNGEncoderSettings",
                        "definition": [
                            "LodePNGEncoderSettings encoder"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info_raw",
                        "type": "LodePNGColorMode",
                        "definition": [
                            "LodePNGColorMode info_raw"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info_png",
                        "type": "LodePNGInfo",
                        "definition": [
                            "LodePNGInfo info_png"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Struct'>",
            "definition": "typedef struct uivector\n{\n  unsigned *data;\n  size_t size;\n  size_t allocsize;\n} uivector",
            "name": "uivector",
            "names": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "data",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "allocsize",
                        "type": "size_t",
                        "definition": [
                            "size_t allocsize"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Struct'>",
            "definition": "typedef struct ucvector\n{\n  unsigned char *data;\n  size_t size;\n  size_t allocsize;\n} ucvector",
            "name": "ucvector",
            "names": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "data",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "allocsize",
                        "type": "size_t",
                        "definition": [
                            "size_t allocsize"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Struct'>",
            "definition": "typedef struct \n{\n  ucvector *data;\n  unsigned char bp;\n} LodePNGBitWriter",
            "name": "LodePNGBitWriter",
            "names": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "data",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bp",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char bp"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Struct'>",
            "definition": "typedef struct \n{\n  const unsigned char *data;\n  size_t size;\n  size_t bitsize;\n  size_t bp;\n  unsigned buffer;\n} LodePNGBitReader",
            "name": "LodePNGBitReader",
            "names": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitsize",
                        "type": "size_t",
                        "definition": [
                            "size_t bitsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bp",
                        "type": "size_t",
                        "definition": [
                            "size_t bp"
                        ]
                    },
                    {
                        "path": null,
                        "name": "buffer",
                        "type": "unsigned",
                        "definition": [
                            "unsigned buffer"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Struct'>",
            "definition": "typedef struct HuffmanTree\n{\n  unsigned *codes;\n  unsigned *lengths;\n  unsigned maxbitlen;\n  unsigned numcodes;\n  unsigned char *table_len;\n  unsigned short *table_value;\n} HuffmanTree",
            "name": "HuffmanTree",
            "names": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "codes",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *codes"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lengths",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *lengths"
                        ]
                    },
                    {
                        "path": null,
                        "name": "maxbitlen",
                        "type": "unsigned",
                        "definition": [
                            "unsigned maxbitlen"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes",
                        "type": "unsigned",
                        "definition": [
                            "unsigned numcodes"
                        ]
                    },
                    {
                        "path": null,
                        "name": "table_len",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *table_len"
                        ]
                    },
                    {
                        "path": null,
                        "name": "table_value",
                        "type": "unsigned short *",
                        "definition": [
                            "unsigned short *table_value"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Struct'>",
            "definition": "typedef struct BPMNode\n{\n  int weight;\n  unsigned index;\n  struct BPMNode *tail;\n  int in_use;\n} BPMNode",
            "name": "BPMNode",
            "names": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "weight",
                        "type": "int",
                        "definition": [
                            "int weight"
                        ]
                    },
                    {
                        "path": null,
                        "name": "index",
                        "type": "unsigned",
                        "definition": [
                            "unsigned index"
                        ]
                    },
                    {
                        "path": null,
                        "name": "struct BPMNode",
                        "type": "struct BPMNode *",
                        "definition": [
                            "struct BPMNode *tail"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in_use",
                        "type": "int",
                        "definition": [
                            "int in_use"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Struct'>",
            "definition": "typedef struct BPMLists\n{\n  unsigned memsize;\n  BPMNode *memory;\n  unsigned numfree;\n  unsigned nextfree;\n  BPMNode **freelist;\n  unsigned listsize;\n  BPMNode **chains0;\n  BPMNode **chains1;\n} BPMLists",
            "name": "BPMLists",
            "names": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "memsize",
                        "type": "unsigned",
                        "definition": [
                            "unsigned memsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "memory",
                        "type": "BPMNode *",
                        "definition": [
                            "BPMNode *memory"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numfree",
                        "type": "unsigned",
                        "definition": [
                            "unsigned numfree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "nextfree",
                        "type": "unsigned",
                        "definition": [
                            "unsigned nextfree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "freelist",
                        "type": "BPMNode **",
                        "definition": [
                            "BPMNode **freelist"
                        ]
                    },
                    {
                        "path": null,
                        "name": "listsize",
                        "type": "unsigned",
                        "definition": [
                            "unsigned listsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chains0",
                        "type": "BPMNode **",
                        "definition": [
                            "BPMNode **chains0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chains1",
                        "type": "BPMNode **",
                        "definition": [
                            "BPMNode **chains1"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Struct'>",
            "definition": "typedef struct Hash\n{\n  int *head;\n  unsigned short *chain;\n  int *val;\n  int *headz;\n  unsigned short *chainz;\n  unsigned short *zeros;\n} Hash",
            "name": "Hash",
            "names": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "head",
                        "type": "int *",
                        "definition": [
                            "int *head"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chain",
                        "type": "unsigned short *",
                        "definition": [
                            "unsigned short *chain"
                        ]
                    },
                    {
                        "path": null,
                        "name": "val",
                        "type": "int *",
                        "definition": [
                            "int *val"
                        ]
                    },
                    {
                        "path": null,
                        "name": "headz",
                        "type": "int *",
                        "definition": [
                            "int *headz"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chainz",
                        "type": "unsigned short *",
                        "definition": [
                            "unsigned short *chainz"
                        ]
                    },
                    {
                        "path": null,
                        "name": "zeros",
                        "type": "unsigned short *",
                        "definition": [
                            "unsigned short *zeros"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "type": "<class 'pycparser.c_ast.Struct'>",
            "definition": "struct ColorTree\n{\n  ColorTree *children[16];\n  int index;\n}",
            "name": "ColorTree",
            "names": [
                "typedef struct ColorTree ColorTree"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "children",
                        "type": "ColorTree *[16]",
                        "definition": [
                            "ColorTree *children[16]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "index",
                        "type": "int",
                        "definition": [
                            "int index"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        }
    ],
    "global_variable": [
        {
            "path": null,
            "name": "LODEPNG_VERSION_STRING",
            "type": "const char *",
            "definition": [
                "const char *LODEPNG_VERSION_STRING = \"20221108\"",
                "extern const char *LODEPNG_VERSION_STRING"
            ]
        },
        {
            "path": null,
            "name": "lodepng_default_decompress_settings",
            "type": "const LodePNGDecompressSettings",
            "definition": [
                "const LodePNGDecompressSettings lodepng_default_decompress_settings = {0, 0, 0, 0, 0, 0}",
                "extern const LodePNGDecompressSettings lodepng_default_decompress_settings"
            ]
        },
        {
            "path": null,
            "name": "lodepng_default_compress_settings",
            "type": "const LodePNGCompressSettings",
            "definition": [
                "const LodePNGCompressSettings lodepng_default_compress_settings = {2, 1, 2048, 3, 128, 1, 0, 0, 0}",
                "extern const LodePNGCompressSettings lodepng_default_compress_settings"
            ]
        },
        {
            "path": null,
            "name": "LENGTHBASE",
            "type": "const unsigned [29]",
            "definition": [
                "static const unsigned LENGTHBASE[29] = {3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258}"
            ]
        },
        {
            "path": null,
            "name": "LENGTHEXTRA",
            "type": "const unsigned [29]",
            "definition": [
                "static const unsigned LENGTHEXTRA[29] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0}"
            ]
        },
        {
            "path": null,
            "name": "DISTANCEBASE",
            "type": "const unsigned [30]",
            "definition": [
                "static const unsigned DISTANCEBASE[30] = {1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577}"
            ]
        },
        {
            "path": null,
            "name": "DISTANCEEXTRA",
            "type": "const unsigned [30]",
            "definition": [
                "static const unsigned DISTANCEEXTRA[30] = {0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13}"
            ]
        },
        {
            "path": null,
            "name": "CLCL_ORDER",
            "type": "const unsigned [19]",
            "definition": [
                "static const unsigned CLCL_ORDER[19] = {16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15}"
            ]
        },
        {
            "path": null,
            "name": "MAX_SUPPORTED_DEFLATE_LENGTH",
            "type": "const size_t",
            "definition": [
                "static const size_t MAX_SUPPORTED_DEFLATE_LENGTH = 258"
            ]
        },
        {
            "path": null,
            "name": "HASH_NUM_VALUES",
            "type": "const unsigned",
            "definition": [
                "static const unsigned HASH_NUM_VALUES = 65536"
            ]
        },
        {
            "path": null,
            "name": "HASH_BIT_MASK",
            "type": "const unsigned",
            "definition": [
                "static const unsigned HASH_BIT_MASK = 65535"
            ]
        },
        {
            "path": null,
            "name": "lodepng_crc32_table",
            "type": "unsigned [256]",
            "definition": [
                "static unsigned lodepng_crc32_table[256] = {0u, 1996959894u, 3993919788u, 2567524794u, 124634137u, 1886057615u, 3915621685u, 2657392035u, 249268274u, 2044508324u, 3772115230u, 2547177864u, 162941995u, 2125561021u, 3887607047u, 2428444049u, 498536548u, 1789927666u, 4089016648u, 2227061214u, 450548861u, 1843258603u, 4107580753u, 2211677639u, 325883990u, 1684777152u, 4251122042u, 2321926636u, 335633487u, 1661365465u, 4195302755u, 2366115317u, 997073096u, 1281953886u, 3579855332u, 2724688242u, 1006888145u, 1258607687u, 3524101629u, 2768942443u, 901097722u, 1119000684u, 3686517206u, 2898065728u, 853044451u, 1172266101u, 3705015759u, 2882616665u, 651767980u, 1373503546u, 3369554304u, 3218104598u, 565507253u, 1454621731u, 3485111705u, 3099436303u, 671266974u, 1594198024u, 3322730930u, 2970347812u, 795835527u, 1483230225u, 3244367275u, 3060149565u, 1994146192u, 31158534u, 2563907772u, 4023717930u, 1907459465u, 112637215u, 2680153253u, 3904427059u, 2013776290u, 251722036u, 2517215374u, 3775830040u, 2137656763u, 141376813u, 2439277719u, 3865271297u, 1802195444u, 476864866u, 2238001368u, 4066508878u, 1812370925u, 453092731u, 2181625025u, 4111451223u, 1706088902u, 314042704u, 2344532202u, 4240017532u, 1658658271u, 366619977u, 2362670323u, 4224994405u, 1303535960u, 984961486u, 2747007092u, 3569037538u, 1256170817u, 1037604311u, 2765210733u, 3554079995u, 1131014506u, 879679996u, 2909243462u, 3663771856u, 1141124467u, 855842277u, 2852801631u, 3708648649u, 1342533948u, 654459306u, 3188396048u, 3373015174u, 1466479909u, 544179635u, 3110523913u, 3462522015u, 1591671054u, 702138776u, 2966460450u, 3352799412u, 1504918807u, 783551873u, 3082640443u, 3233442989u, 3988292384u, 2596254646u, 62317068u, 1957810842u, 3939845945u, 2647816111u, 81470997u, 1943803523u, 3814918930u, 2489596804u, 225274430u, 2053790376u, 3826175755u, 2466906013u, 167816743u, 2097651377u, 4027552580u, 2265490386u, 503444072u, 1762050814u, 4150417245u, 2154129355u, 426522225u, 1852507879u, 4275313526u, 2312317920u, 282753626u, 1742555852u, 4189708143u, 2394877945u, 397917763u, 1622183637u, 3604390888u, 2714866558u, 953729732u, 1340076626u, 3518719985u, 2797360999u, 1068828381u, 1219638859u, 3624741850u, 2936675148u, 906185462u, 1090812512u, 3747672003u, 2825379669u, 829329135u, 1181335161u, 3412177804u, 3160834842u, 628085408u, 1382605366u, 3423369109u, 3138078467u, 570562233u, 1426400815u, 3317316542u, 2998733608u, 733239954u, 1555261956u, 3268935591u, 3050360625u, 752459403u, 1541320221u, 2607071920u, 3965973030u, 1969922972u, 40735498u, 2617837225u, 3943577151u, 1913087877u, 83908371u, 2512341634u, 3803740692u, 2075208622u, 213261112u, 2463272603u, 3855990285u, 2094854071u, 198958881u, 2262029012u, 4057260610u, 1759359992u, 534414190u, 2176718541u, 4139329115u, 1873836001u, 414664567u, 2282248934u, 4279200368u, 1711684554u, 285281116u, 2405801727u, 4167216745u, 1634467795u, 376229701u, 2685067896u, 3608007406u, 1308918612u, 956543938u, 2808555105u, 3495958263u, 1231636301u, 1047427035u, 2932959818u, 3654703836u, 1088359270u, 936918000u, 2847714899u, 3736837829u, 1202900863u, 817233897u, 3183342108u, 3401237130u, 1404277552u, 615818150u, 3134207493u, 3453421203u, 1423857449u, 601450431u, 3009837614u, 3294710456u, 1567103746u, 711928724u, 3020668471u, 3272380065u, 1510334235u, 755167117u}"
            ]
        },
        {
            "path": null,
            "name": "ADAM7_IX",
            "type": "const unsigned [7]",
            "definition": [
                "static const unsigned ADAM7_IX[7] = {0, 4, 0, 2, 0, 1, 0}"
            ]
        },
        {
            "path": null,
            "name": "ADAM7_IY",
            "type": "const unsigned [7]",
            "definition": [
                "static const unsigned ADAM7_IY[7] = {0, 0, 4, 0, 2, 0, 1}"
            ]
        },
        {
            "path": null,
            "name": "ADAM7_DX",
            "type": "const unsigned [7]",
            "definition": [
                "static const unsigned ADAM7_DX[7] = {8, 8, 4, 4, 2, 2, 1}"
            ]
        },
        {
            "path": null,
            "name": "ADAM7_DY",
            "type": "const unsigned [7]",
            "definition": [
                "static const unsigned ADAM7_DY[7] = {8, 8, 8, 4, 4, 2, 2}"
            ]
        }
    ],
    "function": [
        {
            "path": null,
            "name": "lodepng_decode_memory",
            "header": "unsigned lodepng_decode_memory(unsigned char **out, unsigned *w, unsigned *h, const unsigned char *in, size_t insize, LodePNGColorType colortype, unsigned bitdepth)",
            "params": [
                "unsigned char **out",
                "unsigned *w",
                "unsigned *h",
                "const unsigned char *in",
                "size_t insize",
                "LodePNGColorType colortype",
                "unsigned bitdepth"
            ],
            "definition": "unsigned lodepng_decode_memory(unsigned char **out, unsigned *w, unsigned *h, const unsigned char *in, size_t insize, LodePNGColorType colortype, unsigned bitdepth)\n{\n  unsigned error;\n  LodePNGState state;\n  lodepng_state_init(&state);\n  state.info_raw.colortype = colortype;\n  state.info_raw.bitdepth = bitdepth;\n  state.decoder.read_text_chunks = 0;\n  state.decoder.remember_unknown_chunks = 0;\n  error = lodepng_decode(out, w, h, &state, in, insize);\n  lodepng_state_cleanup(&state);\n  return error;\n}\n\n",
            "calle": [
                "lodepng_decode",
                "lodepng_state_cleanup",
                "lodepng_state_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "colortype",
                        "type": "LodePNGColorType",
                        "definition": [
                            "LodePNGColorType colortype"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitdepth",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bitdepth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error"
                        ]
                    },
                    {
                        "path": null,
                        "name": "state",
                        "type": "LodePNGState",
                        "definition": [
                            "LodePNGState state"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_decode32",
            "header": "unsigned lodepng_decode32(unsigned char **out, unsigned *w, unsigned *h, const unsigned char *in, size_t insize)",
            "params": [
                "unsigned char **out",
                "unsigned *w",
                "unsigned *h",
                "const unsigned char *in",
                "size_t insize"
            ],
            "definition": "unsigned lodepng_decode32(unsigned char **out, unsigned *w, unsigned *h, const unsigned char *in, size_t insize)\n{\n  return lodepng_decode_memory(out, w, h, in, insize, LCT_RGBA, 8);\n}\n\n",
            "calle": [
                "lodepng_decode_memory"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_decode24",
            "header": "unsigned lodepng_decode24(unsigned char **out, unsigned *w, unsigned *h, const unsigned char *in, size_t insize)",
            "params": [
                "unsigned char **out",
                "unsigned *w",
                "unsigned *h",
                "const unsigned char *in",
                "size_t insize"
            ],
            "definition": "unsigned lodepng_decode24(unsigned char **out, unsigned *w, unsigned *h, const unsigned char *in, size_t insize)\n{\n  return lodepng_decode_memory(out, w, h, in, insize, LCT_RGB, 8);\n}\n\n",
            "calle": [
                "lodepng_decode_memory"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_decode_file",
            "header": "unsigned lodepng_decode_file(unsigned char **out, unsigned *w, unsigned *h, const char *filename, LodePNGColorType colortype, unsigned bitdepth)",
            "params": [
                "unsigned char **out",
                "unsigned *w",
                "unsigned *h",
                "const char *filename",
                "LodePNGColorType colortype",
                "unsigned bitdepth"
            ],
            "definition": "unsigned lodepng_decode_file(unsigned char **out, unsigned *w, unsigned *h, const char *filename, LodePNGColorType colortype, unsigned bitdepth)\n{\n  unsigned char *buffer = 0;\n  size_t buffersize;\n  unsigned error;\n  *out = 0;\n  *w = (*h = 0);\n  error = lodepng_load_file(&buffer, &buffersize, filename);\n  if (!error)\n  {\n    error = lodepng_decode_memory(out, w, h, buffer, buffersize, colortype, bitdepth);\n  }\n  lodepng_free(buffer);\n  return error;\n}\n\n",
            "calle": [
                "lodepng_decode_memory",
                "lodepng_free",
                "lodepng_load_file"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "filename",
                        "type": "const char *",
                        "definition": [
                            "const char *filename"
                        ]
                    },
                    {
                        "path": null,
                        "name": "colortype",
                        "type": "LodePNGColorType",
                        "definition": [
                            "LodePNGColorType colortype"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitdepth",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bitdepth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "buffer",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *buffer = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "buffersize",
                        "type": "size_t",
                        "definition": [
                            "size_t buffersize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_decode32_file",
            "header": "unsigned lodepng_decode32_file(unsigned char **out, unsigned *w, unsigned *h, const char *filename)",
            "params": [
                "unsigned char **out",
                "unsigned *w",
                "unsigned *h",
                "const char *filename"
            ],
            "definition": "unsigned lodepng_decode32_file(unsigned char **out, unsigned *w, unsigned *h, const char *filename)\n{\n  return lodepng_decode_file(out, w, h, filename, LCT_RGBA, 8);\n}\n\n",
            "calle": [
                "lodepng_decode_file"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "filename",
                        "type": "const char *",
                        "definition": [
                            "const char *filename"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_decode24_file",
            "header": "unsigned lodepng_decode24_file(unsigned char **out, unsigned *w, unsigned *h, const char *filename)",
            "params": [
                "unsigned char **out",
                "unsigned *w",
                "unsigned *h",
                "const char *filename"
            ],
            "definition": "unsigned lodepng_decode24_file(unsigned char **out, unsigned *w, unsigned *h, const char *filename)\n{\n  return lodepng_decode_file(out, w, h, filename, LCT_RGB, 8);\n}\n\n",
            "calle": [
                "lodepng_decode_file"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "filename",
                        "type": "const char *",
                        "definition": [
                            "const char *filename"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_encode_memory",
            "header": "unsigned lodepng_encode_memory(unsigned char **out, size_t *outsize, const unsigned char *image, unsigned w, unsigned h, LodePNGColorType colortype, unsigned bitdepth)",
            "params": [
                "unsigned char **out",
                "size_t *outsize",
                "const unsigned char *image",
                "unsigned w",
                "unsigned h",
                "LodePNGColorType colortype",
                "unsigned bitdepth"
            ],
            "definition": "unsigned lodepng_encode_memory(unsigned char **out, size_t *outsize, const unsigned char *image, unsigned w, unsigned h, LodePNGColorType colortype, unsigned bitdepth)\n{\n  unsigned error;\n  LodePNGState state;\n  lodepng_state_init(&state);\n  state.info_raw.colortype = colortype;\n  state.info_raw.bitdepth = bitdepth;\n  state.info_png.color.colortype = colortype;\n  state.info_png.color.bitdepth = bitdepth;\n  lodepng_encode(out, outsize, image, w, h, &state);\n  error = state.error;\n  lodepng_state_cleanup(&state);\n  return error;\n}\n\n",
            "calle": [
                "lodepng_encode",
                "lodepng_state_cleanup",
                "lodepng_state_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outsize",
                        "type": "size_t *",
                        "definition": [
                            "size_t *outsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "image",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *image"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "colortype",
                        "type": "LodePNGColorType",
                        "definition": [
                            "LodePNGColorType colortype"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitdepth",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bitdepth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error"
                        ]
                    },
                    {
                        "path": null,
                        "name": "state",
                        "type": "LodePNGState",
                        "definition": [
                            "LodePNGState state"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_encode32",
            "header": "unsigned lodepng_encode32(unsigned char **out, size_t *outsize, const unsigned char *image, unsigned w, unsigned h)",
            "params": [
                "unsigned char **out",
                "size_t *outsize",
                "const unsigned char *image",
                "unsigned w",
                "unsigned h"
            ],
            "definition": "unsigned lodepng_encode32(unsigned char **out, size_t *outsize, const unsigned char *image, unsigned w, unsigned h)\n{\n  return lodepng_encode_memory(out, outsize, image, w, h, LCT_RGBA, 8);\n}\n\n",
            "calle": [
                "lodepng_encode_memory"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outsize",
                        "type": "size_t *",
                        "definition": [
                            "size_t *outsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "image",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *image"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_encode24",
            "header": "unsigned lodepng_encode24(unsigned char **out, size_t *outsize, const unsigned char *image, unsigned w, unsigned h)",
            "params": [
                "unsigned char **out",
                "size_t *outsize",
                "const unsigned char *image",
                "unsigned w",
                "unsigned h"
            ],
            "definition": "unsigned lodepng_encode24(unsigned char **out, size_t *outsize, const unsigned char *image, unsigned w, unsigned h)\n{\n  return lodepng_encode_memory(out, outsize, image, w, h, LCT_RGB, 8);\n}\n\n",
            "calle": [
                "lodepng_encode_memory"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outsize",
                        "type": "size_t *",
                        "definition": [
                            "size_t *outsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "image",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *image"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_encode_file",
            "header": "unsigned lodepng_encode_file(const char *filename, const unsigned char *image, unsigned w, unsigned h, LodePNGColorType colortype, unsigned bitdepth)",
            "params": [
                "const char *filename",
                "const unsigned char *image",
                "unsigned w",
                "unsigned h",
                "LodePNGColorType colortype",
                "unsigned bitdepth"
            ],
            "definition": "unsigned lodepng_encode_file(const char *filename, const unsigned char *image, unsigned w, unsigned h, LodePNGColorType colortype, unsigned bitdepth)\n{\n  unsigned char *buffer;\n  size_t buffersize;\n  unsigned error = lodepng_encode_memory(&buffer, &buffersize, image, w, h, colortype, bitdepth);\n  if (!error)\n  {\n    error = lodepng_save_file(buffer, buffersize, filename);\n  }\n  lodepng_free(buffer);\n  return error;\n}\n\n",
            "calle": [
                "lodepng_encode_memory",
                "lodepng_free",
                "lodepng_save_file"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "filename",
                        "type": "const char *",
                        "definition": [
                            "const char *filename"
                        ]
                    },
                    {
                        "path": null,
                        "name": "image",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *image"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "colortype",
                        "type": "LodePNGColorType",
                        "definition": [
                            "LodePNGColorType colortype"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitdepth",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bitdepth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "buffer",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *buffer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "buffersize",
                        "type": "size_t",
                        "definition": [
                            "size_t buffersize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_encode_memory(&buffer, &buffersize, image, w, h, colortype, bitdepth)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_encode32_file",
            "header": "unsigned lodepng_encode32_file(const char *filename, const unsigned char *image, unsigned w, unsigned h)",
            "params": [
                "const char *filename",
                "const unsigned char *image",
                "unsigned w",
                "unsigned h"
            ],
            "definition": "unsigned lodepng_encode32_file(const char *filename, const unsigned char *image, unsigned w, unsigned h)\n{\n  return lodepng_encode_file(filename, image, w, h, LCT_RGBA, 8);\n}\n\n",
            "calle": [
                "lodepng_encode_file"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "filename",
                        "type": "const char *",
                        "definition": [
                            "const char *filename"
                        ]
                    },
                    {
                        "path": null,
                        "name": "image",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *image"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_encode24_file",
            "header": "unsigned lodepng_encode24_file(const char *filename, const unsigned char *image, unsigned w, unsigned h)",
            "params": [
                "const char *filename",
                "const unsigned char *image",
                "unsigned w",
                "unsigned h"
            ],
            "definition": "unsigned lodepng_encode24_file(const char *filename, const unsigned char *image, unsigned w, unsigned h)\n{\n  return lodepng_encode_file(filename, image, w, h, LCT_RGB, 8);\n}\n\n",
            "calle": [
                "lodepng_encode_file"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "filename",
                        "type": "const char *",
                        "definition": [
                            "const char *filename"
                        ]
                    },
                    {
                        "path": null,
                        "name": "image",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *image"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_error_text",
            "header": "const char *lodepng_error_text(unsigned code)",
            "params": [
                "unsigned code"
            ],
            "definition": "const char *lodepng_error_text(unsigned code)\n{\n  switch (code)\n  {\n    case 0:\n    {\n      return \"no error, everything went ok\";\n    }\n\n    case 1:\n    {\n      return \"nothing done yet\";\n    }\n\n    case 10:\n    {\n      return \"end of input memory reached without huffman end code\";\n    }\n\n    case 11:\n    {\n      return \"error in code tree made it jump outside of huffman tree\";\n    }\n\n    case 13:\n    {\n      return \"problem while processing dynamic deflate block\";\n    }\n\n    case 14:\n    {\n      return \"problem while processing dynamic deflate block\";\n    }\n\n    case 15:\n    {\n      return \"problem while processing dynamic deflate block\";\n    }\n\n    case 16:\n    {\n      return \"invalid code while processing dynamic deflate block\";\n    }\n\n    case 17:\n    {\n      return \"end of out buffer memory reached while inflating\";\n    }\n\n    case 18:\n    {\n      return \"invalid distance code while inflating\";\n    }\n\n    case 19:\n    {\n      return \"end of out buffer memory reached while inflating\";\n    }\n\n    case 20:\n    {\n      return \"invalid deflate block BTYPE encountered while decoding\";\n    }\n\n    case 21:\n    {\n      return \"NLEN is not ones complement of LEN in a deflate block\";\n    }\n\n    case 22:\n    {\n      return \"end of out buffer memory reached while inflating\";\n    }\n\n    case 23:\n    {\n      return \"end of in buffer memory reached while inflating\";\n    }\n\n    case 24:\n    {\n      return \"invalid FCHECK in zlib header\";\n    }\n\n    case 25:\n    {\n      return \"invalid compression method in zlib header\";\n    }\n\n    case 26:\n    {\n      return \"FDICT encountered in zlib header while it's not used for PNG\";\n    }\n\n    case 27:\n    {\n      return \"PNG file is smaller than a PNG header\";\n    }\n\n    case 28:\n    {\n      return \"incorrect PNG signature, it's no PNG or corrupted\";\n    }\n\n    case 29:\n    {\n      return \"first chunk is not the header chunk\";\n    }\n\n    case 30:\n    {\n      return \"chunk length too large, chunk broken off at end of file\";\n    }\n\n    case 31:\n    {\n      return \"illegal PNG color type or bpp\";\n    }\n\n    case 32:\n    {\n      return \"illegal PNG compression method\";\n    }\n\n    case 33:\n    {\n      return \"illegal PNG filter method\";\n    }\n\n    case 34:\n    {\n      return \"illegal PNG interlace method\";\n    }\n\n    case 35:\n    {\n      return \"chunk length of a chunk is too large or the chunk too small\";\n    }\n\n    case 36:\n    {\n      return \"illegal PNG filter type encountered\";\n    }\n\n    case 37:\n    {\n      return \"illegal bit depth for this color type given\";\n    }\n\n    case 38:\n    {\n      return \"the palette is too small or too big\";\n    }\n\n    case 39:\n    {\n      return \"tRNS chunk before PLTE or has more entries than palette size\";\n    }\n\n    case 40:\n    {\n      return \"tRNS chunk has wrong size for grayscale image\";\n    }\n\n    case 41:\n    {\n      return \"tRNS chunk has wrong size for RGB image\";\n    }\n\n    case 42:\n    {\n      return \"tRNS chunk appeared while it was not allowed for this color type\";\n    }\n\n    case 43:\n    {\n      return \"bKGD chunk has wrong size for palette image\";\n    }\n\n    case 44:\n    {\n      return \"bKGD chunk has wrong size for grayscale image\";\n    }\n\n    case 45:\n    {\n      return \"bKGD chunk has wrong size for RGB image\";\n    }\n\n    case 48:\n    {\n      return \"empty input buffer given to decoder. Maybe caused by non-existing file?\";\n    }\n\n    case 49:\n    {\n      return \"jumped past memory while generating dynamic huffman tree\";\n    }\n\n    case 50:\n    {\n      return \"jumped past memory while generating dynamic huffman tree\";\n    }\n\n    case 51:\n    {\n      return \"jumped past memory while inflating huffman block\";\n    }\n\n    case 52:\n    {\n      return \"jumped past memory while inflating\";\n    }\n\n    case 53:\n    {\n      return \"size of zlib data too small\";\n    }\n\n    case 54:\n    {\n      return \"repeat symbol in tree while there was no value symbol yet\";\n    }\n\n    case 55:\n    {\n      return \"jumped past tree while generating huffman tree\";\n    }\n\n    case 56:\n    {\n      return \"given output image colortype or bitdepth not supported for color conversion\";\n    }\n\n    case 57:\n    {\n      return \"invalid CRC encountered (checking CRC can be disabled)\";\n    }\n\n    case 58:\n    {\n      return \"invalid ADLER32 encountered (checking ADLER32 can be disabled)\";\n    }\n\n    case 59:\n    {\n      return \"requested color conversion not supported\";\n    }\n\n    case 60:\n    {\n      return \"invalid window size given in the settings of the encoder (must be 0-32768)\";\n    }\n\n    case 61:\n    {\n      return \"invalid BTYPE given in the settings of the encoder (only 0, 1 and 2 are allowed)\";\n    }\n\n    case 62:\n    {\n      return \"conversion from color to grayscale not supported\";\n    }\n\n    case 63:\n    {\n      return \"length of a chunk too long, max allowed for PNG is 2147483647 bytes per chunk\";\n    }\n\n    case 64:\n    {\n      return \"the length of the END symbol 256 in the Huffman tree is 0\";\n    }\n\n    case 66:\n    {\n      return \"the length of a text chunk keyword given to the encoder is longer than the maximum of 79 bytes\";\n    }\n\n    case 67:\n    {\n      return \"the length of a text chunk keyword given to the encoder is smaller than the minimum of 1 byte\";\n    }\n\n    case 68:\n    {\n      return \"tried to encode a PLTE chunk with a palette that has less than 1 or more than 256 colors\";\n    }\n\n    case 69:\n    {\n      return \"unknown chunk type with 'critical' flag encountered by the decoder\";\n    }\n\n    case 71:\n    {\n      return \"invalid interlace mode given to encoder (must be 0 or 1)\";\n    }\n\n    case 72:\n    {\n      return \"while decoding, invalid compression method encountering in zTXt or iTXt chunk (it must be 0)\";\n    }\n\n    case 73:\n    {\n      return \"invalid tIME chunk size\";\n    }\n\n    case 74:\n    {\n      return \"invalid pHYs chunk size\";\n    }\n\n    case 75:\n    {\n      return \"no null termination char found while decoding text chunk\";\n    }\n\n    case 76:\n    {\n      return \"iTXt chunk too short to contain required bytes\";\n    }\n\n    case 77:\n    {\n      return \"integer overflow in buffer size\";\n    }\n\n    case 78:\n    {\n      return \"failed to open file for reading\";\n    }\n\n    case 79:\n    {\n      return \"failed to open file for writing\";\n    }\n\n    case 80:\n    {\n      return \"tried creating a tree of 0 symbols\";\n    }\n\n    case 81:\n    {\n      return \"lazy matching at pos 0 is impossible\";\n    }\n\n    case 82:\n    {\n      return \"color conversion to palette requested while a color isn't in palette, or index out of bounds\";\n    }\n\n    case 83:\n    {\n      return \"memory allocation failed\";\n    }\n\n    case 84:\n    {\n      return \"given image too small to contain all pixels to be encoded\";\n    }\n\n    case 86:\n    {\n      return \"impossible offset in lz77 encoding (internal bug)\";\n    }\n\n    case 87:\n    {\n      return \"must provide custom zlib function pointer if LODEPNG_COMPILE_ZLIB is not defined\";\n    }\n\n    case 88:\n    {\n      return \"invalid filter strategy given for LodePNGEncoderSettings.filter_strategy\";\n    }\n\n    case 89:\n    {\n      return \"text chunk keyword too short or long: must have size 1-79\";\n    }\n\n    case 90:\n    {\n      return \"windowsize must be a power of two\";\n    }\n\n    case 91:\n    {\n      return \"invalid decompressed idat size\";\n    }\n\n    case 92:\n    {\n      return \"integer overflow due to too many pixels\";\n    }\n\n    case 93:\n    {\n      return \"zero width or height is invalid\";\n    }\n\n    case 94:\n    {\n      return \"header chunk must have a size of 13 bytes\";\n    }\n\n    case 95:\n    {\n      return \"integer overflow with combined idat chunk size\";\n    }\n\n    case 96:\n    {\n      return \"invalid gAMA chunk size\";\n    }\n\n    case 97:\n    {\n      return \"invalid cHRM chunk size\";\n    }\n\n    case 98:\n    {\n      return \"invalid sRGB chunk size\";\n    }\n\n    case 99:\n    {\n      return \"invalid sRGB rendering intent\";\n    }\n\n    case 100:\n    {\n      return \"invalid ICC profile color type, the PNG specification only allows RGB or GRAY\";\n    }\n\n    case 101:\n    {\n      return \"PNG specification does not allow RGB ICC profile on gray color types and vice versa\";\n    }\n\n    case 102:\n    {\n      return \"not allowed to set grayscale ICC profile with colored pixels by PNG specification\";\n    }\n\n    case 103:\n    {\n      return \"invalid palette index in bKGD chunk. Maybe it came before PLTE chunk?\";\n    }\n\n    case 104:\n    {\n      return \"invalid bKGD color while encoding (e.g. palette index out of range)\";\n    }\n\n    case 105:\n    {\n      return \"integer overflow of bitsize\";\n    }\n\n    case 106:\n    {\n      return \"PNG file must have PLTE chunk if color type is palette\";\n    }\n\n    case 107:\n    {\n      return \"color convert from palette mode requested without setting the palette data in it\";\n    }\n\n    case 108:\n    {\n      return \"tried to add more than 256 values to a palette\";\n    }\n\n    case 109:\n    {\n      return \"tried to decompress zlib or deflate data larger than desired max_output_size\";\n    }\n\n    case 110:\n    {\n      return \"custom zlib or inflate decompression failed\";\n    }\n\n    case 111:\n    {\n      return \"custom zlib or deflate compression failed\";\n    }\n\n    case 112:\n    {\n      return \"compressed text unreasonably large\";\n    }\n\n    case 113:\n    {\n      return \"ICC profile unreasonably large\";\n    }\n\n    case 114:\n    {\n      return \"sBIT chunk has wrong size for the color type of the image\";\n    }\n\n    case 115:\n    {\n      return \"sBIT value out of range\";\n    }\n\n  }\n\n  return \"unknown error code\";\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "code",
                        "type": "unsigned",
                        "definition": [
                            "unsigned code"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_decompress_settings_init",
            "header": "void lodepng_decompress_settings_init(LodePNGDecompressSettings *settings)",
            "params": [
                "LodePNGDecompressSettings *settings"
            ],
            "definition": "void lodepng_decompress_settings_init(LodePNGDecompressSettings *settings)\n{\n  settings->ignore_adler32 = 0;\n  settings->ignore_nlen = 0;\n  settings->max_output_size = 0;\n  settings->custom_zlib = 0;\n  settings->custom_inflate = 0;\n  settings->custom_context = 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "settings",
                        "type": "LodePNGDecompressSettings *",
                        "definition": [
                            "LodePNGDecompressSettings *settings"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_compress_settings_init",
            "header": "void lodepng_compress_settings_init(LodePNGCompressSettings *settings)",
            "params": [
                "LodePNGCompressSettings *settings"
            ],
            "definition": "void lodepng_compress_settings_init(LodePNGCompressSettings *settings)\n{\n  settings->btype = 2;\n  settings->use_lz77 = 1;\n  settings->windowsize = 2048;\n  settings->minmatch = 3;\n  settings->nicematch = 128;\n  settings->lazymatching = 1;\n  settings->custom_zlib = 0;\n  settings->custom_deflate = 0;\n  settings->custom_context = 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "settings",
                        "type": "LodePNGCompressSettings *",
                        "definition": [
                            "LodePNGCompressSettings *settings"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_color_mode_init",
            "header": "void lodepng_color_mode_init(LodePNGColorMode *info)",
            "params": [
                "LodePNGColorMode *info"
            ],
            "definition": "void lodepng_color_mode_init(LodePNGColorMode *info)\n{\n  info->key_defined = 0;\n  info->key_r = (info->key_g = (info->key_b = 0));\n  info->colortype = LCT_RGBA;\n  info->bitdepth = 8;\n  info->palette = 0;\n  info->palettesize = 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGColorMode *",
                        "definition": [
                            "LodePNGColorMode *info"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_color_mode_cleanup",
            "header": "void lodepng_color_mode_cleanup(LodePNGColorMode *info)",
            "params": [
                "LodePNGColorMode *info"
            ],
            "definition": "void lodepng_color_mode_cleanup(LodePNGColorMode *info)\n{\n  lodepng_palette_clear(info);\n}\n\n",
            "calle": [
                "lodepng_palette_clear"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGColorMode *",
                        "definition": [
                            "LodePNGColorMode *info"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_color_mode_copy",
            "header": "unsigned lodepng_color_mode_copy(LodePNGColorMode *dest, const LodePNGColorMode *source)",
            "params": [
                "LodePNGColorMode *dest",
                "const LodePNGColorMode *source"
            ],
            "definition": "unsigned lodepng_color_mode_copy(LodePNGColorMode *dest, const LodePNGColorMode *source)\n{\n  lodepng_color_mode_cleanup(dest);\n  lodepng_memcpy(dest, source, sizeof(LodePNGColorMode));\n  if (source->palette)\n  {\n    dest->palette = (unsigned char *) lodepng_malloc(1024);\n    if ((!dest->palette) && source->palettesize)\n    {\n      return 83;\n    }\n    lodepng_memcpy(dest->palette, source->palette, source->palettesize * 4);\n  }\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_color_mode_cleanup",
                "lodepng_malloc",
                "lodepng_memcpy"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "dest",
                        "type": "LodePNGColorMode *",
                        "definition": [
                            "LodePNGColorMode *dest"
                        ]
                    },
                    {
                        "path": null,
                        "name": "source",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *source"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_color_mode_make",
            "header": "LodePNGColorMode lodepng_color_mode_make(LodePNGColorType colortype, unsigned bitdepth)",
            "params": [
                "LodePNGColorType colortype",
                "unsigned bitdepth"
            ],
            "definition": "LodePNGColorMode lodepng_color_mode_make(LodePNGColorType colortype, unsigned bitdepth)\n{\n  LodePNGColorMode result;\n  lodepng_color_mode_init(&result);\n  result.colortype = colortype;\n  result.bitdepth = bitdepth;\n  return result;\n}\n\n",
            "calle": [
                "lodepng_color_mode_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "colortype",
                        "type": "LodePNGColorType",
                        "definition": [
                            "LodePNGColorType colortype"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitdepth",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bitdepth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "result",
                        "type": "LodePNGColorMode",
                        "definition": [
                            "LodePNGColorMode result"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_palette_clear",
            "header": "void lodepng_palette_clear(LodePNGColorMode *info)",
            "params": [
                "LodePNGColorMode *info"
            ],
            "definition": "void lodepng_palette_clear(LodePNGColorMode *info)\n{\n  if (info->palette)\n  {\n    lodepng_free(info->palette);\n  }\n  info->palette = 0;\n  info->palettesize = 0;\n}\n\n",
            "calle": [
                "lodepng_free"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGColorMode *",
                        "definition": [
                            "LodePNGColorMode *info"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_palette_add",
            "header": "unsigned lodepng_palette_add(LodePNGColorMode *info, unsigned char r, unsigned char g, unsigned char b, unsigned char a)",
            "params": [
                "LodePNGColorMode *info",
                "unsigned char r",
                "unsigned char g",
                "unsigned char b",
                "unsigned char a"
            ],
            "definition": "unsigned lodepng_palette_add(LodePNGColorMode *info, unsigned char r, unsigned char g, unsigned char b, unsigned char a)\n{\n  if (!info->palette)\n  {\n    lodepng_color_mode_alloc_palette(info);\n    if (!info->palette)\n    {\n      return 83;\n    }\n  }\n  if (info->palettesize >= 256)\n  {\n    return 108;\n  }\n  info->palette[(4 * info->palettesize) + 0] = r;\n  info->palette[(4 * info->palettesize) + 1] = g;\n  info->palette[(4 * info->palettesize) + 2] = b;\n  info->palette[(4 * info->palettesize) + 3] = a;\n  info->palettesize += 1;\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_color_mode_alloc_palette"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGColorMode *",
                        "definition": [
                            "LodePNGColorMode *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char g"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char a"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_get_bpp",
            "header": "unsigned lodepng_get_bpp(const LodePNGColorMode *info)",
            "params": [
                "const LodePNGColorMode *info"
            ],
            "definition": "unsigned lodepng_get_bpp(const LodePNGColorMode *info)\n{\n  return lodepng_get_bpp_lct(info->colortype, info->bitdepth);\n}\n\n",
            "calle": [
                "lodepng_get_bpp_lct"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *info"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_get_channels",
            "header": "unsigned lodepng_get_channels(const LodePNGColorMode *info)",
            "params": [
                "const LodePNGColorMode *info"
            ],
            "definition": "unsigned lodepng_get_channels(const LodePNGColorMode *info)\n{\n  return getNumColorChannels(info->colortype);\n}\n\n",
            "calle": [
                "getNumColorChannels"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *info"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_is_greyscale_type",
            "header": "unsigned lodepng_is_greyscale_type(const LodePNGColorMode *info)",
            "params": [
                "const LodePNGColorMode *info"
            ],
            "definition": "unsigned lodepng_is_greyscale_type(const LodePNGColorMode *info)\n{\n  return (info->colortype == LCT_GREY) || (info->colortype == LCT_GREY_ALPHA);\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *info"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_is_alpha_type",
            "header": "unsigned lodepng_is_alpha_type(const LodePNGColorMode *info)",
            "params": [
                "const LodePNGColorMode *info"
            ],
            "definition": "unsigned lodepng_is_alpha_type(const LodePNGColorMode *info)\n{\n  return (info->colortype & 4) != 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *info"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_is_palette_type",
            "header": "unsigned lodepng_is_palette_type(const LodePNGColorMode *info)",
            "params": [
                "const LodePNGColorMode *info"
            ],
            "definition": "unsigned lodepng_is_palette_type(const LodePNGColorMode *info)\n{\n  return info->colortype == LCT_PALETTE;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *info"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_has_palette_alpha",
            "header": "unsigned lodepng_has_palette_alpha(const LodePNGColorMode *info)",
            "params": [
                "const LodePNGColorMode *info"
            ],
            "definition": "unsigned lodepng_has_palette_alpha(const LodePNGColorMode *info)\n{\n  size_t i;\n  for (i = 0; i != info->palettesize; i += 1)\n  {\n    if (info->palette[(i * 4) + 3] < 255)\n    {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_can_have_alpha",
            "header": "unsigned lodepng_can_have_alpha(const LodePNGColorMode *info)",
            "params": [
                "const LodePNGColorMode *info"
            ],
            "definition": "unsigned lodepng_can_have_alpha(const LodePNGColorMode *info)\n{\n  return (info->key_defined || lodepng_is_alpha_type(info)) || lodepng_has_palette_alpha(info);\n}\n\n",
            "calle": [
                "lodepng_has_palette_alpha",
                "lodepng_is_alpha_type"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *info"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_get_raw_size",
            "header": "size_t lodepng_get_raw_size(unsigned w, unsigned h, const LodePNGColorMode *color)",
            "params": [
                "unsigned w",
                "unsigned h",
                "const LodePNGColorMode *color"
            ],
            "definition": "size_t lodepng_get_raw_size(unsigned w, unsigned h, const LodePNGColorMode *color)\n{\n  return lodepng_get_raw_size_lct(w, h, color->colortype, color->bitdepth);\n}\n\n",
            "calle": [
                "lodepng_get_raw_size_lct"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "color",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *color"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_info_init",
            "header": "void lodepng_info_init(LodePNGInfo *info)",
            "params": [
                "LodePNGInfo *info"
            ],
            "definition": "void lodepng_info_init(LodePNGInfo *info)\n{\n  lodepng_color_mode_init(&info->color);\n  info->interlace_method = 0;\n  info->compression_method = 0;\n  info->filter_method = 0;\n  info->background_defined = 0;\n  info->background_r = (info->background_g = (info->background_b = 0));\n  LodePNGText_init(info);\n  LodePNGIText_init(info);\n  info->time_defined = 0;\n  info->phys_defined = 0;\n  info->gama_defined = 0;\n  info->chrm_defined = 0;\n  info->srgb_defined = 0;\n  info->iccp_defined = 0;\n  info->iccp_name = 0;\n  info->iccp_profile = 0;\n  info->sbit_defined = 0;\n  info->sbit_r = (info->sbit_g = (info->sbit_b = (info->sbit_a = 0)));\n  LodePNGUnknownChunks_init(info);\n}\n\n",
            "calle": [
                "LodePNGIText_init",
                "LodePNGText_init",
                "LodePNGUnknownChunks_init",
                "lodepng_color_mode_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_info_cleanup",
            "header": "void lodepng_info_cleanup(LodePNGInfo *info)",
            "params": [
                "LodePNGInfo *info"
            ],
            "definition": "void lodepng_info_cleanup(LodePNGInfo *info)\n{\n  lodepng_color_mode_cleanup(&info->color);\n  LodePNGText_cleanup(info);\n  LodePNGIText_cleanup(info);\n  lodepng_clear_icc(info);\n  LodePNGUnknownChunks_cleanup(info);\n}\n\n",
            "calle": [
                "LodePNGIText_cleanup",
                "LodePNGText_cleanup",
                "LodePNGUnknownChunks_cleanup",
                "lodepng_clear_icc",
                "lodepng_color_mode_cleanup"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_info_copy",
            "header": "unsigned lodepng_info_copy(LodePNGInfo *dest, const LodePNGInfo *source)",
            "params": [
                "LodePNGInfo *dest",
                "const LodePNGInfo *source"
            ],
            "definition": "unsigned lodepng_info_copy(LodePNGInfo *dest, const LodePNGInfo *source)\n{\n  lodepng_info_cleanup(dest);\n  lodepng_memcpy(dest, source, sizeof(LodePNGInfo));\n  lodepng_color_mode_init(&dest->color);\n  {\n    unsigned error = lodepng_color_mode_copy(&dest->color, &source->color);\n    if (error)\n    {\n      return error;\n    }\n  }\n  ;\n  {\n    unsigned error = LodePNGText_copy(dest, source);\n    if (error)\n    {\n      return error;\n    }\n  }\n  ;\n  {\n    unsigned error = LodePNGIText_copy(dest, source);\n    if (error)\n    {\n      return error;\n    }\n  }\n  ;\n  if (source->iccp_defined)\n  {\n    {\n      unsigned error = lodepng_assign_icc(dest, source->iccp_name, source->iccp_profile, source->iccp_profile_size);\n      if (error)\n      {\n        return error;\n      }\n    }\n    ;\n  }\n  LodePNGUnknownChunks_init(dest);\n  {\n    unsigned error = LodePNGUnknownChunks_copy(dest, source);\n    if (error)\n    {\n      return error;\n    }\n  }\n  ;\n  return 0;\n}\n\n",
            "calle": [
                "LodePNGIText_copy",
                "LodePNGText_copy",
                "LodePNGUnknownChunks_copy",
                "LodePNGUnknownChunks_init",
                "lodepng_assign_icc",
                "lodepng_color_mode_copy",
                "lodepng_color_mode_init",
                "lodepng_info_cleanup",
                "lodepng_memcpy"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "dest",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *dest"
                        ]
                    },
                    {
                        "path": null,
                        "name": "source",
                        "type": "const LodePNGInfo *",
                        "definition": [
                            "const LodePNGInfo *source"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = LodePNGIText_copy(dest, source)",
                            "unsigned error = LodePNGText_copy(dest, source)",
                            "unsigned error = LodePNGUnknownChunks_copy(dest, source)",
                            "unsigned error = lodepng_assign_icc(dest, source->iccp_name, source->iccp_profile, source->iccp_profile_size)",
                            "unsigned error = lodepng_color_mode_copy(&dest->color, &source->color)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_add_text",
            "header": "unsigned lodepng_add_text(LodePNGInfo *info, const char *key, const char *str)",
            "params": [
                "LodePNGInfo *info",
                "const char *key",
                "const char *str"
            ],
            "definition": "unsigned lodepng_add_text(LodePNGInfo *info, const char *key, const char *str)\n{\n  return lodepng_add_text_sized(info, key, str, lodepng_strlen(str));\n}\n\n",
            "calle": [
                "lodepng_add_text_sized",
                "lodepng_strlen"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key",
                        "type": "const char *",
                        "definition": [
                            "const char *key"
                        ]
                    },
                    {
                        "path": null,
                        "name": "str",
                        "type": "const char *",
                        "definition": [
                            "const char *str"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_clear_text",
            "header": "void lodepng_clear_text(LodePNGInfo *info)",
            "params": [
                "LodePNGInfo *info"
            ],
            "definition": "void lodepng_clear_text(LodePNGInfo *info)\n{\n  LodePNGText_cleanup(info);\n}\n\n",
            "calle": [
                "LodePNGText_cleanup"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_add_itext",
            "header": "unsigned lodepng_add_itext(LodePNGInfo *info, const char *key, const char *langtag, const char *transkey, const char *str)",
            "params": [
                "LodePNGInfo *info",
                "const char *key",
                "const char *langtag",
                "const char *transkey",
                "const char *str"
            ],
            "definition": "unsigned lodepng_add_itext(LodePNGInfo *info, const char *key, const char *langtag, const char *transkey, const char *str)\n{\n  return lodepng_add_itext_sized(info, key, langtag, transkey, str, lodepng_strlen(str));\n}\n\n",
            "calle": [
                "lodepng_add_itext_sized",
                "lodepng_strlen"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key",
                        "type": "const char *",
                        "definition": [
                            "const char *key"
                        ]
                    },
                    {
                        "path": null,
                        "name": "langtag",
                        "type": "const char *",
                        "definition": [
                            "const char *langtag"
                        ]
                    },
                    {
                        "path": null,
                        "name": "transkey",
                        "type": "const char *",
                        "definition": [
                            "const char *transkey"
                        ]
                    },
                    {
                        "path": null,
                        "name": "str",
                        "type": "const char *",
                        "definition": [
                            "const char *str"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_clear_itext",
            "header": "void lodepng_clear_itext(LodePNGInfo *info)",
            "params": [
                "LodePNGInfo *info"
            ],
            "definition": "void lodepng_clear_itext(LodePNGInfo *info)\n{\n  LodePNGIText_cleanup(info);\n}\n\n",
            "calle": [
                "LodePNGIText_cleanup"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_set_icc",
            "header": "unsigned lodepng_set_icc(LodePNGInfo *info, const char *name, const unsigned char *profile, unsigned profile_size)",
            "params": [
                "LodePNGInfo *info",
                "const char *name",
                "const unsigned char *profile",
                "unsigned profile_size"
            ],
            "definition": "unsigned lodepng_set_icc(LodePNGInfo *info, const char *name, const unsigned char *profile, unsigned profile_size)\n{\n  if (info->iccp_name)\n  {\n    lodepng_clear_icc(info);\n  }\n  info->iccp_defined = 1;\n  return lodepng_assign_icc(info, name, profile, profile_size);\n}\n\n",
            "calle": [
                "lodepng_assign_icc",
                "lodepng_clear_icc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "name",
                        "type": "const char *",
                        "definition": [
                            "const char *name"
                        ]
                    },
                    {
                        "path": null,
                        "name": "profile",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *profile"
                        ]
                    },
                    {
                        "path": null,
                        "name": "profile_size",
                        "type": "unsigned",
                        "definition": [
                            "unsigned profile_size"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_clear_icc",
            "header": "void lodepng_clear_icc(LodePNGInfo *info)",
            "params": [
                "LodePNGInfo *info"
            ],
            "definition": "void lodepng_clear_icc(LodePNGInfo *info)\n{\n  string_cleanup(&info->iccp_name);\n  lodepng_free(info->iccp_profile);\n  info->iccp_profile = 0;\n  info->iccp_profile_size = 0;\n  info->iccp_defined = 0;\n}\n\n",
            "calle": [
                "lodepng_free",
                "string_cleanup"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_convert",
            "header": "unsigned lodepng_convert(unsigned char *out, const unsigned char *in, const LodePNGColorMode *mode_out, const LodePNGColorMode *mode_in, unsigned w, unsigned h)",
            "params": [
                "unsigned char *out",
                "const unsigned char *in",
                "const LodePNGColorMode *mode_out",
                "const LodePNGColorMode *mode_in",
                "unsigned w",
                "unsigned h"
            ],
            "definition": "unsigned lodepng_convert(unsigned char *out, const unsigned char *in, const LodePNGColorMode *mode_out, const LodePNGColorMode *mode_in, unsigned w, unsigned h)\n{\n  size_t i;\n  ColorTree tree;\n  size_t numpixels = ((size_t) w) * ((size_t) h);\n  unsigned error = 0;\n  if ((mode_in->colortype == LCT_PALETTE) && (!mode_in->palette))\n  {\n    return 107;\n  }\n  if (lodepng_color_mode_equal(mode_out, mode_in))\n  {\n    size_t numbytes = lodepng_get_raw_size(w, h, mode_in);\n    lodepng_memcpy(out, in, numbytes);\n    return 0;\n  }\n  if (mode_out->colortype == LCT_PALETTE)\n  {\n    helper_lodepng_convert_1(&i, &error, out, in, mode_out, mode_in, w, h, tree);\n  }\n  if (!error)\n  {\n    helper_lodepng_convert_2(&i, &error, out, in, mode_out, mode_in, tree, numpixels);\n  }\n  if (mode_out->colortype == LCT_PALETTE)\n  {\n    color_tree_cleanup(&tree);\n  }\n  return error;\n}\n\n",
            "calle": [
                "color_tree_cleanup",
                "helper_lodepng_convert_1",
                "helper_lodepng_convert_2",
                "lodepng_color_mode_equal",
                "lodepng_get_raw_size",
                "lodepng_memcpy"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode_out",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *mode_out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode_in",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *mode_in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree",
                        "type": "ColorTree",
                        "definition": [
                            "ColorTree tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numpixels",
                        "type": "size_t",
                        "definition": [
                            "size_t numpixels = ((size_t) w) * ((size_t) h)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numbytes",
                        "type": "size_t",
                        "definition": [
                            "size_t numbytes = lodepng_get_raw_size(w, h, mode_in)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_decoder_settings_init",
            "header": "void lodepng_decoder_settings_init(LodePNGDecoderSettings *settings)",
            "params": [
                "LodePNGDecoderSettings *settings"
            ],
            "definition": "void lodepng_decoder_settings_init(LodePNGDecoderSettings *settings)\n{\n  settings->color_convert = 1;\n  settings->read_text_chunks = 1;\n  settings->remember_unknown_chunks = 0;\n  settings->max_text_size = 16777216;\n  settings->max_icc_size = 16777216;\n  settings->ignore_crc = 0;\n  settings->ignore_critical = 0;\n  settings->ignore_end = 0;\n  lodepng_decompress_settings_init(&settings->zlibsettings);\n}\n\n",
            "calle": [
                "lodepng_decompress_settings_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "settings",
                        "type": "LodePNGDecoderSettings *",
                        "definition": [
                            "LodePNGDecoderSettings *settings"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_color_stats_init",
            "header": "void lodepng_color_stats_init(LodePNGColorStats *stats)",
            "params": [
                "LodePNGColorStats *stats"
            ],
            "definition": "void lodepng_color_stats_init(LodePNGColorStats *stats)\n{\n  stats->colored = 0;\n  stats->key = 0;\n  stats->key_r = (stats->key_g = (stats->key_b = 0));\n  stats->alpha = 0;\n  stats->numcolors = 0;\n  stats->bits = 1;\n  stats->numpixels = 0;\n  stats->allow_palette = 1;\n  stats->allow_greyscale = 1;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "stats",
                        "type": "LodePNGColorStats *",
                        "definition": [
                            "LodePNGColorStats *stats"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_compute_color_stats",
            "header": "unsigned lodepng_compute_color_stats(LodePNGColorStats *stats, const unsigned char *image, unsigned w, unsigned h, const LodePNGColorMode *mode_in)",
            "params": [
                "LodePNGColorStats *stats",
                "const unsigned char *in",
                "unsigned w",
                "unsigned h",
                "const LodePNGColorMode *mode_in"
            ],
            "definition": "unsigned lodepng_compute_color_stats(LodePNGColorStats *stats, const unsigned char *in, unsigned w, unsigned h, const LodePNGColorMode *mode_in)\n{\n  size_t i;\n  ColorTree tree;\n  size_t numpixels = ((size_t) w) * ((size_t) h);\n  unsigned error = 0;\n  unsigned colored_done = (lodepng_is_greyscale_type(mode_in)) ? (1) : (0);\n  unsigned alpha_done = (lodepng_can_have_alpha(mode_in)) ? (0) : (1);\n  unsigned numcolors_done = 0;\n  unsigned bpp = lodepng_get_bpp(mode_in);\n  unsigned bits_done = ((stats->bits == 1) && (bpp == 1)) ? (1) : (0);\n  unsigned sixteen = 0;\n  unsigned maxnumcolors = 257;\n  if (bpp <= 8)\n  {\n    maxnumcolors = (257 < (stats->numcolors + (1u << bpp))) ? (257) : (stats->numcolors + (1u << bpp));\n  }\n  stats->numpixels += numpixels;\n  if (!stats->allow_palette)\n  {\n    numcolors_done = 1;\n  }\n  color_tree_init(&tree);\n  if (stats->alpha)\n  {\n    alpha_done = 1;\n  }\n  if (stats->colored)\n  {\n    colored_done = 1;\n  }\n  if (stats->bits == 16)\n  {\n    numcolors_done = 1;\n  }\n  if (stats->bits >= bpp)\n  {\n    bits_done = 1;\n  }\n  if (stats->numcolors >= maxnumcolors)\n  {\n    numcolors_done = 1;\n  }\n  if (!numcolors_done)\n  {\n    for (i = 0; i < stats->numcolors; i += 1)\n    {\n      const unsigned char *color = &stats->palette[i * 4];\n      error = color_tree_add(&tree, color[0], color[1], color[2], color[3], i);\n      if (error)\n      {\n        goto cleanup;\n      }\n    }\n\n  }\n  if ((mode_in->bitdepth == 16) && (!sixteen))\n  {\n    helper_lodepng_compute_color_stats_1(&i, &numcolors_done, &bits_done, &sixteen, stats, in, mode_in, numpixels);\n  }\n  if (sixteen)\n  {\n    helper_lodepng_compute_color_stats_2(&i, &colored_done, &alpha_done, stats, in, mode_in, numpixels, numcolors_done, bits_done);\n  }\n  else\n  {\n    helper_lodepng_compute_color_stats_3(&i, &error, &colored_done, &alpha_done, &numcolors_done, &bits_done, stats, in, mode_in, tree, numpixels, bpp, maxnumcolors);\n  }\n  cleanup:\n  color_tree_cleanup(&tree);\n\n  return error;\n}\n\n",
            "calle": [
                "color_tree_add",
                "color_tree_cleanup",
                "color_tree_init",
                "helper_lodepng_compute_color_stats_1",
                "helper_lodepng_compute_color_stats_2",
                "helper_lodepng_compute_color_stats_3",
                "lodepng_can_have_alpha",
                "lodepng_get_bpp",
                "lodepng_is_greyscale_type"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "stats",
                        "type": "LodePNGColorStats *",
                        "definition": [
                            "LodePNGColorStats *stats"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode_in",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *mode_in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree",
                        "type": "ColorTree",
                        "definition": [
                            "ColorTree tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numpixels",
                        "type": "size_t",
                        "definition": [
                            "size_t numpixels = ((size_t) w) * ((size_t) h)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "colored_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned colored_done = (lodepng_is_greyscale_type(mode_in)) ? (1) : (0)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "alpha_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned alpha_done = (lodepng_can_have_alpha(mode_in)) ? (0) : (1)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcolors_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned numcolors_done = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bpp = lodepng_get_bpp(mode_in)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bits_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bits_done = ((stats->bits == 1) && (bpp == 1)) ? (1) : (0)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "sixteen",
                        "type": "unsigned",
                        "definition": [
                            "unsigned sixteen = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "maxnumcolors",
                        "type": "unsigned",
                        "definition": [
                            "unsigned maxnumcolors = 257"
                        ]
                    },
                    {
                        "path": null,
                        "name": "color",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *color = &stats->palette[i * 4]"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_encoder_settings_init",
            "header": "void lodepng_encoder_settings_init(LodePNGEncoderSettings *settings)",
            "params": [
                "LodePNGEncoderSettings *settings"
            ],
            "definition": "void lodepng_encoder_settings_init(LodePNGEncoderSettings *settings)\n{\n  lodepng_compress_settings_init(&settings->zlibsettings);\n  settings->filter_palette_zero = 1;\n  settings->filter_strategy = LFS_MINSUM;\n  settings->auto_convert = 1;\n  settings->force_palette = 0;\n  settings->predefined_filters = 0;\n  settings->add_id = 0;\n  settings->text_compression = 1;\n}\n\n",
            "calle": [
                "lodepng_compress_settings_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "settings",
                        "type": "LodePNGEncoderSettings *",
                        "definition": [
                            "LodePNGEncoderSettings *settings"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_state_init",
            "header": "void lodepng_state_init(LodePNGState *state)",
            "params": [
                "LodePNGState *state"
            ],
            "definition": "void lodepng_state_init(LodePNGState *state)\n{\n  lodepng_decoder_settings_init(&state->decoder);\n  lodepng_encoder_settings_init(&state->encoder);\n  lodepng_color_mode_init(&state->info_raw);\n  lodepng_info_init(&state->info_png);\n  state->error = 1;\n}\n\n",
            "calle": [
                "lodepng_color_mode_init",
                "lodepng_decoder_settings_init",
                "lodepng_encoder_settings_init",
                "lodepng_info_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "state",
                        "type": "LodePNGState *",
                        "definition": [
                            "LodePNGState *state"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_state_cleanup",
            "header": "void lodepng_state_cleanup(LodePNGState *state)",
            "params": [
                "LodePNGState *state"
            ],
            "definition": "void lodepng_state_cleanup(LodePNGState *state)\n{\n  lodepng_color_mode_cleanup(&state->info_raw);\n  lodepng_info_cleanup(&state->info_png);\n}\n\n",
            "calle": [
                "lodepng_color_mode_cleanup",
                "lodepng_info_cleanup"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "state",
                        "type": "LodePNGState *",
                        "definition": [
                            "LodePNGState *state"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_state_copy",
            "header": "void lodepng_state_copy(LodePNGState *dest, const LodePNGState *source)",
            "params": [
                "LodePNGState *dest",
                "const LodePNGState *source"
            ],
            "definition": "void lodepng_state_copy(LodePNGState *dest, const LodePNGState *source)\n{\n  lodepng_state_cleanup(dest);\n  *dest = *source;\n  lodepng_color_mode_init(&dest->info_raw);\n  lodepng_info_init(&dest->info_png);\n  dest->error = lodepng_color_mode_copy(&dest->info_raw, &source->info_raw);\n  if (dest->error)\n  {\n    return;\n  }\n  dest->error = lodepng_info_copy(&dest->info_png, &source->info_png);\n  if (dest->error)\n  {\n    return;\n  }\n}\n\n",
            "calle": [
                "lodepng_color_mode_copy",
                "lodepng_color_mode_init",
                "lodepng_info_copy",
                "lodepng_info_init",
                "lodepng_state_cleanup"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "dest",
                        "type": "LodePNGState *",
                        "definition": [
                            "LodePNGState *dest"
                        ]
                    },
                    {
                        "path": null,
                        "name": "source",
                        "type": "const LodePNGState *",
                        "definition": [
                            "const LodePNGState *source"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_decode",
            "header": "unsigned lodepng_decode(unsigned char **out, unsigned *w, unsigned *h, LodePNGState *state, const unsigned char *in, size_t insize)",
            "params": [
                "unsigned char **out",
                "unsigned *w",
                "unsigned *h",
                "LodePNGState *state",
                "const unsigned char *in",
                "size_t insize"
            ],
            "definition": "unsigned lodepng_decode(unsigned char **out, unsigned *w, unsigned *h, LodePNGState *state, const unsigned char *in, size_t insize)\n{\n  *out = 0;\n  decodeGeneric(out, w, h, state, in, insize);\n  if (state->error)\n  {\n    return state->error;\n  }\n  if ((!state->decoder.color_convert) || lodepng_color_mode_equal(&state->info_raw, &state->info_png.color))\n  {\n    if (!state->decoder.color_convert)\n    {\n      state->error = lodepng_color_mode_copy(&state->info_raw, &state->info_png.color);\n      if (state->error)\n      {\n        return state->error;\n      }\n    }\n  }\n  else\n  {\n    unsigned char *data = *out;\n    size_t outsize;\n    if ((!((state->info_raw.colortype == LCT_RGB) || (state->info_raw.colortype == LCT_RGBA))) && (!(state->info_raw.bitdepth == 8)))\n    {\n      return 56;\n    }\n    outsize = lodepng_get_raw_size(*w, *h, &state->info_raw);\n    *out = (unsigned char *) lodepng_malloc(outsize);\n    if (!(*out))\n    {\n      state->error = 83;\n    }\n    else\n      state->error = lodepng_convert(*out, data, &state->info_raw, &state->info_png.color, *w, *h);\n    lodepng_free(data);\n  }\n  return state->error;\n}\n\n",
            "calle": [
                "decodeGeneric",
                "lodepng_color_mode_copy",
                "lodepng_color_mode_equal",
                "lodepng_convert",
                "lodepng_free",
                "lodepng_get_raw_size",
                "lodepng_malloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "state",
                        "type": "LodePNGState *",
                        "definition": [
                            "LodePNGState *state"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *data = *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outsize",
                        "type": "size_t",
                        "definition": [
                            "size_t outsize"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_inspect",
            "header": "unsigned lodepng_inspect(unsigned *w, unsigned *h, LodePNGState *state, const unsigned char *in, size_t insize)",
            "params": [
                "unsigned *w",
                "unsigned *h",
                "LodePNGState *state",
                "const unsigned char *in",
                "size_t insize"
            ],
            "definition": "unsigned lodepng_inspect(unsigned *w, unsigned *h, LodePNGState *state, const unsigned char *in, size_t insize)\n{\n  unsigned width;\n  unsigned height;\n  LodePNGInfo *info = &state->info_png;\n  if ((insize == 0) || (in == 0))\n  {\n    {\n      state->error = 48;\n      return 48;\n    }\n    ;\n  }\n  if (insize < 33)\n  {\n    {\n      state->error = 27;\n      return 27;\n    }\n    ;\n  }\n  lodepng_info_cleanup(info);\n  lodepng_info_init(info);\n  if ((((((((in[0] != 137) || (in[1] != 80)) || (in[2] != 78)) || (in[3] != 71)) || (in[4] != 13)) || (in[5] != 10)) || (in[6] != 26)) || (in[7] != 10))\n  {\n    {\n      state->error = 28;\n      return 28;\n    }\n    ;\n  }\n  if (lodepng_chunk_length(in + 8) != 13)\n  {\n    {\n      state->error = 94;\n      return 94;\n    }\n    ;\n  }\n  if (!lodepng_chunk_type_equals(in + 8, \"IHDR\"))\n  {\n    {\n      state->error = 29;\n      return 29;\n    }\n    ;\n  }\n  width = lodepng_read32bitInt(&in[16]);\n  height = lodepng_read32bitInt(&in[20]);\n  if (w)\n  {\n    *w = width;\n  }\n  if (h)\n  {\n    *h = height;\n  }\n  info->color.bitdepth = in[24];\n  info->color.colortype = (LodePNGColorType) in[25];\n  info->compression_method = in[26];\n  info->filter_method = in[27];\n  info->interlace_method = in[28];\n  if ((width == 0) || (height == 0))\n  {\n    state->error = 93;\n    return 93;\n  }\n  ;\n  state->error = checkColorValidity(info->color.colortype, info->color.bitdepth);\n  if (state->error)\n  {\n    return state->error;\n  }\n  if (info->compression_method != 0)\n  {\n    state->error = 32;\n    return 32;\n  }\n  ;\n  if (info->filter_method != 0)\n  {\n    state->error = 33;\n    return 33;\n  }\n  ;\n  if (info->interlace_method > 1)\n  {\n    state->error = 34;\n    return 34;\n  }\n  ;\n  if (!state->decoder.ignore_crc)\n  {\n    unsigned CRC = lodepng_read32bitInt(&in[29]);\n    unsigned checksum = lodepng_crc32(&in[12], 17);\n    if (CRC != checksum)\n    {\n      {\n        state->error = 57;\n        return 57;\n      }\n      ;\n    }\n  }\n  return state->error;\n}\n\n",
            "calle": [
                "checkColorValidity",
                "lodepng_chunk_length",
                "lodepng_chunk_type_equals",
                "lodepng_crc32",
                "lodepng_info_cleanup",
                "lodepng_info_init",
                "lodepng_read32bitInt"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "state",
                        "type": "LodePNGState *",
                        "definition": [
                            "LodePNGState *state"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "width",
                        "type": "unsigned",
                        "definition": [
                            "unsigned width"
                        ]
                    },
                    {
                        "path": null,
                        "name": "height",
                        "type": "unsigned",
                        "definition": [
                            "unsigned height"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info = &state->info_png"
                        ]
                    },
                    {
                        "path": null,
                        "name": "CRC",
                        "type": "unsigned",
                        "definition": [
                            "unsigned CRC = lodepng_read32bitInt(&in[29])"
                        ]
                    },
                    {
                        "path": null,
                        "name": "checksum",
                        "type": "unsigned",
                        "definition": [
                            "unsigned checksum = lodepng_crc32(&in[12], 17)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_inspect_chunk",
            "header": "unsigned lodepng_inspect_chunk(LodePNGState *state, size_t pos, const unsigned char *in, size_t insize)",
            "params": [
                "LodePNGState *state",
                "size_t pos",
                "const unsigned char *in",
                "size_t insize"
            ],
            "definition": "unsigned lodepng_inspect_chunk(LodePNGState *state, size_t pos, const unsigned char *in, size_t insize)\n{\n  const unsigned char *chunk = in + pos;\n  unsigned chunkLength;\n  const unsigned char *data;\n  unsigned int data_idx = 0;\n  unsigned unhandled = 0;\n  unsigned error = 0;\n  if ((pos + 4) > insize)\n  {\n    return 30;\n  }\n  chunkLength = lodepng_chunk_length(chunk);\n  if (chunkLength > 2147483647)\n  {\n    return 63;\n  }\n  data_idx = lodepng_chunk_data_const(chunk);\n  if ((chunkLength + 12) > (insize - pos))\n  {\n    return 30;\n  }\n  if (lodepng_chunk_type_equals(chunk, \"PLTE\"))\n  {\n    error = readChunk_PLTE(&state->info_png.color, data, chunkLength);\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"tRNS\"))\n  {\n    error = readChunk_tRNS(&state->info_png.color, data, chunkLength);\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"bKGD\"))\n  {\n    error = readChunk_bKGD(&state->info_png, data, chunkLength);\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"tEXt\"))\n  {\n    error = readChunk_tEXt(&state->info_png, data, chunkLength);\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"zTXt\"))\n  {\n    error = readChunk_zTXt(&state->info_png, &state->decoder, data, chunkLength);\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"iTXt\"))\n  {\n    error = readChunk_iTXt(&state->info_png, &state->decoder, data, chunkLength);\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"tIME\"))\n  {\n    error = readChunk_tIME(&state->info_png, data, chunkLength);\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"pHYs\"))\n  {\n    error = readChunk_pHYs(&state->info_png, data, chunkLength);\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"gAMA\"))\n  {\n    error = readChunk_gAMA(&state->info_png, data, chunkLength);\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"cHRM\"))\n  {\n    error = readChunk_cHRM(&state->info_png, data, chunkLength);\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"sRGB\"))\n  {\n    error = readChunk_sRGB(&state->info_png, data, chunkLength);\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"iCCP\"))\n  {\n    error = readChunk_iCCP(&state->info_png, &state->decoder, data, chunkLength);\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"sBIT\"))\n  {\n    error = readChunk_sBIT(&state->info_png, data, chunkLength);\n  }\n  else\n  {\n    unhandled = 1;\n  }\n  if (((!error) && (!unhandled)) && (!state->decoder.ignore_crc))\n  {\n    if (lodepng_chunk_check_crc(chunk))\n    {\n      return 57;\n    }\n  }\n  return error;\n}\n\n",
            "calle": [
                "lodepng_chunk_check_crc",
                "lodepng_chunk_data_const",
                "lodepng_chunk_length",
                "lodepng_chunk_type_equals",
                "readChunk_PLTE",
                "readChunk_bKGD",
                "readChunk_cHRM",
                "readChunk_gAMA",
                "readChunk_iCCP",
                "readChunk_iTXt",
                "readChunk_pHYs",
                "readChunk_sBIT",
                "readChunk_sRGB",
                "readChunk_tEXt",
                "readChunk_tIME",
                "readChunk_tRNS",
                "readChunk_zTXt"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "state",
                        "type": "LodePNGState *",
                        "definition": [
                            "LodePNGState *state"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pos",
                        "type": "size_t",
                        "definition": [
                            "size_t pos"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *chunk = in + pos"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "unsigned",
                        "definition": [
                            "unsigned chunkLength"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int data_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "unhandled",
                        "type": "unsigned",
                        "definition": [
                            "unsigned unhandled = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_encode",
            "header": "unsigned lodepng_encode(unsigned char **out, size_t *outsize, const unsigned char *image, unsigned w, unsigned h, LodePNGState *state)",
            "params": [
                "unsigned char **out",
                "size_t *outsize",
                "const unsigned char *image",
                "unsigned w",
                "unsigned h",
                "LodePNGState *state"
            ],
            "definition": "unsigned lodepng_encode(unsigned char **out, size_t *outsize, const unsigned char *image, unsigned w, unsigned h, LodePNGState *state)\n{\n  unsigned char *data = 0;\n  size_t datasize = 0;\n  ucvector outv = ucvector_init(0, 0);\n  LodePNGInfo info;\n  const LodePNGInfo *info_png = &state->info_png;\n  LodePNGColorMode auto_color;\n  lodepng_info_init(&info);\n  lodepng_color_mode_init(&auto_color);\n  *out = 0;\n  *outsize = 0;\n  state->error = 0;\n  if (((info_png->color.colortype == LCT_PALETTE) || state->encoder.force_palette) && ((info_png->color.palettesize == 0) || (info_png->color.palettesize > 256)))\n  {\n    state->error = 68;\n    goto cleanup;\n  }\n  if (state->encoder.zlibsettings.btype > 2)\n  {\n    state->error = 61;\n    goto cleanup;\n  }\n  if (info_png->interlace_method > 1)\n  {\n    state->error = 71;\n    goto cleanup;\n  }\n  state->error = checkColorValidity(info_png->color.colortype, info_png->color.bitdepth);\n  if (state->error)\n  {\n    goto cleanup;\n  }\n  state->error = checkColorValidity(state->info_raw.colortype, state->info_raw.bitdepth);\n  if (state->error)\n  {\n    goto cleanup;\n  }\n  lodepng_info_copy(&info, &state->info_png);\n  if (state->encoder.auto_convert)\n  {\n    helper_lodepng_encode_2(image, w, h, state, info, info_png, auto_color);\n  }\n  if (info_png->iccp_defined)\n  {\n    unsigned gray_icc = isGrayICCProfile(info_png->iccp_profile, info_png->iccp_profile_size);\n    unsigned rgb_icc = isRGBICCProfile(info_png->iccp_profile, info_png->iccp_profile_size);\n    unsigned gray_png = (info.color.colortype == LCT_GREY) || (info.color.colortype == LCT_GREY_ALPHA);\n    if ((!gray_icc) && (!rgb_icc))\n    {\n      state->error = 100;\n      goto cleanup;\n    }\n    if (gray_icc != gray_png)\n    {\n      state->error = (state->encoder.auto_convert) ? (102) : (101);\n      goto cleanup;\n    }\n  }\n  if (!lodepng_color_mode_equal(&state->info_raw, &info.color))\n  {\n    helper_lodepng_encode_1(image, w, h, state, data, datasize, info);\n  }\n  else\n  {\n    state->error = preProcessScanlines(&data, &datasize, image, w, h, &info, &state->encoder);\n    if (state->error)\n    {\n      goto cleanup;\n    }\n  }\n  {\n    helper_lodepng_encode_3(w, h, state, data, datasize, outv, info, info_png);\n  }\n  cleanup:\n  lodepng_info_cleanup(&info);\n\n  lodepng_free(data);\n  lodepng_color_mode_cleanup(&auto_color);\n  *out = outv.data;\n  *outsize = outv.size;\n  return state->error;\n}\n\n",
            "calle": [
                "checkColorValidity",
                "helper_lodepng_encode_1",
                "helper_lodepng_encode_2",
                "helper_lodepng_encode_3",
                "isGrayICCProfile",
                "isRGBICCProfile",
                "lodepng_color_mode_cleanup",
                "lodepng_color_mode_equal",
                "lodepng_color_mode_init",
                "lodepng_free",
                "lodepng_info_cleanup",
                "lodepng_info_copy",
                "lodepng_info_init",
                "preProcessScanlines",
                "ucvector_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outsize",
                        "type": "size_t *",
                        "definition": [
                            "size_t *outsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "image",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *image"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "state",
                        "type": "LodePNGState *",
                        "definition": [
                            "LodePNGState *state"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *data = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "datasize",
                        "type": "size_t",
                        "definition": [
                            "size_t datasize = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outv",
                        "type": "ucvector",
                        "definition": [
                            "ucvector outv = ucvector_init(0, 0)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo",
                        "definition": [
                            "LodePNGInfo info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info_png",
                        "type": "const LodePNGInfo *",
                        "definition": [
                            "const LodePNGInfo *info_png = &state->info_png"
                        ]
                    },
                    {
                        "path": null,
                        "name": "auto_color",
                        "type": "LodePNGColorMode",
                        "definition": [
                            "LodePNGColorMode auto_color"
                        ]
                    },
                    {
                        "path": null,
                        "name": "gray_icc",
                        "type": "unsigned",
                        "definition": [
                            "unsigned gray_icc = isGrayICCProfile(info_png->iccp_profile, info_png->iccp_profile_size)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "rgb_icc",
                        "type": "unsigned",
                        "definition": [
                            "unsigned rgb_icc = isRGBICCProfile(info_png->iccp_profile, info_png->iccp_profile_size)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "gray_png",
                        "type": "unsigned",
                        "definition": [
                            "unsigned gray_png = (info.color.colortype == LCT_GREY) || (info.color.colortype == LCT_GREY_ALPHA)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_chunk_length",
            "header": "unsigned lodepng_chunk_length(const unsigned char *chunk)",
            "params": [
                "const unsigned char *chunk"
            ],
            "definition": "unsigned lodepng_chunk_length(const unsigned char *chunk)\n{\n  return lodepng_read32bitInt(chunk);\n}\n\n",
            "calle": [
                "lodepng_read32bitInt"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *chunk"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_chunk_type",
            "header": "void lodepng_chunk_type(char type[5], const unsigned char *chunk)",
            "params": [
                "char type[5]",
                "const unsigned char *chunk"
            ],
            "definition": "void lodepng_chunk_type(char type[5], const unsigned char *chunk)\n{\n  unsigned i;\n  for (i = 0; i != 4; i += 1)\n    type[i] = (char) chunk[4 + i];\n\n  type[4] = 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "type",
                        "type": "char [5]",
                        "definition": [
                            "char type[5]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_chunk_type_equals",
            "header": "unsigned char lodepng_chunk_type_equals(const unsigned char *chunk, const char *type)",
            "params": [
                "const unsigned char *chunk",
                "const char *type"
            ],
            "definition": "unsigned char lodepng_chunk_type_equals(const unsigned char *chunk, const char *type)\n{\n  if (lodepng_strlen(type) != 4)\n  {\n    return 0;\n  }\n  return (((chunk[4] == type[0]) && (chunk[5] == type[1])) && (chunk[6] == type[2])) && (chunk[7] == type[3]);\n}\n\n",
            "calle": [
                "lodepng_strlen"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "type",
                        "type": "const char *",
                        "definition": [
                            "const char *type"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_chunk_ancillary",
            "header": "unsigned char lodepng_chunk_ancillary(const unsigned char *chunk)",
            "params": [
                "const unsigned char *chunk"
            ],
            "definition": "unsigned char lodepng_chunk_ancillary(const unsigned char *chunk)\n{\n  return (chunk[4] & 32) != 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *chunk"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_chunk_private",
            "header": "unsigned char lodepng_chunk_private(const unsigned char *chunk)",
            "params": [
                "const unsigned char *chunk"
            ],
            "definition": "unsigned char lodepng_chunk_private(const unsigned char *chunk)\n{\n  return (chunk[6] & 32) != 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *chunk"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_chunk_safetocopy",
            "header": "unsigned char lodepng_chunk_safetocopy(const unsigned char *chunk)",
            "params": [
                "const unsigned char *chunk"
            ],
            "definition": "unsigned char lodepng_chunk_safetocopy(const unsigned char *chunk)\n{\n  return (chunk[7] & 32) != 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *chunk"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_chunk_data",
            "header": "unsigned char *lodepng_chunk_data(unsigned char *chunk)",
            "params": [
                "unsigned char *chunk"
            ],
            "definition": "unsigned char *lodepng_chunk_data(unsigned char *chunk)\n{\n  return &chunk[8];\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *chunk"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_chunk_data_const",
            "header": "const unsigned char *lodepng_chunk_data_const(const unsigned char *chunk)",
            "params": [
                "const unsigned char *chunk"
            ],
            "definition": "const unsigned char *lodepng_chunk_data_const(const unsigned char *chunk)\n{\n  return &chunk[8];\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *chunk"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_chunk_check_crc",
            "header": "unsigned lodepng_chunk_check_crc(const unsigned char *chunk)",
            "params": [
                "const unsigned char *chunk"
            ],
            "definition": "unsigned lodepng_chunk_check_crc(const unsigned char *chunk)\n{\n  unsigned length = lodepng_chunk_length(chunk);\n  unsigned CRC = lodepng_read32bitInt(&chunk[length + 8]);\n  unsigned checksum = lodepng_crc32(&chunk[4], length + 4);\n  if (CRC != checksum)\n  {\n    return 1;\n  }\n  else\n    return 0;\n}\n\n",
            "calle": [
                "lodepng_chunk_length",
                "lodepng_crc32",
                "lodepng_read32bitInt"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length = lodepng_chunk_length(chunk)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "CRC",
                        "type": "unsigned",
                        "definition": [
                            "unsigned CRC = lodepng_read32bitInt(&chunk[length + 8])"
                        ]
                    },
                    {
                        "path": null,
                        "name": "checksum",
                        "type": "unsigned",
                        "definition": [
                            "unsigned checksum = lodepng_crc32(&chunk[4], length + 4)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_chunk_generate_crc",
            "header": "void lodepng_chunk_generate_crc(unsigned char *chunk)",
            "params": [
                "unsigned char *chunk"
            ],
            "definition": "void lodepng_chunk_generate_crc(unsigned char *chunk)\n{\n  unsigned length = lodepng_chunk_length(chunk);\n  unsigned CRC = lodepng_crc32(&chunk[4], length + 4);\n  lodepng_set32bitInt((chunk + 8) + length, CRC);\n}\n\n",
            "calle": [
                "lodepng_chunk_length",
                "lodepng_crc32",
                "lodepng_set32bitInt"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length = lodepng_chunk_length(chunk)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "CRC",
                        "type": "unsigned",
                        "definition": [
                            "unsigned CRC = lodepng_crc32(&chunk[4], length + 4)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_chunk_next",
            "header": "unsigned char *lodepng_chunk_next(unsigned char *chunk, unsigned char *end)",
            "params": [
                "unsigned char *chunk",
                "unsigned char *end"
            ],
            "definition": "unsigned char *lodepng_chunk_next(unsigned char *chunk, unsigned char *end)\n{\n  size_t available_size = (size_t) (end - chunk);\n  if ((chunk >= end) || (available_size < 12))\n  {\n    return end;\n  }\n  if ((((((((chunk[0] == 0x89) && (chunk[1] == 0x50)) && (chunk[2] == 0x4e)) && (chunk[3] == 0x47)) && (chunk[4] == 0x0d)) && (chunk[5] == 0x0a)) && (chunk[6] == 0x1a)) && (chunk[7] == 0x0a))\n  {\n    return chunk + 8;\n  }\n  else\n  {\n    size_t total_chunk_length;\n    if (lodepng_addofl(lodepng_chunk_length(chunk), 12, &total_chunk_length))\n    {\n      return end;\n    }\n    if (total_chunk_length > available_size)\n    {\n      return end;\n    }\n    return chunk + total_chunk_length;\n  }\n}\n\n",
            "calle": [
                "lodepng_addofl",
                "lodepng_chunk_length"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "end",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *end"
                        ]
                    },
                    {
                        "path": null,
                        "name": "available_size",
                        "type": "size_t",
                        "definition": [
                            "size_t available_size = (size_t) (end - chunk)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "total_chunk_length",
                        "type": "size_t",
                        "definition": [
                            "size_t total_chunk_length"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_chunk_next_const",
            "header": "const unsigned char *lodepng_chunk_next_const(const unsigned char *chunk, const unsigned char *end)",
            "params": [
                "const unsigned char *chunk",
                "const unsigned char *end"
            ],
            "definition": "const unsigned char *lodepng_chunk_next_const(const unsigned char *chunk, const unsigned char *end)\n{\n  size_t available_size = (size_t) (end - chunk);\n  if ((chunk >= end) || (available_size < 12))\n  {\n    return end;\n  }\n  if ((((((((chunk[0] == 0x89) && (chunk[1] == 0x50)) && (chunk[2] == 0x4e)) && (chunk[3] == 0x47)) && (chunk[4] == 0x0d)) && (chunk[5] == 0x0a)) && (chunk[6] == 0x1a)) && (chunk[7] == 0x0a))\n  {\n    return chunk + 8;\n  }\n  else\n  {\n    size_t total_chunk_length;\n    if (lodepng_addofl(lodepng_chunk_length(chunk), 12, &total_chunk_length))\n    {\n      return end;\n    }\n    if (total_chunk_length > available_size)\n    {\n      return end;\n    }\n    return chunk + total_chunk_length;\n  }\n}\n\n",
            "calle": [
                "lodepng_addofl",
                "lodepng_chunk_length"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "end",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *end"
                        ]
                    },
                    {
                        "path": null,
                        "name": "available_size",
                        "type": "size_t",
                        "definition": [
                            "size_t available_size = (size_t) (end - chunk)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "total_chunk_length",
                        "type": "size_t",
                        "definition": [
                            "size_t total_chunk_length"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_chunk_find",
            "header": "unsigned char *lodepng_chunk_find(unsigned char *chunk, unsigned char *end, const char type[5])",
            "params": [
                "unsigned char *chunk",
                "unsigned char *end",
                "const char type[5]"
            ],
            "definition": "unsigned char *lodepng_chunk_find(unsigned char *chunk, unsigned char *end, const char type[5])\n{\n  unsigned int chunk_idx = 0;\n  for (;;)\n  {\n    if (((&chunk[chunk_idx]) >= end) || ((end - (&chunk[chunk_idx])) < 12))\n    {\n      return 0;\n    }\n    if (lodepng_chunk_type_equals(chunk, type))\n    {\n      return chunk;\n    }\n    chunk_idx = lodepng_chunk_next(chunk_idx, end);\n  }\n\n}\n\n",
            "calle": [
                "lodepng_chunk_next",
                "lodepng_chunk_type_equals"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "end",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *end"
                        ]
                    },
                    {
                        "path": null,
                        "name": "type",
                        "type": "const char [5]",
                        "definition": [
                            "const char type[5]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int chunk_idx = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_chunk_find_const",
            "header": "const unsigned char *lodepng_chunk_find_const(const unsigned char *chunk, const unsigned char *end, const char type[5])",
            "params": [
                "const unsigned char *chunk",
                "const unsigned char *end",
                "const char type[5]"
            ],
            "definition": "const unsigned char *lodepng_chunk_find_const(const unsigned char *chunk, const unsigned char *end, const char type[5])\n{\n  unsigned int chunk_idx = 0;\n  for (;;)\n  {\n    if (((&chunk[chunk_idx]) >= end) || ((end - (&chunk[chunk_idx])) < 12))\n    {\n      return 0;\n    }\n    if (lodepng_chunk_type_equals(chunk, type))\n    {\n      return chunk;\n    }\n    chunk_idx = lodepng_chunk_next_const(chunk_idx, end);\n  }\n\n}\n\n",
            "calle": [
                "lodepng_chunk_next_const",
                "lodepng_chunk_type_equals"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "end",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *end"
                        ]
                    },
                    {
                        "path": null,
                        "name": "type",
                        "type": "const char [5]",
                        "definition": [
                            "const char type[5]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int chunk_idx = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_chunk_append",
            "header": "unsigned lodepng_chunk_append(unsigned char **out, size_t *outsize, const unsigned char *chunk)",
            "params": [
                "unsigned char **out",
                "size_t *outsize",
                "const unsigned char *chunk"
            ],
            "definition": "unsigned lodepng_chunk_append(unsigned char **out, size_t *outsize, const unsigned char *chunk)\n{\n  unsigned i;\n  size_t total_chunk_length;\n  size_t new_length;\n  unsigned char *chunk_start;\n  unsigned int chunk_start_idx = 0;\n  unsigned char *new_buffer;\n  unsigned int new_buffer_idx = 0;\n  if (lodepng_addofl(lodepng_chunk_length(chunk), 12, &total_chunk_length))\n  {\n    return 77;\n  }\n  if (lodepng_addofl(*outsize, total_chunk_length, &new_length))\n  {\n    return 77;\n  }\n  new_buffer_idx = (unsigned char *) lodepng_realloc(*out, new_length);\n  if (!(&new_buffer[new_buffer_idx]))\n  {\n    return 83;\n  }\n  *out = &new_buffer[new_buffer_idx];\n  *outsize = new_length;\n  chunk_start_idx = &(*out)[new_length - total_chunk_length];\n  for (i = 0; i != total_chunk_length; i += 1)\n    chunk_start[i + chunk_start_idx] = chunk[i];\n\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_addofl",
                "lodepng_chunk_length",
                "lodepng_realloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outsize",
                        "type": "size_t *",
                        "definition": [
                            "size_t *outsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "total_chunk_length",
                        "type": "size_t",
                        "definition": [
                            "size_t total_chunk_length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "new_length",
                        "type": "size_t",
                        "definition": [
                            "size_t new_length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk_start",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *chunk_start"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk_start_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int chunk_start_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "new_buffer",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *new_buffer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "new_buffer_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int new_buffer_idx = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_chunk_create",
            "header": "unsigned lodepng_chunk_create(unsigned char **out, size_t *outsize, unsigned length, const char *type, const unsigned char *data)",
            "params": [
                "unsigned char **out",
                "size_t *outsize",
                "unsigned length",
                "const char *type",
                "const unsigned char *data"
            ],
            "definition": "unsigned lodepng_chunk_create(unsigned char **out, size_t *outsize, unsigned length, const char *type, const unsigned char *data)\n{\n  ucvector v = ucvector_init(*out, *outsize);\n  unsigned error = lodepng_chunk_createv(&v, length, type, data);\n  *out = v.data;\n  *outsize = v.size;\n  return error;\n}\n\n",
            "calle": [
                "lodepng_chunk_createv",
                "ucvector_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outsize",
                        "type": "size_t *",
                        "definition": [
                            "size_t *outsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "type",
                        "type": "const char *",
                        "definition": [
                            "const char *type"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "v",
                        "type": "ucvector",
                        "definition": [
                            "ucvector v = ucvector_init(*out, *outsize)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_chunk_createv(&v, length, type, data)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_crc32",
            "header": "unsigned lodepng_crc32(const unsigned char *buf, size_t len)",
            "params": [
                "const unsigned char *data",
                "size_t length"
            ],
            "definition": "unsigned lodepng_crc32(const unsigned char *data, size_t length)\n{\n  unsigned r = 0xffffffffu;\n  size_t i;\n  for (i = 0; i < length; i += 1)\n  {\n    r = lodepng_crc32_table[(r ^ data[i]) & 0xffu] ^ (r >> 8u);\n  }\n\n  return r ^ 0xffffffffu;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "size_t",
                        "definition": [
                            "size_t length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned",
                        "definition": [
                            "unsigned r = 0xffffffffu"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lodepng_crc32_table",
                        "type": "None",
                        "definition": []
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_inflate",
            "header": "unsigned lodepng_inflate(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGDecompressSettings *settings)",
            "params": [
                "unsigned char **out",
                "size_t *outsize",
                "const unsigned char *in",
                "size_t insize",
                "const LodePNGDecompressSettings *settings"
            ],
            "definition": "unsigned lodepng_inflate(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGDecompressSettings *settings)\n{\n  ucvector v = ucvector_init(*out, *outsize);\n  unsigned error = lodepng_inflatev(&v, in, insize, settings);\n  *out = v.data;\n  *outsize = v.size;\n  return error;\n}\n\n",
            "calle": [
                "lodepng_inflatev",
                "ucvector_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outsize",
                        "type": "size_t *",
                        "definition": [
                            "size_t *outsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGDecompressSettings *",
                        "definition": [
                            "const LodePNGDecompressSettings *settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "v",
                        "type": "ucvector",
                        "definition": [
                            "ucvector v = ucvector_init(*out, *outsize)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_inflatev(&v, in, insize, settings)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_zlib_decompress",
            "header": "unsigned lodepng_zlib_decompress(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGDecompressSettings *settings)",
            "params": [
                "unsigned char **out",
                "size_t *outsize",
                "const unsigned char *in",
                "size_t insize",
                "const LodePNGDecompressSettings *settings"
            ],
            "definition": "unsigned lodepng_zlib_decompress(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGDecompressSettings *settings)\n{\n  ucvector v = ucvector_init(*out, *outsize);\n  unsigned error = lodepng_zlib_decompressv(&v, in, insize, settings);\n  *out = v.data;\n  *outsize = v.size;\n  return error;\n}\n\n",
            "calle": [
                "lodepng_zlib_decompressv",
                "ucvector_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outsize",
                        "type": "size_t *",
                        "definition": [
                            "size_t *outsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGDecompressSettings *",
                        "definition": [
                            "const LodePNGDecompressSettings *settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "v",
                        "type": "ucvector",
                        "definition": [
                            "ucvector v = ucvector_init(*out, *outsize)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_zlib_decompressv(&v, in, insize, settings)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_zlib_compress",
            "header": "unsigned lodepng_zlib_compress(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGCompressSettings *settings)",
            "params": [
                "unsigned char **out",
                "size_t *outsize",
                "const unsigned char *in",
                "size_t insize",
                "const LodePNGCompressSettings *settings"
            ],
            "definition": "unsigned lodepng_zlib_compress(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGCompressSettings *settings)\n{\n  size_t i;\n  unsigned error;\n  unsigned char *deflatedata = 0;\n  size_t deflatesize = 0;\n  error = deflate(&deflatedata, &deflatesize, in, insize, settings);\n  *out = 0;\n  *outsize = 0;\n  if (!error)\n  {\n    *outsize = deflatesize + 6;\n    *out = (unsigned char *) lodepng_malloc(*outsize);\n    if (!(*out))\n    {\n      error = 83;\n    }\n  }\n  if (!error)\n  {\n    unsigned ADLER32 = adler32(in, (unsigned) insize);\n    unsigned CMF = 120;\n    unsigned FLEVEL = 0;\n    unsigned FDICT = 0;\n    unsigned CMFFLG = ((256 * CMF) + (FDICT * 32)) + (FLEVEL * 64);\n    unsigned FCHECK = 31 - (CMFFLG % 31);\n    CMFFLG += FCHECK;\n    (*out)[0] = (unsigned char) (CMFFLG >> 8);\n    (*out)[1] = (unsigned char) (CMFFLG & 255);\n    for (i = 0; i != deflatesize; i += 1)\n      (*out)[i + 2] = deflatedata[i];\n\n    lodepng_set32bitInt(&(*out)[(*outsize) - 4], ADLER32);\n  }\n  lodepng_free(deflatedata);\n  return error;\n}\n\n",
            "calle": [
                "adler32",
                "deflate",
                "lodepng_free",
                "lodepng_malloc",
                "lodepng_set32bitInt"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outsize",
                        "type": "size_t *",
                        "definition": [
                            "size_t *outsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGCompressSettings *",
                        "definition": [
                            "const LodePNGCompressSettings *settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error"
                        ]
                    },
                    {
                        "path": null,
                        "name": "deflatedata",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *deflatedata = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "deflatesize",
                        "type": "size_t",
                        "definition": [
                            "size_t deflatesize = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ADLER32",
                        "type": "unsigned",
                        "definition": [
                            "unsigned ADLER32 = adler32(in, (unsigned) insize)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "CMF",
                        "type": "unsigned",
                        "definition": [
                            "unsigned CMF = 120"
                        ]
                    },
                    {
                        "path": null,
                        "name": "FLEVEL",
                        "type": "unsigned",
                        "definition": [
                            "unsigned FLEVEL = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "FDICT",
                        "type": "unsigned",
                        "definition": [
                            "unsigned FDICT = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "CMFFLG",
                        "type": "unsigned",
                        "definition": [
                            "unsigned CMFFLG = ((256 * CMF) + (FDICT * 32)) + (FLEVEL * 64)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "FCHECK",
                        "type": "unsigned",
                        "definition": [
                            "unsigned FCHECK = 31 - (CMFFLG % 31)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_huffman_code_lengths",
            "header": "unsigned lodepng_huffman_code_lengths(unsigned *lengths, const unsigned *frequencies, size_t numcodes, unsigned maxbitlen)",
            "params": [
                "unsigned *lengths",
                "const unsigned *frequencies",
                "size_t numcodes",
                "unsigned maxbitlen"
            ],
            "definition": "unsigned lodepng_huffman_code_lengths(unsigned *lengths, const unsigned *frequencies, size_t numcodes, unsigned maxbitlen)\n{\n  unsigned error = 0;\n  unsigned i;\n  size_t numpresent = 0;\n  BPMNode *leaves;\n  unsigned int leaves_idx = 0;\n  if (numcodes == 0)\n  {\n    return 80;\n  }\n  if ((1u << maxbitlen) < ((unsigned) numcodes))\n  {\n    return 80;\n  }\n  leaves_idx = (BPMNode *) lodepng_malloc(numcodes * (sizeof(*leaves_idx)));\n  if (!(&leaves[leaves_idx]))\n  {\n    return 83;\n  }\n  for (i = 0; i != numcodes; i += 1)\n  {\n    if (frequencies[i] > 0)\n    {\n      leaves[numpresent + leaves_idx].weight = (int) frequencies[i];\n      leaves[numpresent + leaves_idx].index = i;\n      numpresent += 1;\n    }\n  }\n\n  lodepng_memset(lengths, 0, numcodes * (sizeof(*lengths)));\n  if (numpresent == 0)\n  {\n    lengths[0] = (lengths[1] = 1);\n  }\n  else\n    if (numpresent == 1)\n  {\n    lengths[leaves[0 + leaves_idx].index] = 1;\n    lengths[(leaves[0 + leaves_idx].index == 0) ? (1) : (0)] = 1;\n  }\n  else\n  {\n    helper_lodepng_huffman_code_lengths_1(&error, &i, lengths, maxbitlen, numpresent, leaves, leaves_idx);\n  }\n  lodepng_free(leaves);\n  return error;\n}\n\n",
            "calle": [
                "helper_lodepng_huffman_code_lengths_1",
                "lodepng_free",
                "lodepng_malloc",
                "lodepng_memset"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "lengths",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *lengths"
                        ]
                    },
                    {
                        "path": null,
                        "name": "frequencies",
                        "type": "const unsigned *",
                        "definition": [
                            "const unsigned *frequencies"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes",
                        "type": "size_t",
                        "definition": [
                            "size_t numcodes"
                        ]
                    },
                    {
                        "path": null,
                        "name": "maxbitlen",
                        "type": "unsigned",
                        "definition": [
                            "unsigned maxbitlen"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numpresent",
                        "type": "size_t",
                        "definition": [
                            "size_t numpresent = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "leaves",
                        "type": "BPMNode *",
                        "definition": [
                            "BPMNode *leaves"
                        ]
                    },
                    {
                        "path": null,
                        "name": "leaves_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int leaves_idx = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_deflate",
            "header": "unsigned lodepng_deflate(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGCompressSettings *settings)",
            "params": [
                "unsigned char **out",
                "size_t *outsize",
                "const unsigned char *in",
                "size_t insize",
                "const LodePNGCompressSettings *settings"
            ],
            "definition": "unsigned lodepng_deflate(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGCompressSettings *settings)\n{\n  ucvector v = ucvector_init(*out, *outsize);\n  unsigned error = lodepng_deflatev(&v, in, insize, settings);\n  *out = v.data;\n  *outsize = v.size;\n  return error;\n}\n\n",
            "calle": [
                "lodepng_deflatev",
                "ucvector_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outsize",
                        "type": "size_t *",
                        "definition": [
                            "size_t *outsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGCompressSettings *",
                        "definition": [
                            "const LodePNGCompressSettings *settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "v",
                        "type": "ucvector",
                        "definition": [
                            "ucvector v = ucvector_init(*out, *outsize)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_deflatev(&v, in, insize, settings)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_load_file",
            "header": "unsigned lodepng_load_file(unsigned char **out, size_t *outsize, const char *filename)",
            "params": [
                "unsigned char **out",
                "size_t *outsize",
                "const char *filename"
            ],
            "definition": "unsigned lodepng_load_file(unsigned char **out, size_t *outsize, const char *filename)\n{\n  long size = lodepng_filesize(filename);\n  if (size < 0)\n  {\n    return 78;\n  }\n  *outsize = (size_t) size;\n  *out = (unsigned char *) lodepng_malloc((size_t) size);\n  if ((!(*out)) && (size > 0))\n  {\n    return 83;\n  }\n  return lodepng_buffer_file(*out, (size_t) size, filename);\n}\n\n",
            "calle": [
                "lodepng_buffer_file",
                "lodepng_filesize",
                "lodepng_malloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outsize",
                        "type": "size_t *",
                        "definition": [
                            "size_t *outsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "filename",
                        "type": "const char *",
                        "definition": [
                            "const char *filename"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "long",
                        "definition": [
                            "long size = lodepng_filesize(filename)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_save_file",
            "header": "unsigned lodepng_save_file(const unsigned char *buffer, size_t buffersize, const char *filename)",
            "params": [
                "const unsigned char *buffer",
                "size_t buffersize",
                "const char *filename"
            ],
            "definition": "unsigned lodepng_save_file(const unsigned char *buffer, size_t buffersize, const char *filename)\n{\n  FILE *file;\n  unsigned int file_idx = 0;\n  file_idx = fopen(filename, \"wb\");\n  if (!(&file[file_idx]))\n  {\n    return 79;\n  }\n  fwrite(buffer, 1, buffersize, file);\n  fclose(file);\n  return 0;\n}\n\n",
            "calle": [
                "fclose",
                "fopen",
                "fwrite"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "buffer",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *buffer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "buffersize",
                        "type": "size_t",
                        "definition": [
                            "size_t buffersize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "filename",
                        "type": "const char *",
                        "definition": [
                            "const char *filename"
                        ]
                    },
                    {
                        "path": null,
                        "name": "file",
                        "type": "FILE *",
                        "definition": [
                            "FILE *file"
                        ]
                    },
                    {
                        "path": null,
                        "name": "file_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int file_idx = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_malloc",
            "header": "",
            "params": [
                "size_t size"
            ],
            "definition": "static void *lodepng_malloc(size_t size)\n{\n  return malloc(size);\n}\n\n",
            "calle": [
                "malloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_realloc",
            "header": "",
            "params": [
                "void *ptr",
                "size_t new_size"
            ],
            "definition": "static void *lodepng_realloc(void *ptr, size_t new_size)\n{\n  return realloc(ptr, new_size);\n}\n\n",
            "calle": [
                "realloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "ptr",
                        "type": "void *",
                        "definition": [
                            "void *ptr"
                        ]
                    },
                    {
                        "path": null,
                        "name": "new_size",
                        "type": "size_t",
                        "definition": [
                            "size_t new_size"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_free",
            "header": "",
            "params": [
                "void *ptr"
            ],
            "definition": "static void lodepng_free(void *ptr)\n{\n  free(ptr);\n}\n\n",
            "calle": [
                "free"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "ptr",
                        "type": "void *",
                        "definition": [
                            "void *ptr"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_memcpy",
            "header": "",
            "params": [
                "void *dst",
                "const void *src",
                "size_t size"
            ],
            "definition": "static void lodepng_memcpy(void *dst, const void *src, size_t size)\n{\n  size_t i;\n  for (i = 0; i < size; i += 1)\n    ((char *) dst)[i] = ((const char *) src)[i];\n\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "dst",
                        "type": "void *",
                        "definition": [
                            "void *dst"
                        ]
                    },
                    {
                        "path": null,
                        "name": "src",
                        "type": "const void *",
                        "definition": [
                            "const void *src"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_memset",
            "header": "",
            "params": [
                "void *dst",
                "int value",
                "size_t num"
            ],
            "definition": "static void lodepng_memset(void *dst, int value, size_t num)\n{\n  size_t i;\n  for (i = 0; i < num; i += 1)\n    ((char *) dst)[i] = (char) value;\n\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "dst",
                        "type": "void *",
                        "definition": [
                            "void *dst"
                        ]
                    },
                    {
                        "path": null,
                        "name": "value",
                        "type": "int",
                        "definition": [
                            "int value"
                        ]
                    },
                    {
                        "path": null,
                        "name": "num",
                        "type": "size_t",
                        "definition": [
                            "size_t num"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_strlen",
            "header": "",
            "params": [
                "const char *a"
            ],
            "definition": "static size_t lodepng_strlen(const char *a)\n{\n  unsigned int a_idx = 0;\n  const char *orig = a;\n  (void) (&lodepng_strlen);\n  while (a[a_idx])\n    (&a[a_idx])++;\n\n  a_idx += 1;\n  return (size_t) ((&a[a_idx]) - orig);\n}\n\n",
            "calle": [
                "lodepng_strlen"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "a",
                        "type": "const char *",
                        "definition": [
                            "const char *a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int a_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "orig",
                        "type": "const char *",
                        "definition": [
                            "const char *orig = a"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_addofl",
            "header": "",
            "params": [
                "size_t a",
                "size_t b",
                "size_t *result"
            ],
            "definition": "static int lodepng_addofl(size_t a, size_t b, size_t *result)\n{\n  *result = a + b;\n  return (*result) < a;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "a",
                        "type": "size_t",
                        "definition": [
                            "size_t a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "size_t",
                        "definition": [
                            "size_t b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "result",
                        "type": "size_t *",
                        "definition": [
                            "size_t *result"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_mulofl",
            "header": "",
            "params": [
                "size_t a",
                "size_t b",
                "size_t *result"
            ],
            "definition": "static int lodepng_mulofl(size_t a, size_t b, size_t *result)\n{\n  *result = a * b;\n  return (a != 0) && (((*result) / a) != b);\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "a",
                        "type": "size_t",
                        "definition": [
                            "size_t a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "size_t",
                        "definition": [
                            "size_t b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "result",
                        "type": "size_t *",
                        "definition": [
                            "size_t *result"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_gtofl",
            "header": "",
            "params": [
                "size_t a",
                "size_t b",
                "size_t c"
            ],
            "definition": "static int lodepng_gtofl(size_t a, size_t b, size_t c)\n{\n  size_t d;\n  if (lodepng_addofl(a, b, &d))\n  {\n    return 1;\n  }\n  return d > c;\n}\n\n",
            "calle": [
                "lodepng_addofl"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "a",
                        "type": "size_t",
                        "definition": [
                            "size_t a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "size_t",
                        "definition": [
                            "size_t b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "c",
                        "type": "size_t",
                        "definition": [
                            "size_t c"
                        ]
                    },
                    {
                        "path": null,
                        "name": "d",
                        "type": "size_t",
                        "definition": [
                            "size_t d"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "uivector_cleanup",
            "header": "",
            "params": [
                "void *p"
            ],
            "definition": "static void uivector_cleanup(void *p)\n{\n  ((uivector *) p)->size = (((uivector *) p)->allocsize = 0);\n  lodepng_free(((uivector *) p)->data);\n  ((uivector *) p)->data = 0;\n}\n\n",
            "calle": [
                "lodepng_free"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "p",
                        "type": "void *",
                        "definition": [
                            "void *p"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "uivector_resize",
            "header": "",
            "params": [
                "uivector *p",
                "size_t size"
            ],
            "definition": "static unsigned uivector_resize(uivector *p, size_t size)\n{\n  size_t allocsize = size * (sizeof(unsigned));\n  if (allocsize > p->allocsize)\n  {\n    size_t newsize = allocsize + (p->allocsize >> 1u);\n    void *data = lodepng_realloc(p->data, newsize);\n    if (data)\n    {\n      p->allocsize = newsize;\n      p->data = (unsigned *) data;\n    }\n    else\n      return 0;\n  }\n  p->size = size;\n  return 1;\n}\n\n",
            "calle": [
                "lodepng_realloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "p",
                        "type": "uivector *",
                        "definition": [
                            "uivector *p"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "allocsize",
                        "type": "size_t",
                        "definition": [
                            "size_t allocsize = size * (sizeof(unsigned))"
                        ]
                    },
                    {
                        "path": null,
                        "name": "newsize",
                        "type": "size_t",
                        "definition": [
                            "size_t newsize = allocsize + (p->allocsize >> 1u)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "void *",
                        "definition": [
                            "void *data = lodepng_realloc(p->data, newsize)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "uivector_init",
            "header": "",
            "params": [
                "uivector *p"
            ],
            "definition": "static void uivector_init(uivector *p)\n{\n  p->data = 0;\n  p->size = (p->allocsize = 0);\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "p",
                        "type": "uivector *",
                        "definition": [
                            "uivector *p"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "uivector_push_back",
            "header": "",
            "params": [
                "uivector *p",
                "unsigned c"
            ],
            "definition": "static unsigned uivector_push_back(uivector *p, unsigned c)\n{\n  if (!uivector_resize(p, p->size + 1))\n  {\n    return 0;\n  }\n  p->data[p->size - 1] = c;\n  return 1;\n}\n\n",
            "calle": [
                "uivector_resize"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "p",
                        "type": "uivector *",
                        "definition": [
                            "uivector *p"
                        ]
                    },
                    {
                        "path": null,
                        "name": "c",
                        "type": "unsigned",
                        "definition": [
                            "unsigned c"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "ucvector_reserve",
            "header": "",
            "params": [
                "ucvector *p",
                "size_t size"
            ],
            "definition": "static unsigned ucvector_reserve(ucvector *p, size_t size)\n{\n  if (size > p->allocsize)\n  {\n    size_t newsize = size + (p->allocsize >> 1u);\n    void *data = lodepng_realloc(p->data, newsize);\n    if (data)\n    {\n      p->allocsize = newsize;\n      p->data = (unsigned char *) data;\n    }\n    else\n      return 0;\n  }\n  return 1;\n}\n\n",
            "calle": [
                "lodepng_realloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "p",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *p"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "newsize",
                        "type": "size_t",
                        "definition": [
                            "size_t newsize = size + (p->allocsize >> 1u)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "void *",
                        "definition": [
                            "void *data = lodepng_realloc(p->data, newsize)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "ucvector_resize",
            "header": "",
            "params": [
                "ucvector *p",
                "size_t size"
            ],
            "definition": "static unsigned ucvector_resize(ucvector *p, size_t size)\n{\n  p->size = size;\n  return ucvector_reserve(p, size);\n}\n\n",
            "calle": [
                "ucvector_reserve"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "p",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *p"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "ucvector_init",
            "header": "",
            "params": [
                "unsigned char *buffer",
                "size_t size"
            ],
            "definition": "static ucvector ucvector_init(unsigned char *buffer, size_t size)\n{\n  ucvector v;\n  v.data = buffer;\n  v.allocsize = (v.size = size);\n  return v;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "buffer",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *buffer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "v",
                        "type": "ucvector",
                        "definition": [
                            "ucvector v"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "string_cleanup",
            "header": "",
            "params": [
                "char **out"
            ],
            "definition": "static void string_cleanup(char **out)\n{\n  lodepng_free(*out);\n  *out = 0;\n}\n\n",
            "calle": [
                "lodepng_free"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "char **",
                        "definition": [
                            "char **out"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "alloc_string_sized",
            "header": "",
            "params": [
                "const char *in",
                "size_t insize"
            ],
            "definition": "static char *alloc_string_sized(const char *in, size_t insize)\n{\n  char *out = (char *) lodepng_malloc(insize + 1);\n  if (out)\n  {\n    lodepng_memcpy(out, in, insize);\n    out[insize] = 0;\n  }\n  return out;\n}\n\n",
            "calle": [
                "lodepng_malloc",
                "lodepng_memcpy"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "in",
                        "type": "const char *",
                        "definition": [
                            "const char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "char *",
                        "definition": [
                            "char *out = (char *) lodepng_malloc(insize + 1)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "alloc_string",
            "header": "",
            "params": [
                "const char *in"
            ],
            "definition": "static char *alloc_string(const char *in)\n{\n  return alloc_string_sized(in, lodepng_strlen(in));\n}\n\n",
            "calle": [
                "alloc_string_sized",
                "lodepng_strlen"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "in",
                        "type": "const char *",
                        "definition": [
                            "const char *in"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_read32bitInt",
            "header": "",
            "params": [
                "const unsigned char *buffer"
            ],
            "definition": "static unsigned lodepng_read32bitInt(const unsigned char *buffer)\n{\n  return (((((unsigned) buffer[0]) << 24u) | (((unsigned) buffer[1]) << 16u)) | (((unsigned) buffer[2]) << 8u)) | ((unsigned) buffer[3]);\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "buffer",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *buffer"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_set32bitInt",
            "header": "",
            "params": [
                "unsigned char *buffer",
                "unsigned value"
            ],
            "definition": "static void lodepng_set32bitInt(unsigned char *buffer, unsigned value)\n{\n  buffer[0] = (unsigned char) ((value >> 24) & 0xff);\n  buffer[1] = (unsigned char) ((value >> 16) & 0xff);\n  buffer[2] = (unsigned char) ((value >> 8) & 0xff);\n  buffer[3] = (unsigned char) (value & 0xff);\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "buffer",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *buffer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "value",
                        "type": "unsigned",
                        "definition": [
                            "unsigned value"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_filesize",
            "header": "",
            "params": [
                "const char *filename"
            ],
            "definition": "static long lodepng_filesize(const char *filename)\n{\n  FILE *file;\n  unsigned int file_idx = 0;\n  long size;\n  file_idx = fopen(filename, \"rb\");\n  if (!(&file[file_idx]))\n  {\n    return -1;\n  }\n  if (fseek(file, 0, 2) != 0)\n  {\n    fclose(file);\n    return -1;\n  }\n  size = ftell(file);\n  if (size == 9223372036854775807L)\n  {\n    size = -1;\n  }\n  fclose(file);\n  return size;\n}\n\n",
            "calle": [
                "fclose",
                "fopen",
                "fseek",
                "ftell"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "filename",
                        "type": "const char *",
                        "definition": [
                            "const char *filename"
                        ]
                    },
                    {
                        "path": null,
                        "name": "file",
                        "type": "FILE *",
                        "definition": [
                            "FILE *file"
                        ]
                    },
                    {
                        "path": null,
                        "name": "file_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int file_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "long",
                        "definition": [
                            "long size"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_buffer_file",
            "header": "",
            "params": [
                "unsigned char *out",
                "size_t size",
                "const char *filename"
            ],
            "definition": "static unsigned lodepng_buffer_file(unsigned char *out, size_t size, const char *filename)\n{\n  FILE *file;\n  unsigned int file_idx = 0;\n  size_t readsize;\n  file_idx = fopen(filename, \"rb\");\n  if (!(&file[file_idx]))\n  {\n    return 78;\n  }\n  readsize = fread(out, 1, size, file);\n  fclose(file);\n  if (readsize != size)\n  {\n    return 78;\n  }\n  return 0;\n}\n\n",
            "calle": [
                "fclose",
                "fopen",
                "fread"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "filename",
                        "type": "const char *",
                        "definition": [
                            "const char *filename"
                        ]
                    },
                    {
                        "path": null,
                        "name": "file",
                        "type": "FILE *",
                        "definition": [
                            "FILE *file"
                        ]
                    },
                    {
                        "path": null,
                        "name": "file_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int file_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "readsize",
                        "type": "size_t",
                        "definition": [
                            "size_t readsize"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "LodePNGBitWriter_init",
            "header": "",
            "params": [
                "LodePNGBitWriter *writer",
                "ucvector *data"
            ],
            "definition": "static void LodePNGBitWriter_init(LodePNGBitWriter *writer, ucvector *data)\n{\n  writer->data = data;\n  writer->bp = 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "writer",
                        "type": "LodePNGBitWriter *",
                        "definition": [
                            "LodePNGBitWriter *writer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *data"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "writeBits",
            "header": "",
            "params": [
                "LodePNGBitWriter *writer",
                "unsigned value",
                "size_t nbits"
            ],
            "definition": "static void writeBits(LodePNGBitWriter *writer, unsigned value, size_t nbits)\n{\n  if (nbits == 1)\n  {\n    {\n      if ((writer->bp & 7u) == 0)\n      {\n        if (!ucvector_resize(writer->data, writer->data->size + 1))\n        {\n          return;\n        }\n        writer->data->data[writer->data->size - 1] = 0;\n      }\n      writer->data->data[writer->data->size - 1] |= value << (writer->bp & 7u);\n      writer->bp += 1;\n    }\n    ;\n  }\n  else\n  {\n    size_t i;\n    for (i = 0; i != nbits; i += 1)\n    {\n      {\n        if ((writer->bp & 7u) == 0)\n        {\n          if (!ucvector_resize(writer->data, writer->data->size + 1))\n          {\n            return;\n          }\n          writer->data->data[writer->data->size - 1] = 0;\n        }\n        writer->data->data[writer->data->size - 1] |= ((unsigned char) ((value >> i) & 1)) << (writer->bp & 7u);\n        writer->bp += 1;\n      }\n      ;\n    }\n\n  }\n}\n\n",
            "calle": [
                "ucvector_resize"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "writer",
                        "type": "LodePNGBitWriter *",
                        "definition": [
                            "LodePNGBitWriter *writer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "value",
                        "type": "unsigned",
                        "definition": [
                            "unsigned value"
                        ]
                    },
                    {
                        "path": null,
                        "name": "nbits",
                        "type": "size_t",
                        "definition": [
                            "size_t nbits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "writeBitsReversed",
            "header": "",
            "params": [
                "LodePNGBitWriter *writer",
                "unsigned value",
                "size_t nbits"
            ],
            "definition": "static void writeBitsReversed(LodePNGBitWriter *writer, unsigned value, size_t nbits)\n{\n  size_t i;\n  for (i = 0; i != nbits; i += 1)\n  {\n    {\n      if ((writer->bp & 7u) == 0)\n      {\n        if (!ucvector_resize(writer->data, writer->data->size + 1))\n        {\n          return;\n        }\n        writer->data->data[writer->data->size - 1] = 0;\n      }\n      writer->data->data[writer->data->size - 1] |= ((unsigned char) ((value >> ((nbits - 1u) - i)) & 1u)) << (writer->bp & 7u);\n      writer->bp += 1;\n    }\n    ;\n  }\n\n}\n\n",
            "calle": [
                "ucvector_resize"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "writer",
                        "type": "LodePNGBitWriter *",
                        "definition": [
                            "LodePNGBitWriter *writer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "value",
                        "type": "unsigned",
                        "definition": [
                            "unsigned value"
                        ]
                    },
                    {
                        "path": null,
                        "name": "nbits",
                        "type": "size_t",
                        "definition": [
                            "size_t nbits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "LodePNGBitReader_init",
            "header": "",
            "params": [
                "LodePNGBitReader *reader",
                "const unsigned char *data",
                "size_t size"
            ],
            "definition": "static unsigned LodePNGBitReader_init(LodePNGBitReader *reader, const unsigned char *data, size_t size)\n{\n  size_t temp;\n  reader->data = data;\n  reader->size = size;\n  if (lodepng_mulofl(size, 8u, &reader->bitsize))\n  {\n    return 105;\n  }\n  if (lodepng_addofl(reader->bitsize, 64u, &temp))\n  {\n    return 105;\n  }\n  reader->bp = 0;\n  reader->buffer = 0;\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_addofl",
                "lodepng_mulofl"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "reader",
                        "type": "LodePNGBitReader *",
                        "definition": [
                            "LodePNGBitReader *reader"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "temp",
                        "type": "size_t",
                        "definition": [
                            "size_t temp"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "ensureBits9",
            "header": "",
            "params": [
                "LodePNGBitReader *reader",
                "size_t nbits"
            ],
            "definition": "inline static void ensureBits9(LodePNGBitReader *reader, size_t nbits)\n{\n  size_t start = reader->bp >> 3u;\n  size_t size = reader->size;\n  if ((start + 1u) < size)\n  {\n    reader->buffer = ((unsigned) reader->data[start + 0]) | (((unsigned) reader->data[start + 1]) << 8u);\n    reader->buffer >>= reader->bp & 7u;\n  }\n  else\n  {\n    reader->buffer = 0;\n    if ((start + 0u) < size)\n    {\n      reader->buffer = reader->data[start + 0];\n    }\n    reader->buffer >>= reader->bp & 7u;\n  }\n  (void) nbits;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "reader",
                        "type": "LodePNGBitReader *",
                        "definition": [
                            "LodePNGBitReader *reader"
                        ]
                    },
                    {
                        "path": null,
                        "name": "nbits",
                        "type": "size_t",
                        "definition": [
                            "size_t nbits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "start",
                        "type": "size_t",
                        "definition": [
                            "size_t start = reader->bp >> 3u"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size = reader->size"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "ensureBits17",
            "header": "",
            "params": [
                "LodePNGBitReader *reader",
                "size_t nbits"
            ],
            "definition": "inline static void ensureBits17(LodePNGBitReader *reader, size_t nbits)\n{\n  size_t start = reader->bp >> 3u;\n  size_t size = reader->size;\n  if ((start + 2u) < size)\n  {\n    reader->buffer = (((unsigned) reader->data[start + 0]) | (((unsigned) reader->data[start + 1]) << 8u)) | (((unsigned) reader->data[start + 2]) << 16u);\n    reader->buffer >>= reader->bp & 7u;\n  }\n  else\n  {\n    reader->buffer = 0;\n    if ((start + 0u) < size)\n    {\n      reader->buffer |= reader->data[start + 0];\n    }\n    if ((start + 1u) < size)\n    {\n      reader->buffer |= ((unsigned) reader->data[start + 1]) << 8u;\n    }\n    reader->buffer >>= reader->bp & 7u;\n  }\n  (void) nbits;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "reader",
                        "type": "LodePNGBitReader *",
                        "definition": [
                            "LodePNGBitReader *reader"
                        ]
                    },
                    {
                        "path": null,
                        "name": "nbits",
                        "type": "size_t",
                        "definition": [
                            "size_t nbits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "start",
                        "type": "size_t",
                        "definition": [
                            "size_t start = reader->bp >> 3u"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size = reader->size"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "ensureBits25",
            "header": "",
            "params": [
                "LodePNGBitReader *reader",
                "size_t nbits"
            ],
            "definition": "inline static void ensureBits25(LodePNGBitReader *reader, size_t nbits)\n{\n  size_t start = reader->bp >> 3u;\n  size_t size = reader->size;\n  if ((start + 3u) < size)\n  {\n    reader->buffer = ((((unsigned) reader->data[start + 0]) | (((unsigned) reader->data[start + 1]) << 8u)) | (((unsigned) reader->data[start + 2]) << 16u)) | (((unsigned) reader->data[start + 3]) << 24u);\n    reader->buffer >>= reader->bp & 7u;\n  }\n  else\n  {\n    reader->buffer = 0;\n    if ((start + 0u) < size)\n    {\n      reader->buffer |= reader->data[start + 0];\n    }\n    if ((start + 1u) < size)\n    {\n      reader->buffer |= ((unsigned) reader->data[start + 1]) << 8u;\n    }\n    if ((start + 2u) < size)\n    {\n      reader->buffer |= ((unsigned) reader->data[start + 2]) << 16u;\n    }\n    reader->buffer >>= reader->bp & 7u;\n  }\n  (void) nbits;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "reader",
                        "type": "LodePNGBitReader *",
                        "definition": [
                            "LodePNGBitReader *reader"
                        ]
                    },
                    {
                        "path": null,
                        "name": "nbits",
                        "type": "size_t",
                        "definition": [
                            "size_t nbits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "start",
                        "type": "size_t",
                        "definition": [
                            "size_t start = reader->bp >> 3u"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size = reader->size"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "ensureBits32",
            "header": "",
            "params": [
                "LodePNGBitReader *reader",
                "size_t nbits"
            ],
            "definition": "inline static void ensureBits32(LodePNGBitReader *reader, size_t nbits)\n{\n  size_t start = reader->bp >> 3u;\n  size_t size = reader->size;\n  if ((start + 4u) < size)\n  {\n    reader->buffer = ((((unsigned) reader->data[start + 0]) | (((unsigned) reader->data[start + 1]) << 8u)) | (((unsigned) reader->data[start + 2]) << 16u)) | (((unsigned) reader->data[start + 3]) << 24u);\n    reader->buffer >>= reader->bp & 7u;\n    reader->buffer |= (((unsigned) reader->data[start + 4]) << 24u) << (8u - (reader->bp & 7u));\n  }\n  else\n  {\n    reader->buffer = 0;\n    if ((start + 0u) < size)\n    {\n      reader->buffer |= reader->data[start + 0];\n    }\n    if ((start + 1u) < size)\n    {\n      reader->buffer |= ((unsigned) reader->data[start + 1]) << 8u;\n    }\n    if ((start + 2u) < size)\n    {\n      reader->buffer |= ((unsigned) reader->data[start + 2]) << 16u;\n    }\n    if ((start + 3u) < size)\n    {\n      reader->buffer |= ((unsigned) reader->data[start + 3]) << 24u;\n    }\n    reader->buffer >>= reader->bp & 7u;\n  }\n  (void) nbits;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "reader",
                        "type": "LodePNGBitReader *",
                        "definition": [
                            "LodePNGBitReader *reader"
                        ]
                    },
                    {
                        "path": null,
                        "name": "nbits",
                        "type": "size_t",
                        "definition": [
                            "size_t nbits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "start",
                        "type": "size_t",
                        "definition": [
                            "size_t start = reader->bp >> 3u"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size = reader->size"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "peekBits",
            "header": "",
            "params": [
                "LodePNGBitReader *reader",
                "size_t nbits"
            ],
            "definition": "inline static unsigned peekBits(LodePNGBitReader *reader, size_t nbits)\n{\n  return reader->buffer & ((1u << nbits) - 1u);\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "reader",
                        "type": "LodePNGBitReader *",
                        "definition": [
                            "LodePNGBitReader *reader"
                        ]
                    },
                    {
                        "path": null,
                        "name": "nbits",
                        "type": "size_t",
                        "definition": [
                            "size_t nbits"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "advanceBits",
            "header": "",
            "params": [
                "LodePNGBitReader *reader",
                "size_t nbits"
            ],
            "definition": "inline static void advanceBits(LodePNGBitReader *reader, size_t nbits)\n{\n  reader->buffer >>= nbits;\n  reader->bp += nbits;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "reader",
                        "type": "LodePNGBitReader *",
                        "definition": [
                            "LodePNGBitReader *reader"
                        ]
                    },
                    {
                        "path": null,
                        "name": "nbits",
                        "type": "size_t",
                        "definition": [
                            "size_t nbits"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "readBits",
            "header": "",
            "params": [
                "LodePNGBitReader *reader",
                "size_t nbits"
            ],
            "definition": "inline static unsigned readBits(LodePNGBitReader *reader, size_t nbits)\n{\n  unsigned result = peekBits(reader, nbits);\n  advanceBits(reader, nbits);\n  return result;\n}\n\n",
            "calle": [
                "advanceBits",
                "peekBits"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "reader",
                        "type": "LodePNGBitReader *",
                        "definition": [
                            "LodePNGBitReader *reader"
                        ]
                    },
                    {
                        "path": null,
                        "name": "nbits",
                        "type": "size_t",
                        "definition": [
                            "size_t nbits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "result",
                        "type": "unsigned",
                        "definition": [
                            "unsigned result = peekBits(reader, nbits)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "reverseBits",
            "header": "",
            "params": [
                "unsigned bits",
                "unsigned num"
            ],
            "definition": "static unsigned reverseBits(unsigned bits, unsigned num)\n{\n  unsigned i;\n  unsigned result = 0;\n  for (i = 0; i < num; i += 1)\n    result |= ((bits >> ((num - i) - 1u)) & 1u) << i;\n\n  return result;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "bits",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "num",
                        "type": "unsigned",
                        "definition": [
                            "unsigned num"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "result",
                        "type": "unsigned",
                        "definition": [
                            "unsigned result = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "HuffmanTree_init",
            "header": "",
            "params": [
                "HuffmanTree *tree"
            ],
            "definition": "static void HuffmanTree_init(HuffmanTree *tree)\n{\n  tree->codes = 0;\n  tree->lengths = 0;\n  tree->table_len = 0;\n  tree->table_value = 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "tree",
                        "type": "HuffmanTree *",
                        "definition": [
                            "HuffmanTree *tree"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "HuffmanTree_cleanup",
            "header": "",
            "params": [
                "HuffmanTree *tree"
            ],
            "definition": "static void HuffmanTree_cleanup(HuffmanTree *tree)\n{\n  lodepng_free(tree->codes);\n  lodepng_free(tree->lengths);\n  lodepng_free(tree->table_len);\n  lodepng_free(tree->table_value);\n}\n\n",
            "calle": [
                "lodepng_free"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "tree",
                        "type": "HuffmanTree *",
                        "definition": [
                            "HuffmanTree *tree"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "HuffmanTree_makeTable",
            "header": "",
            "params": [
                "HuffmanTree *tree"
            ],
            "definition": "static unsigned HuffmanTree_makeTable(HuffmanTree *tree)\n{\n  static const unsigned headsize = 1u << 9u;\n  static const unsigned mask = (1u << 9u) - 1u;\n  size_t i;\n  size_t numpresent;\n  size_t pointer;\n  size_t size;\n  unsigned *maxlens = (unsigned *) lodepng_malloc(headsize * (sizeof(unsigned)));\n  if (!maxlens)\n  {\n    return 83;\n  }\n  lodepng_memset(maxlens, 0, headsize * (sizeof(*maxlens)));\n  for (i = 0; i < tree->numcodes; i += 1)\n  {\n    unsigned symbol = tree->codes[i];\n    unsigned l = tree->lengths[i];\n    unsigned index;\n    if (l <= 9u)\n    {\n      continue;\n    }\n    index = reverseBits(symbol >> (l - 9u), 9u);\n    maxlens[index] = (maxlens[index] > l) ? (maxlens[index]) : (l);\n  }\n\n  size = headsize;\n  for (i = 0; i < headsize; i += 1)\n  {\n    unsigned l = maxlens[i];\n    if (l > 9u)\n    {\n      size += 1u << (l - 9u);\n    }\n  }\n\n  tree->table_len = (unsigned char *) lodepng_malloc(size * (sizeof(*tree->table_len)));\n  tree->table_value = (unsigned short *) lodepng_malloc(size * (sizeof(*tree->table_value)));\n  if ((!tree->table_len) || (!tree->table_value))\n  {\n    lodepng_free(maxlens);\n    return 83;\n  }\n  for (i = 0; i < size; i += 1)\n    tree->table_len[i] = 16;\n\n  pointer = headsize;\n  for (i = 0; i < headsize; i += 1)\n  {\n    unsigned l = maxlens[i];\n    if (l <= 9u)\n    {\n      continue;\n    }\n    tree->table_len[i] = l;\n    tree->table_value[i] = pointer;\n    pointer += 1u << (l - 9u);\n  }\n\n  lodepng_free(maxlens);\n  numpresent = 0;\n  for (i = 0; i < tree->numcodes; i += 1)\n  {\n    helper_HuffmanTree_makeTable_1(&numpresent, tree, mask, i);\n  }\n\n  if (numpresent < 2)\n  {\n    for (i = 0; i < size; i += 1)\n    {\n      if (tree->table_len[i] == 16)\n      {\n        tree->table_len[i] = (i < headsize) ? (1) : (9u + 1);\n        tree->table_value[i] = 65535u;\n      }\n    }\n\n  }\n  else\n  {\n    for (i = 0; i < size; i += 1)\n    {\n      if (tree->table_len[i] == 16)\n      {\n        return 55;\n      }\n    }\n\n  }\n  return 0;\n}\n\n",
            "calle": [
                "helper_HuffmanTree_makeTable_1",
                "lodepng_free",
                "lodepng_malloc",
                "lodepng_memset",
                "reverseBits"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "tree",
                        "type": "HuffmanTree *",
                        "definition": [
                            "HuffmanTree *tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "headsize",
                        "type": "const unsigned",
                        "definition": [
                            "static const unsigned headsize = 1u << 9u"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mask",
                        "type": "const unsigned",
                        "definition": [
                            "static const unsigned mask = (1u << 9u) - 1u"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numpresent",
                        "type": "size_t",
                        "definition": [
                            "size_t numpresent"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pointer",
                        "type": "size_t",
                        "definition": [
                            "size_t pointer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "maxlens",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *maxlens = (unsigned *) lodepng_malloc(headsize * (sizeof(unsigned)))"
                        ]
                    },
                    {
                        "path": null,
                        "name": "symbol",
                        "type": "unsigned",
                        "definition": [
                            "unsigned symbol = tree->codes[i]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "l",
                        "type": "unsigned",
                        "definition": [
                            "unsigned l = maxlens[i]",
                            "unsigned l = tree->lengths[i]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "index",
                        "type": "unsigned",
                        "definition": [
                            "unsigned index"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "HuffmanTree_makeFromLengths2",
            "header": "",
            "params": [
                "HuffmanTree *tree"
            ],
            "definition": "static unsigned HuffmanTree_makeFromLengths2(HuffmanTree *tree)\n{\n  unsigned *blcount;\n  unsigned int blcount_idx = 0;\n  unsigned *nextcode;\n  unsigned int nextcode_idx = 0;\n  unsigned error = 0;\n  unsigned bits;\n  unsigned n;\n  tree->codes = (unsigned *) lodepng_malloc(tree->numcodes * (sizeof(unsigned)));\n  blcount_idx = (unsigned *) lodepng_malloc((tree->maxbitlen + 1) * (sizeof(unsigned)));\n  nextcode_idx = (unsigned *) lodepng_malloc((tree->maxbitlen + 1) * (sizeof(unsigned)));\n  if (((!tree->codes) || (!(&blcount[blcount_idx]))) || (!(&nextcode[nextcode_idx])))\n  {\n    error = 83;\n  }\n  if (!error)\n  {\n    for (n = 0; n != (tree->maxbitlen + 1); n += 1)\n      blcount[n + blcount_idx] = (nextcode[n + nextcode_idx] = 0);\n\n    for (bits = 0; bits != tree->numcodes; bits += 1)\n      ++blcount[tree->lengths[bits] + blcount_idx];\n\n    for (bits = 1; bits <= tree->maxbitlen; bits += 1)\n    {\n      nextcode[bits + nextcode_idx] = (nextcode[(bits - 1) + nextcode_idx] + blcount[(bits - 1) + blcount_idx]) << 1u;\n    }\n\n    for (n = 0; n != tree->numcodes; n += 1)\n    {\n      if (tree->lengths[n] != 0)\n      {\n        tree->codes[n] = nextcode[tree->lengths[n] + nextcode_idx]++;\n        tree->codes[n] &= (1u << tree->lengths[n]) - 1u;\n      }\n    }\n\n  }\n  lodepng_free(blcount);\n  lodepng_free(nextcode);\n  if (!error)\n  {\n    error = HuffmanTree_makeTable(tree);\n  }\n  return error;\n}\n\n",
            "calle": [
                "HuffmanTree_makeTable",
                "lodepng_free",
                "lodepng_malloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "tree",
                        "type": "HuffmanTree *",
                        "definition": [
                            "HuffmanTree *tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "blcount",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *blcount"
                        ]
                    },
                    {
                        "path": null,
                        "name": "blcount_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int blcount_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "nextcode",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *nextcode"
                        ]
                    },
                    {
                        "path": null,
                        "name": "nextcode_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int nextcode_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bits",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "n",
                        "type": "unsigned",
                        "definition": [
                            "unsigned n"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "HuffmanTree_makeFromLengths",
            "header": "",
            "params": [
                "HuffmanTree *tree",
                "const unsigned *bitlen",
                "size_t numcodes",
                "unsigned maxbitlen"
            ],
            "definition": "static unsigned HuffmanTree_makeFromLengths(HuffmanTree *tree, const unsigned *bitlen, size_t numcodes, unsigned maxbitlen)\n{\n  unsigned i;\n  tree->lengths = (unsigned *) lodepng_malloc(numcodes * (sizeof(unsigned)));\n  if (!tree->lengths)\n  {\n    return 83;\n  }\n  for (i = 0; i != numcodes; i += 1)\n    tree->lengths[i] = bitlen[i];\n\n  tree->numcodes = (unsigned) numcodes;\n  tree->maxbitlen = maxbitlen;\n  return HuffmanTree_makeFromLengths2(tree);\n}\n\n",
            "calle": [
                "HuffmanTree_makeFromLengths2",
                "lodepng_malloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "tree",
                        "type": "HuffmanTree *",
                        "definition": [
                            "HuffmanTree *tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen",
                        "type": "const unsigned *",
                        "definition": [
                            "const unsigned *bitlen"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes",
                        "type": "size_t",
                        "definition": [
                            "size_t numcodes"
                        ]
                    },
                    {
                        "path": null,
                        "name": "maxbitlen",
                        "type": "unsigned",
                        "definition": [
                            "unsigned maxbitlen"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "bpmnode_create",
            "header": "",
            "params": [
                "BPMLists *lists",
                "int weight",
                "unsigned index",
                "BPMNode *tail"
            ],
            "definition": "static BPMNode *bpmnode_create(BPMLists *lists, int weight, unsigned index, BPMNode *tail)\n{\n  unsigned i;\n  BPMNode *result;\n  unsigned int result_idx = 0;\n  if (lists->nextfree >= lists->numfree)\n  {\n    for (i = 0; i != lists->memsize; i += 1)\n      lists->memory[i].in_use = 0;\n\n    for (i = 0; i != lists->listsize; i += 1)\n    {\n      BPMNode *node;\n      unsigned int node_idx = 0;\n      for (node_idx = lists->chains0[i]; (&node[node_idx]) != 0; node_idx = node_idx->tail)\n        node->in_use = 1;\n\n      for (node_idx = lists->chains1[i]; (&node[node_idx]) != 0; node_idx = node_idx->tail)\n        node->in_use = 1;\n\n    }\n\n    lists->numfree = 0;\n    for (i = 0; i != lists->memsize; i += 1)\n    {\n      if (!lists->memory[i].in_use)\n      {\n        lists->freelist[lists->numfree++] = &lists->memory[i];\n      }\n    }\n\n    lists->nextfree = 0;\n  }\n  result_idx = lists->freelist[lists->nextfree++];\n  result->weight = weight;\n  result->index = index;\n  result->tail = tail;\n  return result;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "lists",
                        "type": "BPMLists *",
                        "definition": [
                            "BPMLists *lists"
                        ]
                    },
                    {
                        "path": null,
                        "name": "weight",
                        "type": "int",
                        "definition": [
                            "int weight"
                        ]
                    },
                    {
                        "path": null,
                        "name": "index",
                        "type": "unsigned",
                        "definition": [
                            "unsigned index"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tail",
                        "type": "BPMNode *",
                        "definition": [
                            "BPMNode *tail"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "result",
                        "type": "BPMNode *",
                        "definition": [
                            "BPMNode *result"
                        ]
                    },
                    {
                        "path": null,
                        "name": "result_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int result_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "node",
                        "type": "BPMNode *",
                        "definition": [
                            "BPMNode *node"
                        ]
                    },
                    {
                        "path": null,
                        "name": "node_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int node_idx = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "bpmnode_sort",
            "header": "",
            "params": [
                "BPMNode *leaves",
                "size_t num"
            ],
            "definition": "static void bpmnode_sort(BPMNode *leaves, size_t num)\n{\n  BPMNode *mem = (BPMNode *) lodepng_malloc((sizeof(*leaves)) * num);\n  size_t width;\n  size_t counter = 0;\n  for (width = 1; width < num; width *= 2)\n  {\n    BPMNode *a = (counter & 1) ? (mem) : (leaves);\n    BPMNode *b = (counter & 1) ? (leaves) : (mem);\n    size_t p;\n    for (p = 0; p < num; p += 2 * width)\n    {\n      size_t q = ((p + width) > num) ? (num) : (p + width);\n      size_t r = ((p + (2 * width)) > num) ? (num) : (p + (2 * width));\n      size_t i = p;\n      size_t j = q;\n      size_t k;\n      for (k = p; k < r; k += 1)\n      {\n        if ((i < q) && ((j >= r) || (a[i].weight <= a[j].weight)))\n        {\n          b[k] = a[i];\n          i += 1;\n        }\n        else\n          b[k] = a[j];\n        j += 1;\n      }\n\n    }\n\n    counter += 1;\n  }\n\n  if (counter & 1)\n  {\n    lodepng_memcpy(leaves, mem, (sizeof(*leaves)) * num);\n  }\n  lodepng_free(mem);\n}\n\n",
            "calle": [
                "lodepng_free",
                "lodepng_malloc",
                "lodepng_memcpy"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "leaves",
                        "type": "BPMNode *",
                        "definition": [
                            "BPMNode *leaves"
                        ]
                    },
                    {
                        "path": null,
                        "name": "num",
                        "type": "size_t",
                        "definition": [
                            "size_t num"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mem",
                        "type": "BPMNode *",
                        "definition": [
                            "BPMNode *mem = (BPMNode *) lodepng_malloc((sizeof(*leaves)) * num)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "width",
                        "type": "size_t",
                        "definition": [
                            "size_t width"
                        ]
                    },
                    {
                        "path": null,
                        "name": "counter",
                        "type": "size_t",
                        "definition": [
                            "size_t counter = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "BPMNode *",
                        "definition": [
                            "BPMNode *a = (counter & 1) ? (mem) : (leaves)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "BPMNode *",
                        "definition": [
                            "BPMNode *b = (counter & 1) ? (leaves) : (mem)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p",
                        "type": "size_t",
                        "definition": [
                            "size_t p"
                        ]
                    },
                    {
                        "path": null,
                        "name": "q",
                        "type": "size_t",
                        "definition": [
                            "size_t q = ((p + width) > num) ? (num) : (p + width)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r",
                        "type": "size_t",
                        "definition": [
                            "size_t r = ((p + (2 * width)) > num) ? (num) : (p + (2 * width))"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = p"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "size_t",
                        "definition": [
                            "size_t j = q"
                        ]
                    },
                    {
                        "path": null,
                        "name": "k",
                        "type": "size_t",
                        "definition": [
                            "size_t k"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "boundaryPM",
            "header": "",
            "params": [
                "BPMLists *lists",
                "BPMNode *leaves",
                "size_t numpresent",
                "int c",
                "int num"
            ],
            "definition": "static void boundaryPM(BPMLists *lists, BPMNode *leaves, size_t numpresent, int c, int num)\n{\n  unsigned lastindex = lists->chains1[c]->index;\n  if (c == 0)\n  {\n    if (lastindex >= numpresent)\n    {\n      return;\n    }\n    lists->chains0[c] = lists->chains1[c];\n    lists->chains1[c] = bpmnode_create(lists, leaves[lastindex].weight, lastindex + 1, 0);\n  }\n  else\n  {\n    int sum = lists->chains0[c - 1]->weight + lists->chains1[c - 1]->weight;\n    lists->chains0[c] = lists->chains1[c];\n    if ((lastindex < numpresent) && (sum > leaves[lastindex].weight))\n    {\n      lists->chains1[c] = bpmnode_create(lists, leaves[lastindex].weight, lastindex + 1, lists->chains1[c]->tail);\n      return;\n    }\n    lists->chains1[c] = bpmnode_create(lists, sum, lastindex, lists->chains1[c - 1]);\n    if ((num + 1) < ((int) ((2 * numpresent) - 2)))\n    {\n      boundaryPM(lists, leaves, numpresent, c - 1, num);\n      boundaryPM(lists, leaves, numpresent, c - 1, num);\n    }\n  }\n}\n\n",
            "calle": [
                "boundaryPM",
                "bpmnode_create"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "lists",
                        "type": "BPMLists *",
                        "definition": [
                            "BPMLists *lists"
                        ]
                    },
                    {
                        "path": null,
                        "name": "leaves",
                        "type": "BPMNode *",
                        "definition": [
                            "BPMNode *leaves"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numpresent",
                        "type": "size_t",
                        "definition": [
                            "size_t numpresent"
                        ]
                    },
                    {
                        "path": null,
                        "name": "c",
                        "type": "int",
                        "definition": [
                            "int c"
                        ]
                    },
                    {
                        "path": null,
                        "name": "num",
                        "type": "int",
                        "definition": [
                            "int num"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lastindex",
                        "type": "unsigned",
                        "definition": [
                            "unsigned lastindex = lists->chains1[c]->index"
                        ]
                    },
                    {
                        "path": null,
                        "name": "sum",
                        "type": "int",
                        "definition": [
                            "int sum = lists->chains0[c - 1]->weight + lists->chains1[c - 1]->weight"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "HuffmanTree_makeFromFrequencies",
            "header": "",
            "params": [
                "HuffmanTree *tree",
                "const unsigned *frequencies",
                "size_t mincodes",
                "size_t numcodes",
                "unsigned maxbitlen"
            ],
            "definition": "static unsigned HuffmanTree_makeFromFrequencies(HuffmanTree *tree, const unsigned *frequencies, size_t mincodes, size_t numcodes, unsigned maxbitlen)\n{\n  unsigned error = 0;\n  numcodes -= 1;\n  numcodes -= 1;\n  numcodes -= 1;\n  numcodes -= 1;\n  numcodes -= 1;\n  numcodes -= 1;\n  numcodes -= 1;\n  numcodes -= 1;\n  while ((!frequencies[numcodes - 1]) && (numcodes > mincodes))\n    --numcodes;\n\n  tree->lengths = (unsigned *) lodepng_malloc(numcodes * (sizeof(unsigned)));\n  if (!tree->lengths)\n    return 83;\n  tree->maxbitlen = maxbitlen;\n  tree->numcodes = (unsigned) numcodes;\n  error = lodepng_huffman_code_lengths(tree->lengths, frequencies, numcodes, maxbitlen);\n  if (!error)\n    error = HuffmanTree_makeFromLengths2(tree);\n  return error;\n}\n\n",
            "calle": [
                "HuffmanTree_makeFromLengths2",
                "lodepng_huffman_code_lengths",
                "lodepng_malloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "tree",
                        "type": "HuffmanTree *",
                        "definition": [
                            "HuffmanTree *tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "frequencies",
                        "type": "const unsigned *",
                        "definition": [
                            "const unsigned *frequencies"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mincodes",
                        "type": "size_t",
                        "definition": [
                            "size_t mincodes"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes",
                        "type": "size_t",
                        "definition": [
                            "size_t numcodes"
                        ]
                    },
                    {
                        "path": null,
                        "name": "maxbitlen",
                        "type": "unsigned",
                        "definition": [
                            "unsigned maxbitlen"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "generateFixedLitLenTree",
            "header": "",
            "params": [
                "HuffmanTree *tree"
            ],
            "definition": "static unsigned generateFixedLitLenTree(HuffmanTree *tree)\n{\n  unsigned i;\n  unsigned error = 0;\n  unsigned *bitlen = (unsigned *) lodepng_malloc(288 * (sizeof(unsigned)));\n  if (!bitlen)\n  {\n    return 83;\n  }\n  for (i = 0; i <= 143; i += 1)\n    bitlen[i] = 8;\n\n  for (i = 144; i <= 255; i += 1)\n    bitlen[i] = 9;\n\n  for (i = 256; i <= 279; i += 1)\n    bitlen[i] = 7;\n\n  for (i = 280; i <= 287; i += 1)\n    bitlen[i] = 8;\n\n  error = HuffmanTree_makeFromLengths(tree, bitlen, 288, 15);\n  lodepng_free(bitlen);\n  return error;\n}\n\n",
            "calle": [
                "HuffmanTree_makeFromLengths",
                "lodepng_free",
                "lodepng_malloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "tree",
                        "type": "HuffmanTree *",
                        "definition": [
                            "HuffmanTree *tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *bitlen = (unsigned *) lodepng_malloc(288 * (sizeof(unsigned)))"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "generateFixedDistanceTree",
            "header": "",
            "params": [
                "HuffmanTree *tree"
            ],
            "definition": "static unsigned generateFixedDistanceTree(HuffmanTree *tree)\n{\n  unsigned i;\n  unsigned error = 0;\n  unsigned *bitlen = (unsigned *) lodepng_malloc(32 * (sizeof(unsigned)));\n  if (!bitlen)\n  {\n    return 83;\n  }\n  for (i = 0; i != 32; i += 1)\n    bitlen[i] = 5;\n\n  error = HuffmanTree_makeFromLengths(tree, bitlen, 32, 15);\n  lodepng_free(bitlen);\n  return error;\n}\n\n",
            "calle": [
                "HuffmanTree_makeFromLengths",
                "lodepng_free",
                "lodepng_malloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "tree",
                        "type": "HuffmanTree *",
                        "definition": [
                            "HuffmanTree *tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *bitlen = (unsigned *) lodepng_malloc(32 * (sizeof(unsigned)))"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "huffmanDecodeSymbol",
            "header": "",
            "params": [
                "LodePNGBitReader *reader",
                "const HuffmanTree *codetree"
            ],
            "definition": "static unsigned huffmanDecodeSymbol(LodePNGBitReader *reader, const HuffmanTree *codetree)\n{\n  unsigned short code = peekBits(reader, 9u);\n  unsigned short l = codetree->table_len[code];\n  unsigned short value = codetree->table_value[code];\n  if (l <= 9u)\n  {\n    advanceBits(reader, l);\n    return value;\n  }\n  else\n  {\n    advanceBits(reader, 9u);\n    value += peekBits(reader, l - 9u);\n    advanceBits(reader, codetree->table_len[value] - 9u);\n    return codetree->table_value[value];\n  }\n}\n\n",
            "calle": [
                "advanceBits",
                "peekBits"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "reader",
                        "type": "LodePNGBitReader *",
                        "definition": [
                            "LodePNGBitReader *reader"
                        ]
                    },
                    {
                        "path": null,
                        "name": "codetree",
                        "type": "const HuffmanTree *",
                        "definition": [
                            "const HuffmanTree *codetree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "code",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short code = peekBits(reader, 9u)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "l",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short l = codetree->table_len[code]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "value",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short value = codetree->table_value[code]"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "getTreeInflateFixed",
            "header": "",
            "params": [
                "HuffmanTree *tree_ll",
                "HuffmanTree *tree_d"
            ],
            "definition": "static unsigned getTreeInflateFixed(HuffmanTree *tree_ll, HuffmanTree *tree_d)\n{\n  unsigned error = generateFixedLitLenTree(tree_ll);\n  if (error)\n  {\n    return error;\n  }\n  return generateFixedDistanceTree(tree_d);\n}\n\n",
            "calle": [
                "generateFixedDistanceTree",
                "generateFixedLitLenTree"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "tree_ll",
                        "type": "HuffmanTree *",
                        "definition": [
                            "HuffmanTree *tree_ll"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_d",
                        "type": "HuffmanTree *",
                        "definition": [
                            "HuffmanTree *tree_d"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = generateFixedLitLenTree(tree_ll)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "getTreeInflateDynamic",
            "header": "",
            "params": [
                "HuffmanTree *tree_ll",
                "HuffmanTree *tree_d",
                "LodePNGBitReader *reader"
            ],
            "definition": "static unsigned getTreeInflateDynamic(HuffmanTree *tree_ll, HuffmanTree *tree_d, LodePNGBitReader *reader)\n{\n  unsigned error = 0;\n  unsigned n;\n  unsigned HLIT;\n  unsigned HDIST;\n  unsigned HCLEN;\n  unsigned i;\n  unsigned *bitlen_ll = 0;\n  unsigned int bitlen_ll_idx = 0;\n  unsigned *bitlen_d = 0;\n  unsigned int bitlen_d_idx = 0;\n  unsigned *bitlen_cl = 0;\n  unsigned int bitlen_cl_idx = 0;\n  HuffmanTree tree_cl;\n  if ((reader->bitsize - reader->bp) < 14)\n  {\n    return 49;\n  }\n  ensureBits17(reader, 14);\n  HLIT = readBits(reader, 5) + 257;\n  HDIST = readBits(reader, 5) + 1;\n  HCLEN = readBits(reader, 4) + 4;\n  bitlen_cl_idx = (unsigned *) lodepng_malloc(19 * (sizeof(unsigned)));\n  if (!(&bitlen_cl[bitlen_cl_idx]))\n  {\n    return 83;\n  }\n  HuffmanTree_init(&tree_cl);\n  while (!error)\n  {\n    helper_getTreeInflateDynamic_1(&error, &n, &HLIT, &i, &bitlen_ll_idx, &bitlen_d_idx, &bitlen_cl_idx, tree_ll, tree_d, reader, HDIST, HCLEN, bitlen_ll, bitlen_d, bitlen_cl, tree_cl);\n  }\n\n  lodepng_free(bitlen_cl);\n  lodepng_free(bitlen_ll);\n  lodepng_free(bitlen_d);\n  HuffmanTree_cleanup(&tree_cl);\n  return error;\n}\n\n",
            "calle": [
                "HuffmanTree_cleanup",
                "HuffmanTree_init",
                "ensureBits17",
                "helper_getTreeInflateDynamic_1",
                "lodepng_free",
                "lodepng_malloc",
                "readBits"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "tree_ll",
                        "type": "HuffmanTree *",
                        "definition": [
                            "HuffmanTree *tree_ll"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_d",
                        "type": "HuffmanTree *",
                        "definition": [
                            "HuffmanTree *tree_d"
                        ]
                    },
                    {
                        "path": null,
                        "name": "reader",
                        "type": "LodePNGBitReader *",
                        "definition": [
                            "LodePNGBitReader *reader"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "n",
                        "type": "unsigned",
                        "definition": [
                            "unsigned n"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HLIT",
                        "type": "unsigned",
                        "definition": [
                            "unsigned HLIT"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HDIST",
                        "type": "unsigned",
                        "definition": [
                            "unsigned HDIST"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HCLEN",
                        "type": "unsigned",
                        "definition": [
                            "unsigned HCLEN"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_ll",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *bitlen_ll = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_ll_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int bitlen_ll_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_d",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *bitlen_d = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_d_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int bitlen_d_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_cl",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *bitlen_cl = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_cl_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int bitlen_cl_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_cl",
                        "type": "HuffmanTree",
                        "definition": [
                            "HuffmanTree tree_cl"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "inflateHuffmanBlock",
            "header": "",
            "params": [
                "ucvector *out",
                "LodePNGBitReader *reader",
                "unsigned btype",
                "size_t max_output_size"
            ],
            "definition": "static unsigned inflateHuffmanBlock(ucvector *out, LodePNGBitReader *reader, unsigned btype, size_t max_output_size)\n{\n  unsigned error = 0;\n  HuffmanTree tree_ll;\n  HuffmanTree tree_d;\n  const size_t reserved_size = 260;\n  int done = 0;\n  if (!ucvector_reserve(out, out->size + reserved_size))\n  {\n    return 83;\n  }\n  HuffmanTree_init(&tree_ll);\n  HuffmanTree_init(&tree_d);\n  if (btype == 1)\n  {\n    error = getTreeInflateFixed(&tree_ll, &tree_d);\n  }\n  else\n    error = getTreeInflateDynamic(&tree_ll, &tree_d, reader);\n  while ((!error) && (!done))\n  {\n    helper_inflateHuffmanBlock_1(&error, &done, out, reader, max_output_size, tree_ll, tree_d, reserved_size);\n  }\n\n  HuffmanTree_cleanup(&tree_ll);\n  HuffmanTree_cleanup(&tree_d);\n  return error;\n}\n\n",
            "calle": [
                "HuffmanTree_cleanup",
                "HuffmanTree_init",
                "getTreeInflateDynamic",
                "getTreeInflateFixed",
                "helper_inflateHuffmanBlock_1",
                "ucvector_reserve"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "reader",
                        "type": "LodePNGBitReader *",
                        "definition": [
                            "LodePNGBitReader *reader"
                        ]
                    },
                    {
                        "path": null,
                        "name": "btype",
                        "type": "unsigned",
                        "definition": [
                            "unsigned btype"
                        ]
                    },
                    {
                        "path": null,
                        "name": "max_output_size",
                        "type": "size_t",
                        "definition": [
                            "size_t max_output_size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_ll",
                        "type": "HuffmanTree",
                        "definition": [
                            "HuffmanTree tree_ll"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_d",
                        "type": "HuffmanTree",
                        "definition": [
                            "HuffmanTree tree_d"
                        ]
                    },
                    {
                        "path": null,
                        "name": "reserved_size",
                        "type": "const size_t",
                        "definition": [
                            "const size_t reserved_size = 260"
                        ]
                    },
                    {
                        "path": null,
                        "name": "done",
                        "type": "int",
                        "definition": [
                            "int done = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "inflateNoCompression",
            "header": "",
            "params": [
                "ucvector *out",
                "LodePNGBitReader *reader",
                "const LodePNGDecompressSettings *settings"
            ],
            "definition": "static unsigned inflateNoCompression(ucvector *out, LodePNGBitReader *reader, const LodePNGDecompressSettings *settings)\n{\n  size_t bytepos;\n  size_t size = reader->size;\n  unsigned LEN;\n  unsigned NLEN;\n  unsigned error = 0;\n  bytepos = (reader->bp + 7u) >> 3u;\n  if ((bytepos + 4) >= size)\n  {\n    return 52;\n  }\n  LEN = ((unsigned) reader->data[bytepos]) + (((unsigned) reader->data[bytepos + 1]) << 8u);\n  bytepos += 2;\n  NLEN = ((unsigned) reader->data[bytepos]) + (((unsigned) reader->data[bytepos + 1]) << 8u);\n  bytepos += 2;\n  if ((!settings->ignore_nlen) && ((LEN + NLEN) != 65535))\n  {\n    return 21;\n  }\n  if (!ucvector_resize(out, out->size + LEN))\n  {\n    return 83;\n  }\n  if ((bytepos + LEN) > size)\n  {\n    return 23;\n  }\n  if (LEN)\n  {\n    lodepng_memcpy((out->data + out->size) - LEN, reader->data + bytepos, LEN);\n    bytepos += LEN;\n  }\n  reader->bp = bytepos << 3u;\n  return error;\n}\n\n",
            "calle": [
                "lodepng_memcpy",
                "ucvector_resize"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "reader",
                        "type": "LodePNGBitReader *",
                        "definition": [
                            "LodePNGBitReader *reader"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGDecompressSettings *",
                        "definition": [
                            "const LodePNGDecompressSettings *settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bytepos",
                        "type": "size_t",
                        "definition": [
                            "size_t bytepos"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size = reader->size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "LEN",
                        "type": "unsigned",
                        "definition": [
                            "unsigned LEN"
                        ]
                    },
                    {
                        "path": null,
                        "name": "NLEN",
                        "type": "unsigned",
                        "definition": [
                            "unsigned NLEN"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_inflatev",
            "header": "",
            "params": [
                "ucvector *out",
                "const unsigned char *in",
                "size_t insize",
                "const LodePNGDecompressSettings *settings"
            ],
            "definition": "static unsigned lodepng_inflatev(ucvector *out, const unsigned char *in, size_t insize, const LodePNGDecompressSettings *settings)\n{\n  unsigned BFINAL = 0;\n  LodePNGBitReader reader;\n  unsigned error = LodePNGBitReader_init(&reader, in, insize);\n  if (error)\n  {\n    return error;\n  }\n  while (!BFINAL)\n  {\n    unsigned BTYPE;\n    if ((reader.bitsize - reader.bp) < 3)\n    {\n      return 52;\n    }\n    ensureBits9(&reader, 3);\n    BFINAL = readBits(&reader, 1);\n    BTYPE = readBits(&reader, 2);\n    if (BTYPE == 3)\n    {\n      return 20;\n    }\n    else\n      if (BTYPE == 0)\n    {\n      error = inflateNoCompression(out, &reader, settings);\n    }\n    else\n      error = inflateHuffmanBlock(out, &reader, BTYPE, settings->max_output_size);\n    if (((!error) && settings->max_output_size) && (out->size > settings->max_output_size))\n    {\n      error = 109;\n    }\n    if (error)\n    {\n      break;\n    }\n  }\n\n  return error;\n}\n\n",
            "calle": [
                "LodePNGBitReader_init",
                "ensureBits9",
                "inflateHuffmanBlock",
                "inflateNoCompression",
                "readBits"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGDecompressSettings *",
                        "definition": [
                            "const LodePNGDecompressSettings *settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "BFINAL",
                        "type": "unsigned",
                        "definition": [
                            "unsigned BFINAL = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "reader",
                        "type": "LodePNGBitReader",
                        "definition": [
                            "LodePNGBitReader reader"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = LodePNGBitReader_init(&reader, in, insize)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "BTYPE",
                        "type": "unsigned",
                        "definition": [
                            "unsigned BTYPE"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "inflatev",
            "header": "",
            "params": [
                "ucvector *out",
                "const unsigned char *in",
                "size_t insize",
                "const LodePNGDecompressSettings *settings"
            ],
            "definition": "static unsigned inflatev(ucvector *out, const unsigned char *in, size_t insize, const LodePNGDecompressSettings *settings)\n{\n  if (settings->custom_inflate)\n  {\n    unsigned error = settings->custom_inflate(&out->data, &out->size, in, insize, settings);\n    out->allocsize = out->size;\n    if (error)\n    {\n      error = 110;\n      if (settings->max_output_size && (out->size > settings->max_output_size))\n      {\n        error = 109;\n      }\n    }\n    return error;\n  }\n  else\n  {\n    return lodepng_inflatev(out, in, insize, settings);\n  }\n}\n\n",
            "calle": [
                "lodepng_inflatev",
                "settings->custom_inflate"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGDecompressSettings *",
                        "definition": [
                            "const LodePNGDecompressSettings *settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = settings->custom_inflate(&out->data, &out->size, in, insize, settings)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "searchCodeIndex",
            "header": "",
            "params": [
                "const unsigned *array",
                "size_t array_size",
                "size_t value"
            ],
            "definition": "static size_t searchCodeIndex(const unsigned *array, size_t array_size, size_t value)\n{\n  size_t left = 1;\n  size_t right = array_size - 1;\n  while (left <= right)\n  {\n    size_t mid = (left + right) >> 1;\n    if (array[mid] >= value)\n    {\n      right = mid - 1;\n    }\n    else\n      left = mid + 1;\n  }\n\n  if ((left >= array_size) || (array[left] > value))\n  {\n    left -= 1;\n  }\n  return left;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "array",
                        "type": "const unsigned *",
                        "definition": [
                            "const unsigned *array"
                        ]
                    },
                    {
                        "path": null,
                        "name": "array_size",
                        "type": "size_t",
                        "definition": [
                            "size_t array_size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "value",
                        "type": "size_t",
                        "definition": [
                            "size_t value"
                        ]
                    },
                    {
                        "path": null,
                        "name": "left",
                        "type": "size_t",
                        "definition": [
                            "size_t left = 1"
                        ]
                    },
                    {
                        "path": null,
                        "name": "right",
                        "type": "size_t",
                        "definition": [
                            "size_t right = array_size - 1"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mid",
                        "type": "size_t",
                        "definition": [
                            "size_t mid = (left + right) >> 1"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addLengthDistance",
            "header": "",
            "params": [
                "uivector *values",
                "size_t length",
                "size_t distance"
            ],
            "definition": "static void addLengthDistance(uivector *values, size_t length, size_t distance)\n{\n  unsigned length_code = (unsigned) searchCodeIndex(LENGTHBASE, 29, length);\n  unsigned extra_length = (unsigned) (length - LENGTHBASE[length_code]);\n  unsigned dist_code = (unsigned) searchCodeIndex(DISTANCEBASE, 30, distance);\n  unsigned extra_distance = (unsigned) (distance - DISTANCEBASE[dist_code]);\n  size_t pos = values->size;\n  unsigned ok = uivector_resize(values, values->size + 4);\n  if (ok)\n  {\n    values->data[pos + 0] = length_code + 257;\n    values->data[pos + 1] = extra_length;\n    values->data[pos + 2] = dist_code;\n    values->data[pos + 3] = extra_distance;\n  }\n}\n\n",
            "calle": [
                "searchCodeIndex",
                "uivector_resize"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "values",
                        "type": "uivector *",
                        "definition": [
                            "uivector *values"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "size_t",
                        "definition": [
                            "size_t length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "distance",
                        "type": "size_t",
                        "definition": [
                            "size_t distance"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length_code",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length_code = (unsigned) searchCodeIndex(LENGTHBASE, 29, length)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "extra_length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned extra_length = (unsigned) (length - LENGTHBASE[length_code])"
                        ]
                    },
                    {
                        "path": null,
                        "name": "dist_code",
                        "type": "unsigned",
                        "definition": [
                            "unsigned dist_code = (unsigned) searchCodeIndex(DISTANCEBASE, 30, distance)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "extra_distance",
                        "type": "unsigned",
                        "definition": [
                            "unsigned extra_distance = (unsigned) (distance - DISTANCEBASE[dist_code])"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pos",
                        "type": "size_t",
                        "definition": [
                            "size_t pos = values->size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ok",
                        "type": "unsigned",
                        "definition": [
                            "unsigned ok = uivector_resize(values, values->size + 4)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "LENGTHBASE",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "DISTANCEBASE",
                        "type": "None",
                        "definition": []
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "hash_init",
            "header": "",
            "params": [
                "Hash *hash",
                "unsigned windowsize"
            ],
            "definition": "static unsigned hash_init(Hash *hash, unsigned windowsize)\n{\n  unsigned i;\n  hash->head = (int *) lodepng_malloc((sizeof(int)) * HASH_NUM_VALUES);\n  hash->val = (int *) lodepng_malloc((sizeof(int)) * windowsize);\n  hash->chain = (unsigned short *) lodepng_malloc((sizeof(unsigned short)) * windowsize);\n  hash->zeros = (unsigned short *) lodepng_malloc((sizeof(unsigned short)) * windowsize);\n  hash->headz = (int *) lodepng_malloc((sizeof(int)) * (MAX_SUPPORTED_DEFLATE_LENGTH + 1));\n  hash->chainz = (unsigned short *) lodepng_malloc((sizeof(unsigned short)) * windowsize);\n  if ((((((!hash->head) || (!hash->chain)) || (!hash->val)) || (!hash->headz)) || (!hash->chainz)) || (!hash->zeros))\n  {\n    return 83;\n  }\n  for (i = 0; i != HASH_NUM_VALUES; i += 1)\n    hash->head[i] = -1;\n\n  for (i = 0; i != windowsize; i += 1)\n    hash->val[i] = -1;\n\n  for (i = 0; i != windowsize; i += 1)\n    hash->chain[i] = i;\n\n  for (i = 0; i <= MAX_SUPPORTED_DEFLATE_LENGTH; i += 1)\n    hash->headz[i] = -1;\n\n  for (i = 0; i != windowsize; i += 1)\n    hash->chainz[i] = i;\n\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_malloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "hash",
                        "type": "Hash *",
                        "definition": [
                            "Hash *hash"
                        ]
                    },
                    {
                        "path": null,
                        "name": "windowsize",
                        "type": "unsigned",
                        "definition": [
                            "unsigned windowsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HASH_NUM_VALUES",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "MAX_SUPPORTED_DEFLATE_LENGTH",
                        "type": "None",
                        "definition": []
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "hash_cleanup",
            "header": "",
            "params": [
                "Hash *hash"
            ],
            "definition": "static void hash_cleanup(Hash *hash)\n{\n  lodepng_free(hash->head);\n  lodepng_free(hash->val);\n  lodepng_free(hash->chain);\n  lodepng_free(hash->zeros);\n  lodepng_free(hash->headz);\n  lodepng_free(hash->chainz);\n}\n\n",
            "calle": [
                "lodepng_free"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "hash",
                        "type": "Hash *",
                        "definition": [
                            "Hash *hash"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "getHash",
            "header": "",
            "params": [
                "const unsigned char *data",
                "size_t size",
                "size_t pos"
            ],
            "definition": "static unsigned getHash(const unsigned char *data, size_t size, size_t pos)\n{\n  unsigned result = 0;\n  if ((pos + 2) < size)\n  {\n    result ^= ((unsigned) data[pos + 0]) << 0u;\n    result ^= ((unsigned) data[pos + 1]) << 4u;\n    result ^= ((unsigned) data[pos + 2]) << 8u;\n  }\n  else\n  {\n    size_t amount;\n    size_t i;\n    if (pos >= size)\n    {\n      return 0;\n    }\n    amount = size - pos;\n    for (i = 0; i != amount; i += 1)\n      result ^= ((unsigned) data[pos + i]) << (i * 8u);\n\n  }\n  return result & HASH_BIT_MASK;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pos",
                        "type": "size_t",
                        "definition": [
                            "size_t pos"
                        ]
                    },
                    {
                        "path": null,
                        "name": "result",
                        "type": "unsigned",
                        "definition": [
                            "unsigned result = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "amount",
                        "type": "size_t",
                        "definition": [
                            "size_t amount"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HASH_BIT_MASK",
                        "type": "None",
                        "definition": []
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "countZeros",
            "header": "",
            "params": [
                "const unsigned char *data",
                "size_t size",
                "size_t pos"
            ],
            "definition": "static unsigned countZeros(const unsigned char *data, size_t size, size_t pos)\n{\n  unsigned int data_idx = 0;\n  const unsigned char *start = (&data[data_idx]) + pos;\n  const unsigned char *end = start + MAX_SUPPORTED_DEFLATE_LENGTH;\n  unsigned int end_idx = 0;\n  if ((&end[end_idx]) > ((&data[data_idx]) + size))\n  {\n    end_idx = (&data[data_idx]) + size;\n  }\n  data_idx = start;\n  data_idx += 1;\n  data_idx += 1;\n  while (((&data[data_idx]) != (&end[end_idx])) && (data[data_idx] == 0))\n    ++(&data[data_idx]);\n\n  return (unsigned) ((&data[data_idx]) - start);\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pos",
                        "type": "size_t",
                        "definition": [
                            "size_t pos"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int data_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "start",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *start = (&data[data_idx]) + pos"
                        ]
                    },
                    {
                        "path": null,
                        "name": "end",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *end = start + MAX_SUPPORTED_DEFLATE_LENGTH"
                        ]
                    },
                    {
                        "path": null,
                        "name": "end_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int end_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "MAX_SUPPORTED_DEFLATE_LENGTH",
                        "type": "None",
                        "definition": []
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "updateHashChain",
            "header": "",
            "params": [
                "Hash *hash",
                "size_t wpos",
                "unsigned hashval",
                "unsigned short numzeros"
            ],
            "definition": "static void updateHashChain(Hash *hash, size_t wpos, unsigned hashval, unsigned short numzeros)\n{\n  hash->val[wpos] = (int) hashval;\n  if (hash->head[hashval] != (-1))\n  {\n    hash->chain[wpos] = hash->head[hashval];\n  }\n  hash->head[hashval] = (int) wpos;\n  hash->zeros[wpos] = numzeros;\n  if (hash->headz[numzeros] != (-1))\n  {\n    hash->chainz[wpos] = hash->headz[numzeros];\n  }\n  hash->headz[numzeros] = (int) wpos;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "hash",
                        "type": "Hash *",
                        "definition": [
                            "Hash *hash"
                        ]
                    },
                    {
                        "path": null,
                        "name": "wpos",
                        "type": "size_t",
                        "definition": [
                            "size_t wpos"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hashval",
                        "type": "unsigned",
                        "definition": [
                            "unsigned hashval"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numzeros",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short numzeros"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "encodeLZ77",
            "header": "",
            "params": [
                "uivector *out",
                "Hash *hash",
                "const unsigned char *in",
                "size_t inpos",
                "size_t insize",
                "unsigned windowsize",
                "unsigned minmatch",
                "unsigned nicematch",
                "unsigned lazymatching"
            ],
            "definition": "static unsigned encodeLZ77(uivector *out, Hash *hash, const unsigned char *in, size_t inpos, size_t insize, unsigned windowsize, unsigned minmatch, unsigned nicematch, unsigned lazymatching)\n{\n  size_t pos;\n  unsigned i;\n  unsigned error = 0;\n  unsigned maxchainlength = (windowsize >= 8192) ? (windowsize) : (windowsize / 8u);\n  unsigned maxlazymatch = (windowsize >= 8192) ? (MAX_SUPPORTED_DEFLATE_LENGTH) : (64);\n  unsigned usezeros = 1;\n  unsigned numzeros = 0;\n  unsigned offset;\n  unsigned length;\n  unsigned lazy = 0;\n  unsigned lazylength = 0;\n  unsigned lazyoffset = 0;\n  unsigned hashval;\n  unsigned current_offset;\n  unsigned current_length;\n  unsigned prev_offset;\n  const unsigned char *lastptr;\n  unsigned int lastptr_idx = 0;\n  const unsigned char *foreptr;\n  unsigned int foreptr_idx = 0;\n  const unsigned char *backptr;\n  unsigned int backptr_idx = 0;\n  unsigned hashpos;\n  if ((windowsize == 0) || (windowsize > 32768))\n  {\n    return 60;\n  }\n  if ((windowsize & (windowsize - 1)) != 0)\n  {\n    return 90;\n  }\n  if (nicematch > MAX_SUPPORTED_DEFLATE_LENGTH)\n  {\n    nicematch = MAX_SUPPORTED_DEFLATE_LENGTH;\n  }\n  for (pos = inpos; pos < insize; pos += 1)\n  {\n    helper_encodeLZ77_1(&pos, &i, &error, &numzeros, &offset, &length, &lazy, &lazylength, &lazyoffset, &hashval, &current_offset, &current_length, &prev_offset, &lastptr_idx, &foreptr_idx, &backptr_idx, &hashpos, out, hash, in, insize, windowsize, minmatch, nicematch, lazymatching, maxchainlength, maxlazymatch, usezeros, lastptr, foreptr, backptr);\n  }\n\n  return error;\n}\n\n",
            "calle": [
                "helper_encodeLZ77_1"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "uivector *",
                        "definition": [
                            "uivector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hash",
                        "type": "Hash *",
                        "definition": [
                            "Hash *hash"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "inpos",
                        "type": "size_t",
                        "definition": [
                            "size_t inpos"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "windowsize",
                        "type": "unsigned",
                        "definition": [
                            "unsigned windowsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "minmatch",
                        "type": "unsigned",
                        "definition": [
                            "unsigned minmatch"
                        ]
                    },
                    {
                        "path": null,
                        "name": "nicematch",
                        "type": "unsigned",
                        "definition": [
                            "unsigned nicematch"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazymatching",
                        "type": "unsigned",
                        "definition": [
                            "unsigned lazymatching"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pos",
                        "type": "size_t",
                        "definition": [
                            "size_t pos"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "maxchainlength",
                        "type": "unsigned",
                        "definition": [
                            "unsigned maxchainlength = (windowsize >= 8192) ? (windowsize) : (windowsize / 8u)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "maxlazymatch",
                        "type": "unsigned",
                        "definition": [
                            "unsigned maxlazymatch = (windowsize >= 8192) ? (MAX_SUPPORTED_DEFLATE_LENGTH) : (64)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "usezeros",
                        "type": "unsigned",
                        "definition": [
                            "unsigned usezeros = 1"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numzeros",
                        "type": "unsigned",
                        "definition": [
                            "unsigned numzeros = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "offset",
                        "type": "unsigned",
                        "definition": [
                            "unsigned offset"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazy",
                        "type": "unsigned",
                        "definition": [
                            "unsigned lazy = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazylength",
                        "type": "unsigned",
                        "definition": [
                            "unsigned lazylength = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazyoffset",
                        "type": "unsigned",
                        "definition": [
                            "unsigned lazyoffset = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hashval",
                        "type": "unsigned",
                        "definition": [
                            "unsigned hashval"
                        ]
                    },
                    {
                        "path": null,
                        "name": "current_offset",
                        "type": "unsigned",
                        "definition": [
                            "unsigned current_offset"
                        ]
                    },
                    {
                        "path": null,
                        "name": "current_length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned current_length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prev_offset",
                        "type": "unsigned",
                        "definition": [
                            "unsigned prev_offset"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lastptr",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *lastptr"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lastptr_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int lastptr_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "foreptr",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *foreptr"
                        ]
                    },
                    {
                        "path": null,
                        "name": "foreptr_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int foreptr_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "backptr",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *backptr"
                        ]
                    },
                    {
                        "path": null,
                        "name": "backptr_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int backptr_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hashpos",
                        "type": "unsigned",
                        "definition": [
                            "unsigned hashpos"
                        ]
                    },
                    {
                        "path": null,
                        "name": "MAX_SUPPORTED_DEFLATE_LENGTH",
                        "type": "None",
                        "definition": []
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "deflateNoCompression",
            "header": "",
            "params": [
                "ucvector *out",
                "const unsigned char *data",
                "size_t datasize"
            ],
            "definition": "static unsigned deflateNoCompression(ucvector *out, const unsigned char *data, size_t datasize)\n{\n  size_t i;\n  size_t numdeflateblocks = (datasize + 65534u) / 65535u;\n  unsigned datapos = 0;\n  for (i = 0; i != numdeflateblocks; i += 1)\n  {\n    unsigned BFINAL;\n    unsigned BTYPE;\n    unsigned LEN;\n    unsigned NLEN;\n    unsigned char firstbyte;\n    size_t pos = out->size;\n    BFINAL = i == (numdeflateblocks - 1);\n    BTYPE = 0;\n    LEN = 65535;\n    if ((datasize - datapos) < 65535u)\n    {\n      LEN = ((unsigned) datasize) - datapos;\n    }\n    NLEN = 65535 - LEN;\n    if (!ucvector_resize(out, (out->size + LEN) + 5))\n    {\n      return 83;\n    }\n    firstbyte = (unsigned char) ((BFINAL + ((BTYPE & 1u) << 1u)) + ((BTYPE & 2u) << 1u));\n    out->data[pos + 0] = firstbyte;\n    out->data[pos + 1] = (unsigned char) (LEN & 255);\n    out->data[pos + 2] = (unsigned char) (LEN >> 8u);\n    out->data[pos + 3] = (unsigned char) (NLEN & 255);\n    out->data[pos + 4] = (unsigned char) (NLEN >> 8u);\n    lodepng_memcpy((out->data + pos) + 5, data + datapos, LEN);\n    datapos += LEN;\n  }\n\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_memcpy",
                "ucvector_resize"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "datasize",
                        "type": "size_t",
                        "definition": [
                            "size_t datasize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numdeflateblocks",
                        "type": "size_t",
                        "definition": [
                            "size_t numdeflateblocks = (datasize + 65534u) / 65535u"
                        ]
                    },
                    {
                        "path": null,
                        "name": "datapos",
                        "type": "unsigned",
                        "definition": [
                            "unsigned datapos = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "BFINAL",
                        "type": "unsigned",
                        "definition": [
                            "unsigned BFINAL"
                        ]
                    },
                    {
                        "path": null,
                        "name": "BTYPE",
                        "type": "unsigned",
                        "definition": [
                            "unsigned BTYPE"
                        ]
                    },
                    {
                        "path": null,
                        "name": "LEN",
                        "type": "unsigned",
                        "definition": [
                            "unsigned LEN"
                        ]
                    },
                    {
                        "path": null,
                        "name": "NLEN",
                        "type": "unsigned",
                        "definition": [
                            "unsigned NLEN"
                        ]
                    },
                    {
                        "path": null,
                        "name": "firstbyte",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char firstbyte"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pos",
                        "type": "size_t",
                        "definition": [
                            "size_t pos = out->size"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "writeLZ77data",
            "header": "",
            "params": [
                "LodePNGBitWriter *writer",
                "const uivector *lz77_encoded",
                "const HuffmanTree *tree_ll",
                "const HuffmanTree *tree_d"
            ],
            "definition": "static void writeLZ77data(LodePNGBitWriter *writer, const uivector *lz77_encoded, const HuffmanTree *tree_ll, const HuffmanTree *tree_d)\n{\n  size_t i = 0;\n  for (i = 0; i != lz77_encoded->size; i += 1)\n  {\n    unsigned val = lz77_encoded->data[i];\n    writeBitsReversed(writer, tree_ll->codes[val], tree_ll->lengths[val]);\n    if (val > 256)\n    {\n      unsigned length_index = val - 257;\n      unsigned n_length_extra_bits = LENGTHEXTRA[length_index];\n      i += 1;\n      unsigned length_extra_bits = lz77_encoded->data[i];\n      i += 1;\n      unsigned distance_code = lz77_encoded->data[i];\n      unsigned distance_index = distance_code;\n      unsigned n_distance_extra_bits = DISTANCEEXTRA[distance_index];\n      i += 1;\n      unsigned distance_extra_bits = lz77_encoded->data[i];\n      writeBits(writer, length_extra_bits, n_length_extra_bits);\n      writeBitsReversed(writer, tree_d->codes[distance_code], tree_d->lengths[distance_code]);\n      writeBits(writer, distance_extra_bits, n_distance_extra_bits);\n    }\n  }\n\n}\n\n",
            "calle": [
                "writeBits",
                "writeBitsReversed"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "writer",
                        "type": "LodePNGBitWriter *",
                        "definition": [
                            "LodePNGBitWriter *writer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lz77_encoded",
                        "type": "const uivector *",
                        "definition": [
                            "const uivector *lz77_encoded"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_ll",
                        "type": "const HuffmanTree *",
                        "definition": [
                            "const HuffmanTree *tree_ll"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_d",
                        "type": "const HuffmanTree *",
                        "definition": [
                            "const HuffmanTree *tree_d"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "val",
                        "type": "unsigned",
                        "definition": [
                            "unsigned val = lz77_encoded->data[i]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length_index",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length_index = val - 257"
                        ]
                    },
                    {
                        "path": null,
                        "name": "n_length_extra_bits",
                        "type": "unsigned",
                        "definition": [
                            "unsigned n_length_extra_bits = LENGTHEXTRA[length_index]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length_extra_bits",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length_extra_bits = lz77_encoded->data[i]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "distance_code",
                        "type": "unsigned",
                        "definition": [
                            "unsigned distance_code = lz77_encoded->data[i]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "distance_index",
                        "type": "unsigned",
                        "definition": [
                            "unsigned distance_index = distance_code"
                        ]
                    },
                    {
                        "path": null,
                        "name": "n_distance_extra_bits",
                        "type": "unsigned",
                        "definition": [
                            "unsigned n_distance_extra_bits = DISTANCEEXTRA[distance_index]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "distance_extra_bits",
                        "type": "unsigned",
                        "definition": [
                            "unsigned distance_extra_bits = lz77_encoded->data[i]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "LENGTHEXTRA",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "DISTANCEEXTRA",
                        "type": "None",
                        "definition": []
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "deflateDynamic",
            "header": "",
            "params": [
                "LodePNGBitWriter *writer",
                "Hash *hash",
                "const unsigned char *data",
                "size_t datapos",
                "size_t dataend",
                "const LodePNGCompressSettings *settings",
                "unsigned final"
            ],
            "definition": "static unsigned deflateDynamic(LodePNGBitWriter *writer, Hash *hash, const unsigned char *data, size_t datapos, size_t dataend, const LodePNGCompressSettings *settings, unsigned final)\n{\n  unsigned error = 0;\n  uivector lz77_encoded;\n  HuffmanTree tree_ll;\n  HuffmanTree tree_d;\n  HuffmanTree tree_cl;\n  unsigned *frequencies_ll = 0;\n  unsigned int frequencies_ll_idx = 0;\n  unsigned *frequencies_d = 0;\n  unsigned int frequencies_d_idx = 0;\n  unsigned *frequencies_cl = 0;\n  unsigned int frequencies_cl_idx = 0;\n  unsigned *bitlen_lld = 0;\n  unsigned int bitlen_lld_idx = 0;\n  unsigned *bitlen_lld_e = 0;\n  unsigned int bitlen_lld_e_idx = 0;\n  size_t datasize = dataend - datapos;\n  unsigned BFINAL = final;\n  size_t i;\n  size_t numcodes_ll;\n  size_t numcodes_d;\n  size_t numcodes_lld;\n  size_t numcodes_lld_e;\n  size_t numcodes_cl;\n  unsigned HLIT;\n  unsigned HDIST;\n  unsigned HCLEN;\n  uivector_init(&lz77_encoded);\n  HuffmanTree_init(&tree_ll);\n  HuffmanTree_init(&tree_d);\n  HuffmanTree_init(&tree_cl);\n  frequencies_ll_idx = (unsigned *) lodepng_malloc(286 * (sizeof(*frequencies_ll_idx)));\n  frequencies_d_idx = (unsigned *) lodepng_malloc(30 * (sizeof(*frequencies_d_idx)));\n  frequencies_cl_idx = (unsigned *) lodepng_malloc(19 * (sizeof(*frequencies_cl_idx)));\n  if (((!(&frequencies_ll[frequencies_ll_idx])) || (!(&frequencies_d[frequencies_d_idx]))) || (!(&frequencies_cl[frequencies_cl_idx])))\n  {\n    error = 83;\n  }\n  while (!error)\n  {\n    helper_deflateDynamic_1(&datapos, &error, &lz77_encoded, &frequencies_ll_idx, &frequencies_d_idx, &frequencies_cl_idx, &bitlen_lld_idx, &bitlen_lld_e_idx, &i, &numcodes_ll, &numcodes_d, &numcodes_lld, &numcodes_lld_e, &numcodes_cl, &HLIT, &HDIST, &HCLEN, writer, hash, data, dataend, settings, tree_ll, tree_d, tree_cl, frequencies_ll, frequencies_d, frequencies_cl, bitlen_lld, bitlen_lld_e, datasize, BFINAL);\n  }\n\n  uivector_cleanup(&lz77_encoded);\n  HuffmanTree_cleanup(&tree_ll);\n  HuffmanTree_cleanup(&tree_d);\n  HuffmanTree_cleanup(&tree_cl);\n  lodepng_free(frequencies_ll);\n  lodepng_free(frequencies_d);\n  lodepng_free(frequencies_cl);\n  lodepng_free(bitlen_lld);\n  lodepng_free(bitlen_lld_e);\n  return error;\n}\n\n",
            "calle": [
                "HuffmanTree_cleanup",
                "HuffmanTree_init",
                "helper_deflateDynamic_1",
                "lodepng_free",
                "lodepng_malloc",
                "uivector_cleanup",
                "uivector_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "writer",
                        "type": "LodePNGBitWriter *",
                        "definition": [
                            "LodePNGBitWriter *writer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hash",
                        "type": "Hash *",
                        "definition": [
                            "Hash *hash"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "datapos",
                        "type": "size_t",
                        "definition": [
                            "size_t datapos"
                        ]
                    },
                    {
                        "path": null,
                        "name": "dataend",
                        "type": "size_t",
                        "definition": [
                            "size_t dataend"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGCompressSettings *",
                        "definition": [
                            "const LodePNGCompressSettings *settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "final",
                        "type": "unsigned",
                        "definition": [
                            "unsigned final"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lz77_encoded",
                        "type": "uivector",
                        "definition": [
                            "uivector lz77_encoded"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_ll",
                        "type": "HuffmanTree",
                        "definition": [
                            "HuffmanTree tree_ll"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_d",
                        "type": "HuffmanTree",
                        "definition": [
                            "HuffmanTree tree_d"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_cl",
                        "type": "HuffmanTree",
                        "definition": [
                            "HuffmanTree tree_cl"
                        ]
                    },
                    {
                        "path": null,
                        "name": "frequencies_ll",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *frequencies_ll = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "frequencies_ll_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int frequencies_ll_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "frequencies_d",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *frequencies_d = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "frequencies_d_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int frequencies_d_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "frequencies_cl",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *frequencies_cl = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "frequencies_cl_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int frequencies_cl_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_lld",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *bitlen_lld = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_lld_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int bitlen_lld_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_lld_e",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *bitlen_lld_e = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_lld_e_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int bitlen_lld_e_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "datasize",
                        "type": "size_t",
                        "definition": [
                            "size_t datasize = dataend - datapos"
                        ]
                    },
                    {
                        "path": null,
                        "name": "BFINAL",
                        "type": "unsigned",
                        "definition": [
                            "unsigned BFINAL = final"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_ll",
                        "type": "size_t",
                        "definition": [
                            "size_t numcodes_ll"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_d",
                        "type": "size_t",
                        "definition": [
                            "size_t numcodes_d"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_lld",
                        "type": "size_t",
                        "definition": [
                            "size_t numcodes_lld"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_lld_e",
                        "type": "size_t",
                        "definition": [
                            "size_t numcodes_lld_e"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_cl",
                        "type": "size_t",
                        "definition": [
                            "size_t numcodes_cl"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HLIT",
                        "type": "unsigned",
                        "definition": [
                            "unsigned HLIT"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HDIST",
                        "type": "unsigned",
                        "definition": [
                            "unsigned HDIST"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HCLEN",
                        "type": "unsigned",
                        "definition": [
                            "unsigned HCLEN"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "deflateFixed",
            "header": "",
            "params": [
                "LodePNGBitWriter *writer",
                "Hash *hash",
                "const unsigned char *data",
                "size_t datapos",
                "size_t dataend",
                "const LodePNGCompressSettings *settings",
                "unsigned final"
            ],
            "definition": "static unsigned deflateFixed(LodePNGBitWriter *writer, Hash *hash, const unsigned char *data, size_t datapos, size_t dataend, const LodePNGCompressSettings *settings, unsigned final)\n{\n  HuffmanTree tree_ll;\n  HuffmanTree tree_d;\n  unsigned BFINAL = final;\n  unsigned error = 0;\n  size_t i;\n  HuffmanTree_init(&tree_ll);\n  HuffmanTree_init(&tree_d);\n  error = generateFixedLitLenTree(&tree_ll);\n  if (!error)\n  {\n    error = generateFixedDistanceTree(&tree_d);\n  }\n  if (!error)\n  {\n    writeBits(writer, BFINAL, 1);\n    writeBits(writer, 1, 1);\n    writeBits(writer, 0, 1);\n    if (settings->use_lz77)\n    {\n      uivector lz77_encoded;\n      uivector_init(&lz77_encoded);\n      error = encodeLZ77(&lz77_encoded, hash, data, datapos, dataend, settings->windowsize, settings->minmatch, settings->nicematch, settings->lazymatching);\n      if (!error)\n      {\n        writeLZ77data(writer, &lz77_encoded, &tree_ll, &tree_d);\n      }\n      uivector_cleanup(&lz77_encoded);\n    }\n    else\n    {\n      for (i = datapos; i < dataend; i += 1)\n      {\n        writeBitsReversed(writer, tree_ll.codes[data[i]], tree_ll.lengths[data[i]]);\n      }\n\n    }\n    if (!error)\n    {\n      writeBitsReversed(writer, tree_ll.codes[256], tree_ll.lengths[256]);\n    }\n  }\n  HuffmanTree_cleanup(&tree_ll);\n  HuffmanTree_cleanup(&tree_d);\n  return error;\n}\n\n",
            "calle": [
                "HuffmanTree_cleanup",
                "HuffmanTree_init",
                "encodeLZ77",
                "generateFixedDistanceTree",
                "generateFixedLitLenTree",
                "uivector_cleanup",
                "uivector_init",
                "writeBits",
                "writeBitsReversed",
                "writeLZ77data"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "writer",
                        "type": "LodePNGBitWriter *",
                        "definition": [
                            "LodePNGBitWriter *writer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hash",
                        "type": "Hash *",
                        "definition": [
                            "Hash *hash"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "datapos",
                        "type": "size_t",
                        "definition": [
                            "size_t datapos"
                        ]
                    },
                    {
                        "path": null,
                        "name": "dataend",
                        "type": "size_t",
                        "definition": [
                            "size_t dataend"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGCompressSettings *",
                        "definition": [
                            "const LodePNGCompressSettings *settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "final",
                        "type": "unsigned",
                        "definition": [
                            "unsigned final"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_ll",
                        "type": "HuffmanTree",
                        "definition": [
                            "HuffmanTree tree_ll"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_d",
                        "type": "HuffmanTree",
                        "definition": [
                            "HuffmanTree tree_d"
                        ]
                    },
                    {
                        "path": null,
                        "name": "BFINAL",
                        "type": "unsigned",
                        "definition": [
                            "unsigned BFINAL = final"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lz77_encoded",
                        "type": "uivector",
                        "definition": [
                            "uivector lz77_encoded"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_deflatev",
            "header": "",
            "params": [
                "ucvector *out",
                "const unsigned char *in",
                "size_t insize",
                "const LodePNGCompressSettings *settings"
            ],
            "definition": "static unsigned lodepng_deflatev(ucvector *out, const unsigned char *in, size_t insize, const LodePNGCompressSettings *settings)\n{\n  unsigned error = 0;\n  size_t i;\n  size_t blocksize;\n  size_t numdeflateblocks;\n  Hash hash;\n  LodePNGBitWriter writer;\n  LodePNGBitWriter_init(&writer, out);\n  if (settings->btype > 2)\n  {\n    return 61;\n  }\n  else\n    if (settings->btype == 0)\n  {\n    return deflateNoCompression(out, in, insize);\n  }\n  else\n    if (settings->btype == 1)\n  {\n    blocksize = insize;\n  }\n  else\n  {\n    blocksize = (insize / 8u) + 8;\n    if (blocksize < 65536)\n    {\n      blocksize = 65536;\n    }\n    if (blocksize > 262144)\n    {\n      blocksize = 262144;\n    }\n  }\n  numdeflateblocks = ((insize + blocksize) - 1) / blocksize;\n  if (numdeflateblocks == 0)\n  {\n    numdeflateblocks = 1;\n  }\n  error = hash_init(&hash, settings->windowsize);\n  if (!error)\n  {\n    for (i = 0; (i != numdeflateblocks) && (!error); i += 1)\n    {\n      unsigned final = i == (numdeflateblocks - 1);\n      size_t start = i * blocksize;\n      size_t end = start + blocksize;\n      if (end > insize)\n      {\n        end = insize;\n      }\n      if (settings->btype == 1)\n      {\n        error = deflateFixed(&writer, &hash, in, start, end, settings, final);\n      }\n      else\n        if (settings->btype == 2)\n      {\n        error = deflateDynamic(&writer, &hash, in, start, end, settings, final);\n      }\n    }\n\n  }\n  hash_cleanup(&hash);\n  return error;\n}\n\n",
            "calle": [
                "LodePNGBitWriter_init",
                "deflateDynamic",
                "deflateFixed",
                "deflateNoCompression",
                "hash_cleanup",
                "hash_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGCompressSettings *",
                        "definition": [
                            "const LodePNGCompressSettings *settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "blocksize",
                        "type": "size_t",
                        "definition": [
                            "size_t blocksize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numdeflateblocks",
                        "type": "size_t",
                        "definition": [
                            "size_t numdeflateblocks"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hash",
                        "type": "Hash",
                        "definition": [
                            "Hash hash"
                        ]
                    },
                    {
                        "path": null,
                        "name": "writer",
                        "type": "LodePNGBitWriter",
                        "definition": [
                            "LodePNGBitWriter writer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "final",
                        "type": "unsigned",
                        "definition": [
                            "unsigned final = i == (numdeflateblocks - 1)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "start",
                        "type": "size_t",
                        "definition": [
                            "size_t start = i * blocksize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "end",
                        "type": "size_t",
                        "definition": [
                            "size_t end = start + blocksize"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "deflate",
            "header": "",
            "params": [
                "unsigned char **out",
                "size_t *outsize",
                "const unsigned char *in",
                "size_t insize",
                "const LodePNGCompressSettings *settings"
            ],
            "definition": "static unsigned deflate(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGCompressSettings *settings)\n{\n  if (settings->custom_deflate)\n  {\n    unsigned error = settings->custom_deflate(out, outsize, in, insize, settings);\n    return (error) ? (111) : (0);\n  }\n  else\n  {\n    return lodepng_deflate(out, outsize, in, insize, settings);\n  }\n}\n\n",
            "calle": [
                "lodepng_deflate",
                "settings->custom_deflate"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outsize",
                        "type": "size_t *",
                        "definition": [
                            "size_t *outsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGCompressSettings *",
                        "definition": [
                            "const LodePNGCompressSettings *settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = settings->custom_deflate(out, outsize, in, insize, settings)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "update_adler32",
            "header": "",
            "params": [
                "unsigned adler",
                "const unsigned char *data",
                "unsigned len"
            ],
            "definition": "static unsigned update_adler32(unsigned adler, const unsigned char *data, unsigned len)\n{\n  unsigned int data_idx = 0;\n  unsigned s1 = adler & 0xffffu;\n  unsigned s2 = (adler >> 16u) & 0xffffu;\n  while (len != 0u)\n  {\n    unsigned i;\n    unsigned amount = (len > 5552u) ? (5552u) : (len);\n    len -= amount;\n    for (i = 0; i != amount; i += 1)\n    {\n      s1 += data[data_idx];\n      data_idx += 1;\n      s2 += s1;\n    }\n\n    s1 %= 65521u;\n    s2 %= 65521u;\n  }\n\n  return (s2 << 16u) | s1;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "adler",
                        "type": "unsigned",
                        "definition": [
                            "unsigned adler"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "len",
                        "type": "unsigned",
                        "definition": [
                            "unsigned len"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int data_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s1",
                        "type": "unsigned",
                        "definition": [
                            "unsigned s1 = adler & 0xffffu"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s2",
                        "type": "unsigned",
                        "definition": [
                            "unsigned s2 = (adler >> 16u) & 0xffffu"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "amount",
                        "type": "unsigned",
                        "definition": [
                            "unsigned amount = (len > 5552u) ? (5552u) : (len)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "adler32",
            "header": "",
            "params": [
                "const unsigned char *data",
                "unsigned len"
            ],
            "definition": "static unsigned adler32(const unsigned char *data, unsigned len)\n{\n  return update_adler32(1u, data, len);\n}\n\n",
            "calle": [
                "update_adler32"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "len",
                        "type": "unsigned",
                        "definition": [
                            "unsigned len"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_zlib_decompressv",
            "header": "",
            "params": [
                "ucvector *out",
                "const unsigned char *in",
                "size_t insize",
                "const LodePNGDecompressSettings *settings"
            ],
            "definition": "static unsigned lodepng_zlib_decompressv(ucvector *out, const unsigned char *in, size_t insize, const LodePNGDecompressSettings *settings)\n{\n  unsigned error = 0;\n  unsigned CM;\n  unsigned CINFO;\n  unsigned FDICT;\n  if (insize < 2)\n  {\n    return 53;\n  }\n  if ((((in[0] * 256) + in[1]) % 31) != 0)\n  {\n    return 24;\n  }\n  CM = in[0] & 15;\n  CINFO = (in[0] >> 4) & 15;\n  FDICT = (in[1] >> 5) & 1;\n  if ((CM != 8) || (CINFO > 7))\n  {\n    return 25;\n  }\n  if (FDICT != 0)\n  {\n    return 26;\n  }\n  error = inflatev(out, in + 2, insize - 2, settings);\n  if (error)\n  {\n    return error;\n  }\n  if (!settings->ignore_adler32)\n  {\n    unsigned ADLER32 = lodepng_read32bitInt(&in[insize - 4]);\n    unsigned checksum = adler32(out->data, (unsigned) out->size);\n    if (checksum != ADLER32)\n    {\n      return 58;\n    }\n  }\n  return 0;\n}\n\n",
            "calle": [
                "adler32",
                "inflatev",
                "lodepng_read32bitInt"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGDecompressSettings *",
                        "definition": [
                            "const LodePNGDecompressSettings *settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "CM",
                        "type": "unsigned",
                        "definition": [
                            "unsigned CM"
                        ]
                    },
                    {
                        "path": null,
                        "name": "CINFO",
                        "type": "unsigned",
                        "definition": [
                            "unsigned CINFO"
                        ]
                    },
                    {
                        "path": null,
                        "name": "FDICT",
                        "type": "unsigned",
                        "definition": [
                            "unsigned FDICT"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ADLER32",
                        "type": "unsigned",
                        "definition": [
                            "unsigned ADLER32 = lodepng_read32bitInt(&in[insize - 4])"
                        ]
                    },
                    {
                        "path": null,
                        "name": "checksum",
                        "type": "unsigned",
                        "definition": [
                            "unsigned checksum = adler32(out->data, (unsigned) out->size)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "zlib_decompress",
            "header": "",
            "params": [
                "unsigned char **out",
                "size_t *outsize",
                "size_t expected_size",
                "const unsigned char *in",
                "size_t insize",
                "const LodePNGDecompressSettings *settings"
            ],
            "definition": "static unsigned zlib_decompress(unsigned char **out, size_t *outsize, size_t expected_size, const unsigned char *in, size_t insize, const LodePNGDecompressSettings *settings)\n{\n  unsigned error;\n  if (settings->custom_zlib)\n  {\n    error = settings->custom_zlib(out, outsize, in, insize, settings);\n    if (error)\n    {\n      error = 110;\n      if (settings->max_output_size && ((*outsize) > settings->max_output_size))\n      {\n        error = 109;\n      }\n    }\n  }\n  else\n  {\n    ucvector v = ucvector_init(*out, *outsize);\n    if (expected_size)\n    {\n      ucvector_resize(&v, (*outsize) + expected_size);\n      v.size = *outsize;\n    }\n    error = lodepng_zlib_decompressv(&v, in, insize, settings);\n    *out = v.data;\n    *outsize = v.size;\n  }\n  return error;\n}\n\n",
            "calle": [
                "lodepng_zlib_decompressv",
                "settings->custom_zlib",
                "ucvector_init",
                "ucvector_resize"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outsize",
                        "type": "size_t *",
                        "definition": [
                            "size_t *outsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "expected_size",
                        "type": "size_t",
                        "definition": [
                            "size_t expected_size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGDecompressSettings *",
                        "definition": [
                            "const LodePNGDecompressSettings *settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error"
                        ]
                    },
                    {
                        "path": null,
                        "name": "v",
                        "type": "ucvector",
                        "definition": [
                            "ucvector v = ucvector_init(*out, *outsize)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "zlib_compress",
            "header": "",
            "params": [
                "unsigned char **out",
                "size_t *outsize",
                "const unsigned char *in",
                "size_t insize",
                "const LodePNGCompressSettings *settings"
            ],
            "definition": "static unsigned zlib_compress(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGCompressSettings *settings)\n{\n  if (settings->custom_zlib)\n  {\n    unsigned error = settings->custom_zlib(out, outsize, in, insize, settings);\n    return (error) ? (111) : (0);\n  }\n  else\n  {\n    return lodepng_zlib_compress(out, outsize, in, insize, settings);\n  }\n}\n\n",
            "calle": [
                "lodepng_zlib_compress",
                "settings->custom_zlib"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outsize",
                        "type": "size_t *",
                        "definition": [
                            "size_t *outsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGCompressSettings *",
                        "definition": [
                            "const LodePNGCompressSettings *settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = settings->custom_zlib(out, outsize, in, insize, settings)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "readBitFromReversedStream",
            "header": "",
            "params": [
                "size_t *bitpointer",
                "const unsigned char *bitstream"
            ],
            "definition": "static unsigned char readBitFromReversedStream(size_t *bitpointer, const unsigned char *bitstream)\n{\n  unsigned char result = (unsigned char) ((bitstream[(*bitpointer) >> 3] >> (7 - ((*bitpointer) & 0x7))) & 1);\n  *bitpointer += 1;\n  return result;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "bitpointer",
                        "type": "size_t *",
                        "definition": [
                            "size_t *bitpointer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitstream",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *bitstream"
                        ]
                    },
                    {
                        "path": null,
                        "name": "result",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char result = (unsigned char) ((bitstream[(*bitpointer) >> 3] >> (7 - ((*bitpointer) & 0x7))) & 1)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "readBitsFromReversedStream",
            "header": "",
            "params": [
                "size_t *bitpointer",
                "const unsigned char *bitstream",
                "size_t nbits"
            ],
            "definition": "static unsigned readBitsFromReversedStream(size_t *bitpointer, const unsigned char *bitstream, size_t nbits)\n{\n  unsigned result = 0;\n  size_t i;\n  for (i = 0; i < nbits; i += 1)\n  {\n    result <<= 1u;\n    result |= (unsigned) readBitFromReversedStream(bitpointer, bitstream);\n  }\n\n  return result;\n}\n\n",
            "calle": [
                "readBitFromReversedStream"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "bitpointer",
                        "type": "size_t *",
                        "definition": [
                            "size_t *bitpointer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitstream",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *bitstream"
                        ]
                    },
                    {
                        "path": null,
                        "name": "nbits",
                        "type": "size_t",
                        "definition": [
                            "size_t nbits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "result",
                        "type": "unsigned",
                        "definition": [
                            "unsigned result = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "setBitOfReversedStream",
            "header": "",
            "params": [
                "size_t *bitpointer",
                "unsigned char *bitstream",
                "unsigned char bit"
            ],
            "definition": "static void setBitOfReversedStream(size_t *bitpointer, unsigned char *bitstream, unsigned char bit)\n{\n  if (bit == 0)\n  {\n    bitstream[(*bitpointer) >> 3u] &= (unsigned char) (~(1u << (7u - ((*bitpointer) & 7u))));\n  }\n  else\n    bitstream[(*bitpointer) >> 3u] |= 1u << (7u - ((*bitpointer) & 7u));\n  *bitpointer += 1;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "bitpointer",
                        "type": "size_t *",
                        "definition": [
                            "size_t *bitpointer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitstream",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *bitstream"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bit",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char bit"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_chunk_init",
            "header": "",
            "params": [
                "unsigned char **chunk",
                "ucvector *out",
                "unsigned length",
                "const char *type"
            ],
            "definition": "static unsigned lodepng_chunk_init(unsigned char **chunk, ucvector *out, unsigned length, const char *type)\n{\n  size_t new_length = out->size;\n  if (lodepng_addofl(new_length, length, &new_length))\n  {\n    return 77;\n  }\n  if (lodepng_addofl(new_length, 12, &new_length))\n  {\n    return 77;\n  }\n  if (!ucvector_resize(out, new_length))\n  {\n    return 83;\n  }\n  *chunk = ((out->data + new_length) - length) - 12u;\n  lodepng_set32bitInt(*chunk, length);\n  lodepng_memcpy((*chunk) + 4, type, 4);\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_addofl",
                "lodepng_memcpy",
                "lodepng_set32bitInt",
                "ucvector_resize"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "type",
                        "type": "const char *",
                        "definition": [
                            "const char *type"
                        ]
                    },
                    {
                        "path": null,
                        "name": "new_length",
                        "type": "size_t",
                        "definition": [
                            "size_t new_length = out->size"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_chunk_createv",
            "header": "",
            "params": [
                "ucvector *out",
                "unsigned length",
                "const char *type",
                "const unsigned char *data"
            ],
            "definition": "static unsigned lodepng_chunk_createv(ucvector *out, unsigned length, const char *type, const unsigned char *data)\n{\n  unsigned char *chunk;\n  {\n    unsigned error = lodepng_chunk_init(&chunk, out, length, type);\n    if (error)\n    {\n      return error;\n    }\n  }\n  ;\n  lodepng_memcpy(chunk + 8, data, length);\n  lodepng_chunk_generate_crc(chunk);\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_chunk_generate_crc",
                "lodepng_chunk_init",
                "lodepng_memcpy"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "type",
                        "type": "const char *",
                        "definition": [
                            "const char *type"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_chunk_init(&chunk, out, length, type)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "checkColorValidity",
            "header": "",
            "params": [
                "LodePNGColorType colortype",
                "unsigned bd"
            ],
            "definition": "static unsigned checkColorValidity(LodePNGColorType colortype, unsigned bd)\n{\n  switch (colortype)\n  {\n    case LCT_GREY:\n    {\n      if (!(((((bd == 1) || (bd == 2)) || (bd == 4)) || (bd == 8)) || (bd == 16)))\n      {\n        return 37;\n      }\n      break;\n    }\n\n    case LCT_RGB:\n    {\n      if (!((bd == 8) || (bd == 16)))\n      {\n        return 37;\n      }\n      break;\n    }\n\n    case LCT_PALETTE:\n    {\n      if (!((((bd == 1) || (bd == 2)) || (bd == 4)) || (bd == 8)))\n      {\n        return 37;\n      }\n      break;\n    }\n\n    case LCT_GREY_ALPHA:\n    {\n      if (!((bd == 8) || (bd == 16)))\n      {\n        return 37;\n      }\n      break;\n    }\n\n    case LCT_RGBA:\n    {\n      if (!((bd == 8) || (bd == 16)))\n      {\n        return 37;\n      }\n      break;\n    }\n\n    case LCT_MAX_OCTET_VALUE:\n    {\n      return 31;\n    }\n\n    default:\n    {\n      return 31;\n    }\n\n  }\n\n  return 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "colortype",
                        "type": "LodePNGColorType",
                        "definition": [
                            "LodePNGColorType colortype"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bd",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bd"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "getNumColorChannels",
            "header": "",
            "params": [
                "LodePNGColorType colortype"
            ],
            "definition": "static unsigned getNumColorChannels(LodePNGColorType colortype)\n{\n  switch (colortype)\n  {\n    case LCT_GREY:\n    {\n      return 1;\n    }\n\n    case LCT_RGB:\n    {\n      return 3;\n    }\n\n    case LCT_PALETTE:\n    {\n      return 1;\n    }\n\n    case LCT_GREY_ALPHA:\n    {\n      return 2;\n    }\n\n    case LCT_RGBA:\n    {\n      return 4;\n    }\n\n    case LCT_MAX_OCTET_VALUE:\n    {\n      return 0;\n    }\n\n    default:\n    {\n      return 0;\n    }\n\n  }\n\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "colortype",
                        "type": "LodePNGColorType",
                        "definition": [
                            "LodePNGColorType colortype"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_get_bpp_lct",
            "header": "",
            "params": [
                "LodePNGColorType colortype",
                "unsigned bitdepth"
            ],
            "definition": "static unsigned lodepng_get_bpp_lct(LodePNGColorType colortype, unsigned bitdepth)\n{\n  return getNumColorChannels(colortype) * bitdepth;\n}\n\n",
            "calle": [
                "getNumColorChannels"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "colortype",
                        "type": "LodePNGColorType",
                        "definition": [
                            "LodePNGColorType colortype"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitdepth",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bitdepth"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_color_mode_alloc_palette",
            "header": "",
            "params": [
                "LodePNGColorMode *info"
            ],
            "definition": "static void lodepng_color_mode_alloc_palette(LodePNGColorMode *info)\n{\n  size_t i;\n  if (!info->palette)\n  {\n    info->palette = (unsigned char *) lodepng_malloc(1024);\n  }\n  if (!info->palette)\n  {\n    return;\n  }\n  for (i = 0; i != 256; i += 1)\n  {\n    info->palette[(i * 4) + 0] = 0;\n    info->palette[(i * 4) + 1] = 0;\n    info->palette[(i * 4) + 2] = 0;\n    info->palette[(i * 4) + 3] = 255;\n  }\n\n}\n\n",
            "calle": [
                "lodepng_malloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGColorMode *",
                        "definition": [
                            "LodePNGColorMode *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_color_mode_equal",
            "header": "",
            "params": [
                "const LodePNGColorMode *a",
                "const LodePNGColorMode *b"
            ],
            "definition": "static int lodepng_color_mode_equal(const LodePNGColorMode *a, const LodePNGColorMode *b)\n{\n  size_t i;\n  if (a->colortype != b->colortype)\n  {\n    return 0;\n  }\n  if (a->bitdepth != b->bitdepth)\n  {\n    return 0;\n  }\n  if (a->key_defined != b->key_defined)\n  {\n    return 0;\n  }\n  if (a->key_defined)\n  {\n    if (a->key_r != b->key_r)\n    {\n      return 0;\n    }\n    if (a->key_g != b->key_g)\n    {\n      return 0;\n    }\n    if (a->key_b != b->key_b)\n    {\n      return 0;\n    }\n  }\n  if (a->palettesize != b->palettesize)\n  {\n    return 0;\n  }\n  for (i = 0; i != (a->palettesize * 4); i += 1)\n  {\n    if (a->palette[i] != b->palette[i])\n    {\n      return 0;\n    }\n  }\n\n  return 1;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "a",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_get_raw_size_lct",
            "header": "",
            "params": [
                "unsigned w",
                "unsigned h",
                "LodePNGColorType colortype",
                "unsigned bitdepth"
            ],
            "definition": "static size_t lodepng_get_raw_size_lct(unsigned w, unsigned h, LodePNGColorType colortype, unsigned bitdepth)\n{\n  size_t bpp = lodepng_get_bpp_lct(colortype, bitdepth);\n  size_t n = ((size_t) w) * ((size_t) h);\n  return ((n / 8u) * bpp) + ((((n & 7u) * bpp) + 7u) / 8u);\n}\n\n",
            "calle": [
                "lodepng_get_bpp_lct"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "colortype",
                        "type": "LodePNGColorType",
                        "definition": [
                            "LodePNGColorType colortype"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitdepth",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bitdepth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "size_t",
                        "definition": [
                            "size_t bpp = lodepng_get_bpp_lct(colortype, bitdepth)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "n",
                        "type": "size_t",
                        "definition": [
                            "size_t n = ((size_t) w) * ((size_t) h)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_get_raw_size_idat",
            "header": "",
            "params": [
                "unsigned w",
                "unsigned h",
                "unsigned bpp"
            ],
            "definition": "static size_t lodepng_get_raw_size_idat(unsigned w, unsigned h, unsigned bpp)\n{\n  size_t line = ((((size_t) (w / 8u)) * bpp) + 1u) + ((((w & 7u) * bpp) + 7u) / 8u);\n  return ((size_t) h) * line;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bpp"
                        ]
                    },
                    {
                        "path": null,
                        "name": "line",
                        "type": "size_t",
                        "definition": [
                            "size_t line = ((((size_t) (w / 8u)) * bpp) + 1u) + ((((w & 7u) * bpp) + 7u) / 8u)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_pixel_overflow",
            "header": "",
            "params": [
                "unsigned w",
                "unsigned h",
                "const LodePNGColorMode *pngcolor",
                "const LodePNGColorMode *rawcolor"
            ],
            "definition": "static int lodepng_pixel_overflow(unsigned w, unsigned h, const LodePNGColorMode *pngcolor, const LodePNGColorMode *rawcolor)\n{\n  size_t bpp = (lodepng_get_bpp(pngcolor) > lodepng_get_bpp(rawcolor)) ? (lodepng_get_bpp(pngcolor)) : (lodepng_get_bpp(rawcolor));\n  size_t numpixels;\n  size_t total;\n  size_t line;\n  if (lodepng_mulofl((size_t) w, (size_t) h, &numpixels))\n  {\n    return 1;\n  }\n  if (lodepng_mulofl(numpixels, 8, &total))\n  {\n    return 1;\n  }\n  if (lodepng_mulofl((size_t) (w / 8u), bpp, &line))\n  {\n    return 1;\n  }\n  if (lodepng_addofl(line, (((w & 7u) * bpp) + 7u) / 8u, &line))\n  {\n    return 1;\n  }\n  if (lodepng_addofl(line, 5, &line))\n  {\n    return 1;\n  }\n  if (lodepng_mulofl(line, h, &total))\n  {\n    return 1;\n  }\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_addofl",
                "lodepng_get_bpp",
                "lodepng_mulofl"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pngcolor",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *pngcolor"
                        ]
                    },
                    {
                        "path": null,
                        "name": "rawcolor",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *rawcolor"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "size_t",
                        "definition": [
                            "size_t bpp = (lodepng_get_bpp(pngcolor) > lodepng_get_bpp(rawcolor)) ? (lodepng_get_bpp(pngcolor)) : (lodepng_get_bpp(rawcolor))"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numpixels",
                        "type": "size_t",
                        "definition": [
                            "size_t numpixels"
                        ]
                    },
                    {
                        "path": null,
                        "name": "total",
                        "type": "size_t",
                        "definition": [
                            "size_t total"
                        ]
                    },
                    {
                        "path": null,
                        "name": "line",
                        "type": "size_t",
                        "definition": [
                            "size_t line"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "LodePNGUnknownChunks_init",
            "header": "",
            "params": [
                "LodePNGInfo *info"
            ],
            "definition": "static void LodePNGUnknownChunks_init(LodePNGInfo *info)\n{\n  unsigned i;\n  for (i = 0; i != 3; i += 1)\n    info->unknown_chunks_data[i] = 0;\n\n  for (i = 0; i != 3; i += 1)\n    info->unknown_chunks_size[i] = 0;\n\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "LodePNGUnknownChunks_cleanup",
            "header": "",
            "params": [
                "LodePNGInfo *info"
            ],
            "definition": "static void LodePNGUnknownChunks_cleanup(LodePNGInfo *info)\n{\n  unsigned i;\n  for (i = 0; i != 3; i += 1)\n    lodepng_free(info->unknown_chunks_data[i]);\n\n}\n\n",
            "calle": [
                "lodepng_free"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "LodePNGUnknownChunks_copy",
            "header": "",
            "params": [
                "LodePNGInfo *dest",
                "const LodePNGInfo *src"
            ],
            "definition": "static unsigned LodePNGUnknownChunks_copy(LodePNGInfo *dest, const LodePNGInfo *src)\n{\n  unsigned i;\n  LodePNGUnknownChunks_cleanup(dest);\n  for (i = 0; i != 3; i += 1)\n  {\n    size_t j;\n    dest->unknown_chunks_size[i] = src->unknown_chunks_size[i];\n    dest->unknown_chunks_data[i] = (unsigned char *) lodepng_malloc(src->unknown_chunks_size[i]);\n    if ((!dest->unknown_chunks_data[i]) && dest->unknown_chunks_size[i])\n    {\n      return 83;\n    }\n    for (j = 0; j < src->unknown_chunks_size[i]; j += 1)\n    {\n      dest->unknown_chunks_data[i][j] = src->unknown_chunks_data[i][j];\n    }\n\n  }\n\n  return 0;\n}\n\n",
            "calle": [
                "LodePNGUnknownChunks_cleanup",
                "lodepng_malloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "dest",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *dest"
                        ]
                    },
                    {
                        "path": null,
                        "name": "src",
                        "type": "const LodePNGInfo *",
                        "definition": [
                            "const LodePNGInfo *src"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "size_t",
                        "definition": [
                            "size_t j"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "LodePNGText_init",
            "header": "",
            "params": [
                "LodePNGInfo *info"
            ],
            "definition": "static void LodePNGText_init(LodePNGInfo *info)\n{\n  info->text_num = 0;\n  info->text_keys = 0;\n  info->text_strings = 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "LodePNGText_cleanup",
            "header": "",
            "params": [
                "LodePNGInfo *info"
            ],
            "definition": "static void LodePNGText_cleanup(LodePNGInfo *info)\n{\n  size_t i;\n  for (i = 0; i != info->text_num; i += 1)\n  {\n    string_cleanup(&info->text_keys[i]);\n    string_cleanup(&info->text_strings[i]);\n  }\n\n  lodepng_free(info->text_keys);\n  lodepng_free(info->text_strings);\n}\n\n",
            "calle": [
                "lodepng_free",
                "string_cleanup"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "LodePNGText_copy",
            "header": "",
            "params": [
                "LodePNGInfo *dest",
                "const LodePNGInfo *source"
            ],
            "definition": "static unsigned LodePNGText_copy(LodePNGInfo *dest, const LodePNGInfo *source)\n{\n  size_t i = 0;\n  dest->text_keys = 0;\n  dest->text_strings = 0;\n  dest->text_num = 0;\n  for (i = 0; i != source->text_num; i += 1)\n  {\n    {\n      unsigned error = lodepng_add_text(dest, source->text_keys[i], source->text_strings[i]);\n      if (error)\n      {\n        return error;\n      }\n    }\n    ;\n  }\n\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_add_text"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "dest",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *dest"
                        ]
                    },
                    {
                        "path": null,
                        "name": "source",
                        "type": "const LodePNGInfo *",
                        "definition": [
                            "const LodePNGInfo *source"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_add_text(dest, source->text_keys[i], source->text_strings[i])"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_add_text_sized",
            "header": "",
            "params": [
                "LodePNGInfo *info",
                "const char *key",
                "const char *str",
                "size_t size"
            ],
            "definition": "static unsigned lodepng_add_text_sized(LodePNGInfo *info, const char *key, const char *str, size_t size)\n{\n  char **new_keys = (char **) lodepng_realloc(info->text_keys, (sizeof(char *)) * (info->text_num + 1));\n  char **new_strings = (char **) lodepng_realloc(info->text_strings, (sizeof(char *)) * (info->text_num + 1));\n  if (new_keys)\n  {\n    info->text_keys = new_keys;\n  }\n  if (new_strings)\n  {\n    info->text_strings = new_strings;\n  }\n  if ((!new_keys) || (!new_strings))\n  {\n    return 83;\n  }\n  info->text_num += 1;\n  info->text_keys[info->text_num - 1] = alloc_string(key);\n  info->text_strings[info->text_num - 1] = alloc_string_sized(str, size);\n  if ((!info->text_keys[info->text_num - 1]) || (!info->text_strings[info->text_num - 1]))\n  {\n    return 83;\n  }\n  return 0;\n}\n\n",
            "calle": [
                "alloc_string",
                "alloc_string_sized",
                "lodepng_realloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key",
                        "type": "const char *",
                        "definition": [
                            "const char *key"
                        ]
                    },
                    {
                        "path": null,
                        "name": "str",
                        "type": "const char *",
                        "definition": [
                            "const char *str"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "new_keys",
                        "type": "char **",
                        "definition": [
                            "char **new_keys = (char **) lodepng_realloc(info->text_keys, (sizeof(char *)) * (info->text_num + 1))"
                        ]
                    },
                    {
                        "path": null,
                        "name": "new_strings",
                        "type": "char **",
                        "definition": [
                            "char **new_strings = (char **) lodepng_realloc(info->text_strings, (sizeof(char *)) * (info->text_num + 1))"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "LodePNGIText_init",
            "header": "",
            "params": [
                "LodePNGInfo *info"
            ],
            "definition": "static void LodePNGIText_init(LodePNGInfo *info)\n{\n  info->itext_num = 0;\n  info->itext_keys = 0;\n  info->itext_langtags = 0;\n  info->itext_transkeys = 0;\n  info->itext_strings = 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "LodePNGIText_cleanup",
            "header": "",
            "params": [
                "LodePNGInfo *info"
            ],
            "definition": "static void LodePNGIText_cleanup(LodePNGInfo *info)\n{\n  size_t i;\n  for (i = 0; i != info->itext_num; i += 1)\n  {\n    string_cleanup(&info->itext_keys[i]);\n    string_cleanup(&info->itext_langtags[i]);\n    string_cleanup(&info->itext_transkeys[i]);\n    string_cleanup(&info->itext_strings[i]);\n  }\n\n  lodepng_free(info->itext_keys);\n  lodepng_free(info->itext_langtags);\n  lodepng_free(info->itext_transkeys);\n  lodepng_free(info->itext_strings);\n}\n\n",
            "calle": [
                "lodepng_free",
                "string_cleanup"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "LodePNGIText_copy",
            "header": "",
            "params": [
                "LodePNGInfo *dest",
                "const LodePNGInfo *source"
            ],
            "definition": "static unsigned LodePNGIText_copy(LodePNGInfo *dest, const LodePNGInfo *source)\n{\n  size_t i = 0;\n  dest->itext_keys = 0;\n  dest->itext_langtags = 0;\n  dest->itext_transkeys = 0;\n  dest->itext_strings = 0;\n  dest->itext_num = 0;\n  for (i = 0; i != source->itext_num; i += 1)\n  {\n    {\n      unsigned error = lodepng_add_itext(dest, source->itext_keys[i], source->itext_langtags[i], source->itext_transkeys[i], source->itext_strings[i]);\n      if (error)\n      {\n        return error;\n      }\n    }\n    ;\n  }\n\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_add_itext"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "dest",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *dest"
                        ]
                    },
                    {
                        "path": null,
                        "name": "source",
                        "type": "const LodePNGInfo *",
                        "definition": [
                            "const LodePNGInfo *source"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_add_itext(dest, source->itext_keys[i], source->itext_langtags[i], source->itext_transkeys[i], source->itext_strings[i])"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_add_itext_sized",
            "header": "",
            "params": [
                "LodePNGInfo *info",
                "const char *key",
                "const char *langtag",
                "const char *transkey",
                "const char *str",
                "size_t size"
            ],
            "definition": "static unsigned lodepng_add_itext_sized(LodePNGInfo *info, const char *key, const char *langtag, const char *transkey, const char *str, size_t size)\n{\n  char **new_keys = (char **) lodepng_realloc(info->itext_keys, (sizeof(char *)) * (info->itext_num + 1));\n  char **new_langtags = (char **) lodepng_realloc(info->itext_langtags, (sizeof(char *)) * (info->itext_num + 1));\n  char **new_transkeys = (char **) lodepng_realloc(info->itext_transkeys, (sizeof(char *)) * (info->itext_num + 1));\n  char **new_strings = (char **) lodepng_realloc(info->itext_strings, (sizeof(char *)) * (info->itext_num + 1));\n  if (new_keys)\n  {\n    info->itext_keys = new_keys;\n  }\n  if (new_langtags)\n  {\n    info->itext_langtags = new_langtags;\n  }\n  if (new_transkeys)\n  {\n    info->itext_transkeys = new_transkeys;\n  }\n  if (new_strings)\n  {\n    info->itext_strings = new_strings;\n  }\n  if ((((!new_keys) || (!new_langtags)) || (!new_transkeys)) || (!new_strings))\n  {\n    return 83;\n  }\n  info->itext_num += 1;\n  info->itext_keys[info->itext_num - 1] = alloc_string(key);\n  info->itext_langtags[info->itext_num - 1] = alloc_string(langtag);\n  info->itext_transkeys[info->itext_num - 1] = alloc_string(transkey);\n  info->itext_strings[info->itext_num - 1] = alloc_string_sized(str, size);\n  return 0;\n}\n\n",
            "calle": [
                "alloc_string",
                "alloc_string_sized",
                "lodepng_realloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key",
                        "type": "const char *",
                        "definition": [
                            "const char *key"
                        ]
                    },
                    {
                        "path": null,
                        "name": "langtag",
                        "type": "const char *",
                        "definition": [
                            "const char *langtag"
                        ]
                    },
                    {
                        "path": null,
                        "name": "transkey",
                        "type": "const char *",
                        "definition": [
                            "const char *transkey"
                        ]
                    },
                    {
                        "path": null,
                        "name": "str",
                        "type": "const char *",
                        "definition": [
                            "const char *str"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "new_keys",
                        "type": "char **",
                        "definition": [
                            "char **new_keys = (char **) lodepng_realloc(info->itext_keys, (sizeof(char *)) * (info->itext_num + 1))"
                        ]
                    },
                    {
                        "path": null,
                        "name": "new_langtags",
                        "type": "char **",
                        "definition": [
                            "char **new_langtags = (char **) lodepng_realloc(info->itext_langtags, (sizeof(char *)) * (info->itext_num + 1))"
                        ]
                    },
                    {
                        "path": null,
                        "name": "new_transkeys",
                        "type": "char **",
                        "definition": [
                            "char **new_transkeys = (char **) lodepng_realloc(info->itext_transkeys, (sizeof(char *)) * (info->itext_num + 1))"
                        ]
                    },
                    {
                        "path": null,
                        "name": "new_strings",
                        "type": "char **",
                        "definition": [
                            "char **new_strings = (char **) lodepng_realloc(info->itext_strings, (sizeof(char *)) * (info->itext_num + 1))"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_assign_icc",
            "header": "",
            "params": [
                "LodePNGInfo *info",
                "const char *name",
                "const unsigned char *profile",
                "unsigned profile_size"
            ],
            "definition": "static unsigned lodepng_assign_icc(LodePNGInfo *info, const char *name, const unsigned char *profile, unsigned profile_size)\n{\n  if (profile_size == 0)\n  {\n    return 100;\n  }\n  info->iccp_name = alloc_string(name);\n  info->iccp_profile = (unsigned char *) lodepng_malloc(profile_size);\n  if ((!info->iccp_name) || (!info->iccp_profile))\n  {\n    return 83;\n  }\n  lodepng_memcpy(info->iccp_profile, profile, profile_size);\n  info->iccp_profile_size = profile_size;\n  return 0;\n}\n\n",
            "calle": [
                "alloc_string",
                "lodepng_malloc",
                "lodepng_memcpy"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "name",
                        "type": "const char *",
                        "definition": [
                            "const char *name"
                        ]
                    },
                    {
                        "path": null,
                        "name": "profile",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *profile"
                        ]
                    },
                    {
                        "path": null,
                        "name": "profile_size",
                        "type": "unsigned",
                        "definition": [
                            "unsigned profile_size"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addColorBits",
            "header": "",
            "params": [
                "unsigned char *out",
                "size_t index",
                "unsigned bits",
                "unsigned in"
            ],
            "definition": "static void addColorBits(unsigned char *out, size_t index, unsigned bits, unsigned in)\n{\n  unsigned m = (bits == 1) ? (7) : ((bits == 2) ? (3) : (1));\n  unsigned p = index & m;\n  in &= (1u << bits) - 1u;\n  in = in << (bits * (m - p));\n  if (p == 0)\n  {\n    out[(index * bits) / 8u] = in;\n  }\n  else\n    out[(index * bits) / 8u] |= in;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "index",
                        "type": "size_t",
                        "definition": [
                            "size_t index"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bits",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "unsigned",
                        "definition": [
                            "unsigned in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "m",
                        "type": "unsigned",
                        "definition": [
                            "unsigned m = (bits == 1) ? (7) : ((bits == 2) ? (3) : (1))"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p",
                        "type": "unsigned",
                        "definition": [
                            "unsigned p = index & m"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "color_tree_init",
            "header": "",
            "params": [
                "ColorTree *tree"
            ],
            "definition": "static void color_tree_init(ColorTree *tree)\n{\n  lodepng_memset(tree->children, 0, 16 * (sizeof(*tree->children)));\n  tree->index = -1;\n}\n\n",
            "calle": [
                "lodepng_memset"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "tree",
                        "type": "ColorTree *",
                        "definition": [
                            "ColorTree *tree"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "color_tree_cleanup",
            "header": "",
            "params": [
                "ColorTree *tree"
            ],
            "definition": "static void color_tree_cleanup(ColorTree *tree)\n{\n  int i;\n  for (i = 0; i != 16; i += 1)\n  {\n    if (tree->children[i])\n    {\n      color_tree_cleanup(tree->children[i]);\n      lodepng_free(tree->children[i]);\n    }\n  }\n\n}\n\n",
            "calle": [
                "color_tree_cleanup",
                "lodepng_free"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "tree",
                        "type": "ColorTree *",
                        "definition": [
                            "ColorTree *tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "int",
                        "definition": [
                            "int i"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "color_tree_get",
            "header": "",
            "params": [
                "ColorTree *tree",
                "unsigned char r",
                "unsigned char g",
                "unsigned char b",
                "unsigned char a"
            ],
            "definition": "static int color_tree_get(ColorTree *tree, unsigned char r, unsigned char g, unsigned char b, unsigned char a)\n{\n  unsigned int tree_idx = 0;\n  int bit = 0;\n  for (bit = 0; bit < 8; bit += 1)\n  {\n    int i = (((8 * ((r >> bit) & 1)) + (4 * ((g >> bit) & 1))) + (2 * ((b >> bit) & 1))) + (1 * ((a >> bit) & 1));\n    if (!tree->children[i])\n    {\n      return -1;\n    }\n    else\n      tree_idx = tree_idx->children[i];\n  }\n\n  return (tree) ? (tree->index) : (-1);\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "tree",
                        "type": "ColorTree *",
                        "definition": [
                            "ColorTree *tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char g"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int tree_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bit",
                        "type": "int",
                        "definition": [
                            "int bit = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "int",
                        "definition": [
                            "int i = (((8 * ((r >> bit) & 1)) + (4 * ((g >> bit) & 1))) + (2 * ((b >> bit) & 1))) + (1 * ((a >> bit) & 1))"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "color_tree_has",
            "header": "",
            "params": [
                "ColorTree *tree",
                "unsigned char r",
                "unsigned char g",
                "unsigned char b",
                "unsigned char a"
            ],
            "definition": "static int color_tree_has(ColorTree *tree, unsigned char r, unsigned char g, unsigned char b, unsigned char a)\n{\n  return color_tree_get(tree, r, g, b, a) >= 0;\n}\n\n",
            "calle": [
                "color_tree_get"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "tree",
                        "type": "ColorTree *",
                        "definition": [
                            "ColorTree *tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char g"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char a"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "color_tree_add",
            "header": "",
            "params": [
                "ColorTree *tree",
                "unsigned char r",
                "unsigned char g",
                "unsigned char b",
                "unsigned char a",
                "unsigned index"
            ],
            "definition": "static unsigned color_tree_add(ColorTree *tree, unsigned char r, unsigned char g, unsigned char b, unsigned char a, unsigned index)\n{\n  unsigned int tree_idx = 0;\n  int bit;\n  for (bit = 0; bit < 8; bit += 1)\n  {\n    int i = (((8 * ((r >> bit) & 1)) + (4 * ((g >> bit) & 1))) + (2 * ((b >> bit) & 1))) + (1 * ((a >> bit) & 1));\n    if (!tree->children[i])\n    {\n      tree->children[i] = (ColorTree *) lodepng_malloc(sizeof(ColorTree));\n      if (!tree->children[i])\n      {\n        return 83;\n      }\n      color_tree_init(tree->children[i]);\n    }\n    tree_idx = tree_idx->children[i];\n  }\n\n  tree->index = (int) index;\n  return 0;\n}\n\n",
            "calle": [
                "color_tree_init",
                "lodepng_malloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "tree",
                        "type": "ColorTree *",
                        "definition": [
                            "ColorTree *tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char g"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "index",
                        "type": "unsigned",
                        "definition": [
                            "unsigned index"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int tree_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bit",
                        "type": "int",
                        "definition": [
                            "int bit"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "int",
                        "definition": [
                            "int i = (((8 * ((r >> bit) & 1)) + (4 * ((g >> bit) & 1))) + (2 * ((b >> bit) & 1))) + (1 * ((a >> bit) & 1))"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "rgba8ToPixel",
            "header": "",
            "params": [
                "unsigned char *out",
                "size_t i",
                "const LodePNGColorMode *mode",
                "ColorTree *tree",
                "unsigned char r",
                "unsigned char g",
                "unsigned char b",
                "unsigned char a"
            ],
            "definition": "static unsigned rgba8ToPixel(unsigned char *out, size_t i, const LodePNGColorMode *mode, ColorTree *tree, unsigned char r, unsigned char g, unsigned char b, unsigned char a)\n{\n  if (mode->colortype == LCT_GREY)\n  {\n    unsigned char gray = r;\n    if (mode->bitdepth == 8)\n    {\n      out[i] = gray;\n    }\n    else\n      if (mode->bitdepth == 16)\n    {\n      out[(i * 2) + 0] = (out[(i * 2) + 1] = gray);\n    }\n    else\n    {\n      gray = (((unsigned) gray) >> (8u - mode->bitdepth)) & ((1u << mode->bitdepth) - 1u);\n      addColorBits(out, i, mode->bitdepth, gray);\n    }\n  }\n  else\n    if (mode->colortype == LCT_RGB)\n  {\n    if (mode->bitdepth == 8)\n    {\n      out[(i * 3) + 0] = r;\n      out[(i * 3) + 1] = g;\n      out[(i * 3) + 2] = b;\n    }\n    else\n    {\n      out[(i * 6) + 0] = (out[(i * 6) + 1] = r);\n      out[(i * 6) + 2] = (out[(i * 6) + 3] = g);\n      out[(i * 6) + 4] = (out[(i * 6) + 5] = b);\n    }\n  }\n  else\n    if (mode->colortype == LCT_PALETTE)\n  {\n    int index = color_tree_get(tree, r, g, b, a);\n    if (index < 0)\n    {\n      return 82;\n    }\n    if (mode->bitdepth == 8)\n    {\n      out[i] = index;\n    }\n    else\n      addColorBits(out, i, mode->bitdepth, (unsigned) index);\n  }\n  else\n    if (mode->colortype == LCT_GREY_ALPHA)\n  {\n    unsigned char gray = r;\n    if (mode->bitdepth == 8)\n    {\n      out[(i * 2) + 0] = gray;\n      out[(i * 2) + 1] = a;\n    }\n    else\n      if (mode->bitdepth == 16)\n    {\n      out[(i * 4) + 0] = (out[(i * 4) + 1] = gray);\n      out[(i * 4) + 2] = (out[(i * 4) + 3] = a);\n    }\n  }\n  else\n    if (mode->colortype == LCT_RGBA)\n  {\n    if (mode->bitdepth == 8)\n    {\n      out[(i * 4) + 0] = r;\n      out[(i * 4) + 1] = g;\n      out[(i * 4) + 2] = b;\n      out[(i * 4) + 3] = a;\n    }\n    else\n    {\n      out[(i * 8) + 0] = (out[(i * 8) + 1] = r);\n      out[(i * 8) + 2] = (out[(i * 8) + 3] = g);\n      out[(i * 8) + 4] = (out[(i * 8) + 5] = b);\n      out[(i * 8) + 6] = (out[(i * 8) + 7] = a);\n    }\n  }\n  return 0;\n}\n\n",
            "calle": [
                "addColorBits",
                "color_tree_get"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *mode"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree",
                        "type": "ColorTree *",
                        "definition": [
                            "ColorTree *tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char g"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "gray",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char gray = r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "index",
                        "type": "int",
                        "definition": [
                            "int index = color_tree_get(tree, r, g, b, a)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "rgba16ToPixel",
            "header": "",
            "params": [
                "unsigned char *out",
                "size_t i",
                "const LodePNGColorMode *mode",
                "unsigned short r",
                "unsigned short g",
                "unsigned short b",
                "unsigned short a"
            ],
            "definition": "static void rgba16ToPixel(unsigned char *out, size_t i, const LodePNGColorMode *mode, unsigned short r, unsigned short g, unsigned short b, unsigned short a)\n{\n  if (mode->colortype == LCT_GREY)\n  {\n    unsigned short gray = r;\n    out[(i * 2) + 0] = (gray >> 8) & 255;\n    out[(i * 2) + 1] = gray & 255;\n  }\n  else\n    if (mode->colortype == LCT_RGB)\n  {\n    out[(i * 6) + 0] = (r >> 8) & 255;\n    out[(i * 6) + 1] = r & 255;\n    out[(i * 6) + 2] = (g >> 8) & 255;\n    out[(i * 6) + 3] = g & 255;\n    out[(i * 6) + 4] = (b >> 8) & 255;\n    out[(i * 6) + 5] = b & 255;\n  }\n  else\n    if (mode->colortype == LCT_GREY_ALPHA)\n  {\n    unsigned short gray = r;\n    out[(i * 4) + 0] = (gray >> 8) & 255;\n    out[(i * 4) + 1] = gray & 255;\n    out[(i * 4) + 2] = (a >> 8) & 255;\n    out[(i * 4) + 3] = a & 255;\n  }\n  else\n    if (mode->colortype == LCT_RGBA)\n  {\n    out[(i * 8) + 0] = (r >> 8) & 255;\n    out[(i * 8) + 1] = r & 255;\n    out[(i * 8) + 2] = (g >> 8) & 255;\n    out[(i * 8) + 3] = g & 255;\n    out[(i * 8) + 4] = (b >> 8) & 255;\n    out[(i * 8) + 5] = b & 255;\n    out[(i * 8) + 6] = (a >> 8) & 255;\n    out[(i * 8) + 7] = a & 255;\n  }\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *mode"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short g"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "gray",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short gray = r"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "getPixelColorRGBA8",
            "header": "",
            "params": [
                "unsigned char *r",
                "unsigned char *g",
                "unsigned char *b",
                "unsigned char *a",
                "const unsigned char *in",
                "size_t i",
                "const LodePNGColorMode *mode"
            ],
            "definition": "static void getPixelColorRGBA8(unsigned char *r, unsigned char *g, unsigned char *b, unsigned char *a, const unsigned char *in, size_t i, const LodePNGColorMode *mode)\n{\n  if (mode->colortype == LCT_GREY)\n  {\n    helper_getPixelColorRGBA8_2(r, g, b, a, in, i, mode);\n  }\n  else\n    if (mode->colortype == LCT_RGB)\n  {\n    helper_getPixelColorRGBA8_1(r, g, b, a, in, i, mode);\n  }\n  else\n    if (mode->colortype == LCT_PALETTE)\n  {\n    unsigned index;\n    if (mode->bitdepth == 8)\n    {\n      index = in[i];\n    }\n    else\n    {\n      size_t j = i * mode->bitdepth;\n      index = readBitsFromReversedStream(&j, in, mode->bitdepth);\n    }\n    *r = mode->palette[(index * 4) + 0];\n    *g = mode->palette[(index * 4) + 1];\n    *b = mode->palette[(index * 4) + 2];\n    *a = mode->palette[(index * 4) + 3];\n  }\n  else\n    if (mode->colortype == LCT_GREY_ALPHA)\n  {\n    if (mode->bitdepth == 8)\n    {\n      *r = (*g = (*b = in[(i * 2) + 0]));\n      *a = in[(i * 2) + 1];\n    }\n    else\n    {\n      *r = (*g = (*b = in[(i * 4) + 0]));\n      *a = in[(i * 4) + 2];\n    }\n  }\n  else\n    if (mode->colortype == LCT_RGBA)\n  {\n    if (mode->bitdepth == 8)\n    {\n      *r = in[(i * 4) + 0];\n      *g = in[(i * 4) + 1];\n      *b = in[(i * 4) + 2];\n      *a = in[(i * 4) + 3];\n    }\n    else\n    {\n      *r = in[(i * 8) + 0];\n      *g = in[(i * 8) + 2];\n      *b = in[(i * 8) + 4];\n      *a = in[(i * 8) + 6];\n    }\n  }\n}\n\n",
            "calle": [
                "helper_getPixelColorRGBA8_1",
                "helper_getPixelColorRGBA8_2",
                "readBitsFromReversedStream"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *g"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *mode"
                        ]
                    },
                    {
                        "path": null,
                        "name": "index",
                        "type": "unsigned",
                        "definition": [
                            "unsigned index"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "size_t",
                        "definition": [
                            "size_t j = i * mode->bitdepth"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "getPixelColorsRGBA8",
            "header": "",
            "params": [
                "unsigned char *buffer",
                "size_t numpixels",
                "const unsigned char *in",
                "const LodePNGColorMode *mode"
            ],
            "definition": "static void getPixelColorsRGBA8(unsigned char *buffer, size_t numpixels, const unsigned char *in, const LodePNGColorMode *mode)\n{\n  unsigned int buffer_idx = 0;\n  unsigned num_channels = 4;\n  size_t i;\n  if (mode->colortype == LCT_GREY)\n  {\n    helper_getPixelColorsRGBA8_2(&buffer_idx, &i, buffer, numpixels, in, mode, num_channels);\n  }\n  else\n    if (mode->colortype == LCT_RGB)\n  {\n    helper_getPixelColorsRGBA8_1(&buffer_idx, &i, buffer, numpixels, in, mode, num_channels);\n  }\n  else\n    if (mode->colortype == LCT_PALETTE)\n  {\n    if (mode->bitdepth == 8)\n    {\n      for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n      {\n        unsigned index = in[i];\n        lodepng_memcpy(buffer, &mode->palette[index * 4], 4);\n      }\n\n    }\n    else\n    {\n      size_t j = 0;\n      for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n      {\n        unsigned index = readBitsFromReversedStream(&j, in, mode->bitdepth);\n        lodepng_memcpy(buffer, &mode->palette[index * 4], 4);\n      }\n\n    }\n  }\n  else\n    if (mode->colortype == LCT_GREY_ALPHA)\n  {\n    if (mode->bitdepth == 8)\n    {\n      for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n      {\n        buffer[0 + buffer_idx] = (buffer[1 + buffer_idx] = (buffer[2 + buffer_idx] = in[(i * 2) + 0]));\n        buffer[3 + buffer_idx] = in[(i * 2) + 1];\n      }\n\n    }\n    else\n    {\n      for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n      {\n        buffer[0 + buffer_idx] = (buffer[1 + buffer_idx] = (buffer[2 + buffer_idx] = in[(i * 4) + 0]));\n        buffer[3 + buffer_idx] = in[(i * 4) + 2];\n      }\n\n    }\n  }\n  else\n    if (mode->colortype == LCT_RGBA)\n  {\n    if (mode->bitdepth == 8)\n    {\n      lodepng_memcpy(buffer, in, numpixels * 4);\n    }\n    else\n    {\n      for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n      {\n        buffer[0 + buffer_idx] = in[(i * 8) + 0];\n        buffer[1 + buffer_idx] = in[(i * 8) + 2];\n        buffer[2 + buffer_idx] = in[(i * 8) + 4];\n        buffer[3 + buffer_idx] = in[(i * 8) + 6];\n      }\n\n    }\n  }\n}\n\n",
            "calle": [
                "helper_getPixelColorsRGBA8_1",
                "helper_getPixelColorsRGBA8_2",
                "lodepng_memcpy",
                "readBitsFromReversedStream"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "buffer",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *buffer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numpixels",
                        "type": "size_t",
                        "definition": [
                            "size_t numpixels"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *mode"
                        ]
                    },
                    {
                        "path": null,
                        "name": "buffer_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int buffer_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "num_channels",
                        "type": "unsigned",
                        "definition": [
                            "unsigned num_channels = 4"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "index",
                        "type": "unsigned",
                        "definition": [
                            "unsigned index = in[i]",
                            "unsigned index = readBitsFromReversedStream(&j, in, mode->bitdepth)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "size_t",
                        "definition": [
                            "size_t j = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "getPixelColorsRGB8",
            "header": "",
            "params": [
                "unsigned char *buffer",
                "size_t numpixels",
                "const unsigned char *in",
                "const LodePNGColorMode *mode"
            ],
            "definition": "static void getPixelColorsRGB8(unsigned char *buffer, size_t numpixels, const unsigned char *in, const LodePNGColorMode *mode)\n{\n  unsigned int buffer_idx = 0;\n  const unsigned num_channels = 3;\n  size_t i;\n  if (mode->colortype == LCT_GREY)\n  {\n    if (mode->bitdepth == 8)\n    {\n      for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n      {\n        buffer[0 + buffer_idx] = (buffer[1 + buffer_idx] = (buffer[2 + buffer_idx] = in[i]));\n      }\n\n    }\n    else\n      if (mode->bitdepth == 16)\n    {\n      for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n      {\n        buffer[0 + buffer_idx] = (buffer[1 + buffer_idx] = (buffer[2 + buffer_idx] = in[i * 2]));\n      }\n\n    }\n    else\n    {\n      unsigned highest = (1U << mode->bitdepth) - 1U;\n      size_t j = 0;\n      for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n      {\n        unsigned value = readBitsFromReversedStream(&j, in, mode->bitdepth);\n        buffer[0 + buffer_idx] = (buffer[1 + buffer_idx] = (buffer[2 + buffer_idx] = (value * 255) / highest));\n      }\n\n    }\n  }\n  else\n    if (mode->colortype == LCT_RGB)\n  {\n    if (mode->bitdepth == 8)\n    {\n      lodepng_memcpy(buffer, in, numpixels * 3);\n    }\n    else\n    {\n      for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n      {\n        buffer[0 + buffer_idx] = in[(i * 6) + 0];\n        buffer[1 + buffer_idx] = in[(i * 6) + 2];\n        buffer[2 + buffer_idx] = in[(i * 6) + 4];\n      }\n\n    }\n  }\n  else\n    if (mode->colortype == LCT_PALETTE)\n  {\n    if (mode->bitdepth == 8)\n    {\n      for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n      {\n        unsigned index = in[i];\n        lodepng_memcpy(buffer, &mode->palette[index * 4], 3);\n      }\n\n    }\n    else\n    {\n      size_t j = 0;\n      for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n      {\n        unsigned index = readBitsFromReversedStream(&j, in, mode->bitdepth);\n        lodepng_memcpy(buffer, &mode->palette[index * 4], 3);\n      }\n\n    }\n  }\n  else\n    if (mode->colortype == LCT_GREY_ALPHA)\n  {\n    if (mode->bitdepth == 8)\n    {\n      for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n      {\n        buffer[0 + buffer_idx] = (buffer[1 + buffer_idx] = (buffer[2 + buffer_idx] = in[(i * 2) + 0]));\n      }\n\n    }\n    else\n    {\n      for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n      {\n        buffer[0 + buffer_idx] = (buffer[1 + buffer_idx] = (buffer[2 + buffer_idx] = in[(i * 4) + 0]));\n      }\n\n    }\n  }\n  else\n    if (mode->colortype == LCT_RGBA)\n  {\n    if (mode->bitdepth == 8)\n    {\n      for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n      {\n        lodepng_memcpy(buffer, &in[i * 4], 3);\n      }\n\n    }\n    else\n    {\n      for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n      {\n        buffer[0 + buffer_idx] = in[(i * 8) + 0];\n        buffer[1 + buffer_idx] = in[(i * 8) + 2];\n        buffer[2 + buffer_idx] = in[(i * 8) + 4];\n      }\n\n    }\n  }\n}\n\n",
            "calle": [
                "lodepng_memcpy",
                "readBitsFromReversedStream"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "buffer",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *buffer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numpixels",
                        "type": "size_t",
                        "definition": [
                            "size_t numpixels"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *mode"
                        ]
                    },
                    {
                        "path": null,
                        "name": "buffer_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int buffer_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "num_channels",
                        "type": "const unsigned",
                        "definition": [
                            "const unsigned num_channels = 3"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "highest",
                        "type": "unsigned",
                        "definition": [
                            "unsigned highest = (1U << mode->bitdepth) - 1U"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "size_t",
                        "definition": [
                            "size_t j = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "value",
                        "type": "unsigned",
                        "definition": [
                            "unsigned value = readBitsFromReversedStream(&j, in, mode->bitdepth)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "index",
                        "type": "unsigned",
                        "definition": [
                            "unsigned index = in[i]",
                            "unsigned index = readBitsFromReversedStream(&j, in, mode->bitdepth)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "getPixelColorRGBA16",
            "header": "",
            "params": [
                "unsigned short *r",
                "unsigned short *g",
                "unsigned short *b",
                "unsigned short *a",
                "const unsigned char *in",
                "size_t i",
                "const LodePNGColorMode *mode"
            ],
            "definition": "static void getPixelColorRGBA16(unsigned short *r, unsigned short *g, unsigned short *b, unsigned short *a, const unsigned char *in, size_t i, const LodePNGColorMode *mode)\n{\n  if (mode->colortype == LCT_GREY)\n  {\n    *r = (*g = (*b = (256 * in[(i * 2) + 0]) + in[(i * 2) + 1]));\n    if (mode->key_defined && (((256U * in[(i * 2) + 0]) + in[(i * 2) + 1]) == mode->key_r))\n    {\n      *a = 0;\n    }\n    else\n      *a = 65535;\n  }\n  else\n    if (mode->colortype == LCT_RGB)\n  {\n    *r = (256u * in[(i * 6) + 0]) + in[(i * 6) + 1];\n    *g = (256u * in[(i * 6) + 2]) + in[(i * 6) + 3];\n    *b = (256u * in[(i * 6) + 4]) + in[(i * 6) + 5];\n    if (((mode->key_defined && (((256u * in[(i * 6) + 0]) + in[(i * 6) + 1]) == mode->key_r)) && (((256u * in[(i * 6) + 2]) + in[(i * 6) + 3]) == mode->key_g)) && (((256u * in[(i * 6) + 4]) + in[(i * 6) + 5]) == mode->key_b))\n    {\n      *a = 0;\n    }\n    else\n      *a = 65535;\n  }\n  else\n    if (mode->colortype == LCT_GREY_ALPHA)\n  {\n    *r = (*g = (*b = (256u * in[(i * 4) + 0]) + in[(i * 4) + 1]));\n    *a = (256u * in[(i * 4) + 2]) + in[(i * 4) + 3];\n  }\n  else\n    if (mode->colortype == LCT_RGBA)\n  {\n    *r = (256u * in[(i * 8) + 0]) + in[(i * 8) + 1];\n    *g = (256u * in[(i * 8) + 2]) + in[(i * 8) + 3];\n    *b = (256u * in[(i * 8) + 4]) + in[(i * 8) + 5];\n    *a = (256u * in[(i * 8) + 6]) + in[(i * 8) + 7];\n  }\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned short *",
                        "definition": [
                            "unsigned short *r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned short *",
                        "definition": [
                            "unsigned short *g"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned short *",
                        "definition": [
                            "unsigned short *b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "unsigned short *",
                        "definition": [
                            "unsigned short *a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *mode"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_convert_rgb",
            "header": "",
            "params": [
                "unsigned *r_out",
                "unsigned *g_out",
                "unsigned *b_out",
                "unsigned r_in",
                "unsigned g_in",
                "unsigned b_in",
                "const LodePNGColorMode *mode_out",
                "const LodePNGColorMode *mode_in"
            ],
            "definition": "unsigned lodepng_convert_rgb(unsigned *r_out, unsigned *g_out, unsigned *b_out, unsigned r_in, unsigned g_in, unsigned b_in, const LodePNGColorMode *mode_out, const LodePNGColorMode *mode_in)\n{\n  unsigned r = 0;\n  unsigned g = 0;\n  unsigned b = 0;\n  unsigned mul = 65535 / ((1u << mode_in->bitdepth) - 1u);\n  unsigned shift = 16 - mode_out->bitdepth;\n  if ((mode_in->colortype == LCT_GREY) || (mode_in->colortype == LCT_GREY_ALPHA))\n  {\n    r = (g = (b = r_in * mul));\n  }\n  else\n    if ((mode_in->colortype == LCT_RGB) || (mode_in->colortype == LCT_RGBA))\n  {\n    r = r_in * mul;\n    g = g_in * mul;\n    b = b_in * mul;\n  }\n  else\n    if (mode_in->colortype == LCT_PALETTE)\n  {\n    if (r_in >= mode_in->palettesize)\n    {\n      return 82;\n    }\n    r = mode_in->palette[(r_in * 4) + 0] * 257u;\n    g = mode_in->palette[(r_in * 4) + 1] * 257u;\n    b = mode_in->palette[(r_in * 4) + 2] * 257u;\n  }\n  else\n  {\n    return 31;\n  }\n  if ((mode_out->colortype == LCT_GREY) || (mode_out->colortype == LCT_GREY_ALPHA))\n  {\n    *r_out = r >> shift;\n  }\n  else\n    if ((mode_out->colortype == LCT_RGB) || (mode_out->colortype == LCT_RGBA))\n  {\n    *r_out = r >> shift;\n    *g_out = g >> shift;\n    *b_out = b >> shift;\n  }\n  else\n    if (mode_out->colortype == LCT_PALETTE)\n  {\n    unsigned i;\n    if ((((r >> 8) != (r & 255)) || ((g >> 8) != (g & 255))) || ((b >> 8) != (b & 255)))\n    {\n      return 82;\n    }\n    for (i = 0; i < mode_out->palettesize; i += 1)\n    {\n      unsigned j = i * 4;\n      if ((((r >> 8) == mode_out->palette[j + 0]) && ((g >> 8) == mode_out->palette[j + 1])) && ((b >> 8) == mode_out->palette[j + 2]))\n      {\n        *r_out = i;\n        return 0;\n      }\n    }\n\n    return 82;\n  }\n  else\n  {\n    return 31;\n  }\n  return 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "r_out",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *r_out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g_out",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *g_out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b_out",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *b_out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r_in",
                        "type": "unsigned",
                        "definition": [
                            "unsigned r_in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g_in",
                        "type": "unsigned",
                        "definition": [
                            "unsigned g_in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b_in",
                        "type": "unsigned",
                        "definition": [
                            "unsigned b_in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode_out",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *mode_out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode_in",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *mode_in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned",
                        "definition": [
                            "unsigned r = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned",
                        "definition": [
                            "unsigned g = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned",
                        "definition": [
                            "unsigned b = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mul",
                        "type": "unsigned",
                        "definition": [
                            "unsigned mul = 65535 / ((1u << mode_in->bitdepth) - 1u)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "shift",
                        "type": "unsigned",
                        "definition": [
                            "unsigned shift = 16 - mode_out->bitdepth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "unsigned",
                        "definition": [
                            "unsigned j = i * 4"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "getValueRequiredBits",
            "header": "",
            "params": [
                "unsigned char value"
            ],
            "definition": "static unsigned getValueRequiredBits(unsigned char value)\n{\n  if ((value == 0) || (value == 255))\n  {\n    return 1;\n  }\n  if ((value % 17) == 0)\n  {\n    return ((value % 85) == 0) ? (2) : (4);\n  }\n  return 8;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "value",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char value"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "lodepng_color_stats_add",
            "header": "",
            "params": [
                "LodePNGColorStats *stats",
                "unsigned r",
                "unsigned g",
                "unsigned b",
                "unsigned a"
            ],
            "definition": "static unsigned lodepng_color_stats_add(LodePNGColorStats *stats, unsigned r, unsigned g, unsigned b, unsigned a)\n{\n  unsigned error = 0;\n  unsigned char image[8];\n  LodePNGColorMode mode;\n  lodepng_color_mode_init(&mode);\n  image[0] = r >> 8;\n  image[1] = r;\n  image[2] = g >> 8;\n  image[3] = g;\n  image[4] = b >> 8;\n  image[5] = b;\n  image[6] = a >> 8;\n  image[7] = a;\n  mode.bitdepth = 16;\n  mode.colortype = LCT_RGBA;\n  error = lodepng_compute_color_stats(stats, image, 1, 1, &mode);\n  lodepng_color_mode_cleanup(&mode);\n  return error;\n}\n\n",
            "calle": [
                "lodepng_color_mode_cleanup",
                "lodepng_color_mode_init",
                "lodepng_compute_color_stats"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "stats",
                        "type": "LodePNGColorStats *",
                        "definition": [
                            "LodePNGColorStats *stats"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned",
                        "definition": [
                            "unsigned r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned",
                        "definition": [
                            "unsigned g"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned",
                        "definition": [
                            "unsigned b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "unsigned",
                        "definition": [
                            "unsigned a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "image",
                        "type": "unsigned char [8]",
                        "definition": [
                            "unsigned char image[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode",
                        "type": "LodePNGColorMode",
                        "definition": [
                            "LodePNGColorMode mode"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "auto_choose_color",
            "header": "",
            "params": [
                "LodePNGColorMode *mode_out",
                "const LodePNGColorMode *mode_in",
                "const LodePNGColorStats *stats"
            ],
            "definition": "static unsigned auto_choose_color(LodePNGColorMode *mode_out, const LodePNGColorMode *mode_in, const LodePNGColorStats *stats)\n{\n  unsigned error = 0;\n  unsigned palettebits;\n  size_t i;\n  size_t n;\n  size_t numpixels = stats->numpixels;\n  unsigned palette_ok;\n  unsigned gray_ok;\n  unsigned alpha = stats->alpha;\n  unsigned key = stats->key;\n  unsigned bits = stats->bits;\n  mode_out->key_defined = 0;\n  if (key && (numpixels <= 16))\n  {\n    alpha = 1;\n    key = 0;\n    if (bits < 8)\n    {\n      bits = 8;\n    }\n  }\n  gray_ok = !stats->colored;\n  if (!stats->allow_greyscale)\n  {\n    gray_ok = 0;\n  }\n  if ((!gray_ok) && (bits < 8))\n  {\n    bits = 8;\n  }\n  n = stats->numcolors;\n  palettebits = (n <= 2) ? (1) : ((n <= 4) ? (2) : ((n <= 16) ? (4) : (8)));\n  palette_ok = ((n <= 256) && (bits <= 8)) && (n != 0);\n  if (numpixels < (n * 2))\n  {\n    palette_ok = 0;\n  }\n  if ((gray_ok && (!alpha)) && (bits <= palettebits))\n  {\n    palette_ok = 0;\n  }\n  if (!stats->allow_palette)\n  {\n    palette_ok = 0;\n  }\n  if (palette_ok)\n  {\n    helper_auto_choose_color_1(&error, &i, mode_out, mode_in, stats, palettebits);\n  }\n  else\n  {\n    mode_out->bitdepth = bits;\n    mode_out->colortype = (alpha) ? ((gray_ok) ? (LCT_GREY_ALPHA) : (LCT_RGBA)) : ((gray_ok) ? (LCT_GREY) : (LCT_RGB));\n    if (key)\n    {\n      unsigned mask = (1u << mode_out->bitdepth) - 1u;\n      mode_out->key_r = stats->key_r & mask;\n      mode_out->key_g = stats->key_g & mask;\n      mode_out->key_b = stats->key_b & mask;\n      mode_out->key_defined = 1;\n    }\n  }\n  return error;\n}\n\n",
            "calle": [
                "helper_auto_choose_color_1"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "mode_out",
                        "type": "LodePNGColorMode *",
                        "definition": [
                            "LodePNGColorMode *mode_out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode_in",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *mode_in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "stats",
                        "type": "const LodePNGColorStats *",
                        "definition": [
                            "const LodePNGColorStats *stats"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "palettebits",
                        "type": "unsigned",
                        "definition": [
                            "unsigned palettebits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "n",
                        "type": "size_t",
                        "definition": [
                            "size_t n"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numpixels",
                        "type": "size_t",
                        "definition": [
                            "size_t numpixels = stats->numpixels"
                        ]
                    },
                    {
                        "path": null,
                        "name": "palette_ok",
                        "type": "unsigned",
                        "definition": [
                            "unsigned palette_ok"
                        ]
                    },
                    {
                        "path": null,
                        "name": "gray_ok",
                        "type": "unsigned",
                        "definition": [
                            "unsigned gray_ok"
                        ]
                    },
                    {
                        "path": null,
                        "name": "alpha",
                        "type": "unsigned",
                        "definition": [
                            "unsigned alpha = stats->alpha"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key",
                        "type": "unsigned",
                        "definition": [
                            "unsigned key = stats->key"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bits",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bits = stats->bits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mask",
                        "type": "unsigned",
                        "definition": [
                            "unsigned mask = (1u << mode_out->bitdepth) - 1u"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "paethPredictor",
            "header": "",
            "params": [
                "short a",
                "short b",
                "short c"
            ],
            "definition": "static unsigned char paethPredictor(short a, short b, short c)\n{\n  short pa = ((b - c) < 0) ? (-(b - c)) : (b - c);\n  short pb = ((a - c) < 0) ? (-(a - c)) : (a - c);\n  short pc = ((((a + b) - c) - c) < 0) ? (-(((a + b) - c) - c)) : (((a + b) - c) - c);\n  if (pb < pa)\n  {\n    a = b;\n    pa = pb;\n  }\n  return (pc < pa) ? (c) : (a);\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "a",
                        "type": "short",
                        "definition": [
                            "short a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "short",
                        "definition": [
                            "short b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "c",
                        "type": "short",
                        "definition": [
                            "short c"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pa",
                        "type": "short",
                        "definition": [
                            "short pa = ((b - c) < 0) ? (-(b - c)) : (b - c)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pb",
                        "type": "short",
                        "definition": [
                            "short pb = ((a - c) < 0) ? (-(a - c)) : (a - c)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pc",
                        "type": "short",
                        "definition": [
                            "short pc = ((((a + b) - c) - c) < 0) ? (-(((a + b) - c) - c)) : (((a + b) - c) - c)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "Adam7_getpassvalues",
            "header": "",
            "params": [
                "unsigned passw[7]",
                "unsigned passh[7]",
                "size_t filter_passstart[8]",
                "size_t padded_passstart[8]",
                "size_t passstart[8]",
                "unsigned w",
                "unsigned h",
                "unsigned bpp"
            ],
            "definition": "static void Adam7_getpassvalues(unsigned passw[7], unsigned passh[7], size_t filter_passstart[8], size_t padded_passstart[8], size_t passstart[8], unsigned w, unsigned h, unsigned bpp)\n{\n  unsigned i;\n  for (i = 0; i != 7; i += 1)\n  {\n    passw[i] = (((w + ADAM7_DX[i]) - ADAM7_IX[i]) - 1) / ADAM7_DX[i];\n    passh[i] = (((h + ADAM7_DY[i]) - ADAM7_IY[i]) - 1) / ADAM7_DY[i];\n    if (passw[i] == 0)\n    {\n      passh[i] = 0;\n    }\n    if (passh[i] == 0)\n    {\n      passw[i] = 0;\n    }\n  }\n\n  filter_passstart[0] = (padded_passstart[0] = (passstart[0] = 0));\n  for (i = 0; i != 7; i += 1)\n  {\n    filter_passstart[i + 1] = filter_passstart[i] + ((passw[i] && passh[i]) ? (passh[i] * (1u + (((passw[i] * bpp) + 7u) / 8u))) : (0));\n    padded_passstart[i + 1] = padded_passstart[i] + (passh[i] * (((passw[i] * bpp) + 7u) / 8u));\n    passstart[i + 1] = passstart[i] + ((((passh[i] * passw[i]) * bpp) + 7u) / 8u);\n  }\n\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "passw",
                        "type": "unsigned [7]",
                        "definition": [
                            "unsigned passw[7]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passh",
                        "type": "unsigned [7]",
                        "definition": [
                            "unsigned passh[7]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "filter_passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t filter_passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "padded_passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t padded_passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bpp"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ADAM7_DX",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "ADAM7_IX",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "ADAM7_DY",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "ADAM7_IY",
                        "type": "None",
                        "definition": []
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "unfilterScanline",
            "header": "",
            "params": [
                "unsigned char *recon",
                "const unsigned char *scanline",
                "const unsigned char *precon",
                "size_t bytewidth",
                "unsigned char filterType",
                "size_t length"
            ],
            "definition": "static unsigned unfilterScanline(unsigned char *recon, const unsigned char *scanline, const unsigned char *precon, size_t bytewidth, unsigned char filterType, size_t length)\n{\n  size_t i;\n  switch (filterType)\n  {\n    case 0:\n    {\n      for (i = 0; i != length; i += 1)\n        recon[i] = scanline[i];\n\n      break;\n    }\n\n    case 1:\n    {\n      size_t j = 0;\n      for (i = 0; i != bytewidth; i += 1)\n        recon[i] = scanline[i];\n\n      for (i = bytewidth; i != length; i += 1, j += 1)\n        recon[i] = scanline[i] + recon[j];\n\n      break;\n    }\n\n    case 2:\n    {\n      if (precon)\n      {\n        for (i = 0; i != length; i += 1)\n          recon[i] = scanline[i] + precon[i];\n\n      }\n      else\n      {\n        for (i = 0; i != length; i += 1)\n          recon[i] = scanline[i];\n\n      }\n      break;\n    }\n\n    case 3:\n    {\n      helper_unfilterScanline_1(&i, recon, scanline, precon, bytewidth, length);\n    }\n\n    case 4:\n    {\n      helper_unfilterScanline_2(&i, recon, scanline, precon, bytewidth, length);\n    }\n\n    default:\n    {\n      return 36;\n    }\n\n  }\n\n  return 0;\n}\n\n",
            "calle": [
                "helper_unfilterScanline_1",
                "helper_unfilterScanline_2"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "recon",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *recon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "scanline",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *scanline"
                        ]
                    },
                    {
                        "path": null,
                        "name": "precon",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *precon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bytewidth",
                        "type": "size_t",
                        "definition": [
                            "size_t bytewidth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "filterType",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char filterType"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "size_t",
                        "definition": [
                            "size_t length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "size_t",
                        "definition": [
                            "size_t j = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "unfilter",
            "header": "",
            "params": [
                "unsigned char *out",
                "const unsigned char *in",
                "unsigned w",
                "unsigned h",
                "unsigned bpp"
            ],
            "definition": "static unsigned unfilter(unsigned char *out, const unsigned char *in, unsigned w, unsigned h, unsigned bpp)\n{\n  unsigned y;\n  unsigned char *prevline = 0;\n  unsigned int prevline_idx = 0;\n  size_t bytewidth = (bpp + 7u) / 8u;\n  size_t linebytes = lodepng_get_raw_size_idat(w, 1, bpp) - 1u;\n  for (y = 0; y < h; y += 1)\n  {\n    size_t outindex = linebytes * y;\n    size_t inindex = (1 + linebytes) * y;\n    unsigned char filterType = in[inindex];\n    {\n      unsigned error = unfilterScanline(&out[outindex], &in[inindex + 1], prevline, bytewidth, filterType, linebytes);\n      if (error)\n      {\n        return error;\n      }\n    }\n    ;\n    prevline_idx = &out[outindex];\n  }\n\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_get_raw_size_idat",
                "unfilterScanline"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bpp"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y",
                        "type": "unsigned",
                        "definition": [
                            "unsigned y"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *prevline = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int prevline_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bytewidth",
                        "type": "size_t",
                        "definition": [
                            "size_t bytewidth = (bpp + 7u) / 8u"
                        ]
                    },
                    {
                        "path": null,
                        "name": "linebytes",
                        "type": "size_t",
                        "definition": [
                            "size_t linebytes = lodepng_get_raw_size_idat(w, 1, bpp) - 1u"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outindex",
                        "type": "size_t",
                        "definition": [
                            "size_t outindex = linebytes * y"
                        ]
                    },
                    {
                        "path": null,
                        "name": "inindex",
                        "type": "size_t",
                        "definition": [
                            "size_t inindex = (1 + linebytes) * y"
                        ]
                    },
                    {
                        "path": null,
                        "name": "filterType",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char filterType = in[inindex]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = unfilterScanline(&out[outindex], &in[inindex + 1], prevline, bytewidth, filterType, linebytes)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "Adam7_deinterlace",
            "header": "",
            "params": [
                "unsigned char *out",
                "const unsigned char *in",
                "unsigned w",
                "unsigned h",
                "unsigned bpp"
            ],
            "definition": "static void Adam7_deinterlace(unsigned char *out, const unsigned char *in, unsigned w, unsigned h, unsigned bpp)\n{\n  unsigned passw[7];\n  unsigned passh[7];\n  size_t filter_passstart[8];\n  size_t padded_passstart[8];\n  size_t passstart[8];\n  unsigned i;\n  Adam7_getpassvalues(passw, passh, filter_passstart, padded_passstart, passstart, w, h, bpp);\n  if (bpp >= 8)\n  {\n    for (i = 0; i != 7; i += 1)\n    {\n      unsigned x;\n      unsigned y;\n      unsigned b;\n      size_t bytewidth = bpp / 8u;\n      for (y = 0; y < passh[i]; y += 1)\n        for (x = 0; x < passw[i]; x += 1)\n      {\n        size_t pixelinstart = passstart[i] + (((y * passw[i]) + x) * bytewidth);\n        size_t pixeloutstart = ((((ADAM7_IY[i] + (((size_t) y) * ADAM7_DY[i])) * ((size_t) w)) + ADAM7_IX[i]) + (((size_t) x) * ADAM7_DX[i])) * bytewidth;\n        for (b = 0; b < bytewidth; b += 1)\n        {\n          out[pixeloutstart + b] = in[pixelinstart + b];\n        }\n\n      }\n\n\n    }\n\n  }\n  else\n  {\n    helper_Adam7_deinterlace_1(&i, out, in, w, bpp, passw, passh, passstart);\n  }\n}\n\n",
            "calle": [
                "Adam7_getpassvalues",
                "helper_Adam7_deinterlace_1"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bpp"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passw",
                        "type": "unsigned [7]",
                        "definition": [
                            "unsigned passw[7]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passh",
                        "type": "unsigned [7]",
                        "definition": [
                            "unsigned passh[7]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "filter_passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t filter_passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "padded_passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t padded_passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "x",
                        "type": "unsigned",
                        "definition": [
                            "unsigned x"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y",
                        "type": "unsigned",
                        "definition": [
                            "unsigned y"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned",
                        "definition": [
                            "unsigned b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bytewidth",
                        "type": "size_t",
                        "definition": [
                            "size_t bytewidth = bpp / 8u"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pixelinstart",
                        "type": "size_t",
                        "definition": [
                            "size_t pixelinstart = passstart[i] + (((y * passw[i]) + x) * bytewidth)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pixeloutstart",
                        "type": "size_t",
                        "definition": [
                            "size_t pixeloutstart = ((((ADAM7_IY[i] + (((size_t) y) * ADAM7_DY[i])) * ((size_t) w)) + ADAM7_IX[i]) + (((size_t) x) * ADAM7_DX[i])) * bytewidth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ADAM7_IY",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "ADAM7_DY",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "ADAM7_IX",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "ADAM7_DX",
                        "type": "None",
                        "definition": []
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "removePaddingBits",
            "header": "",
            "params": [
                "unsigned char *out",
                "const unsigned char *in",
                "size_t olinebits",
                "size_t ilinebits",
                "unsigned h"
            ],
            "definition": "static void removePaddingBits(unsigned char *out, const unsigned char *in, size_t olinebits, size_t ilinebits, unsigned h)\n{\n  unsigned y;\n  size_t diff = ilinebits - olinebits;\n  size_t ibp = 0;\n  size_t obp = 0;\n  for (y = 0; y < h; y += 1)\n  {\n    size_t x;\n    for (x = 0; x < olinebits; x += 1)\n    {\n      unsigned char bit = readBitFromReversedStream(&ibp, in);\n      setBitOfReversedStream(&obp, out, bit);\n    }\n\n    ibp += diff;\n  }\n\n}\n\n",
            "calle": [
                "readBitFromReversedStream",
                "setBitOfReversedStream"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "olinebits",
                        "type": "size_t",
                        "definition": [
                            "size_t olinebits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ilinebits",
                        "type": "size_t",
                        "definition": [
                            "size_t ilinebits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y",
                        "type": "unsigned",
                        "definition": [
                            "unsigned y"
                        ]
                    },
                    {
                        "path": null,
                        "name": "diff",
                        "type": "size_t",
                        "definition": [
                            "size_t diff = ilinebits - olinebits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ibp",
                        "type": "size_t",
                        "definition": [
                            "size_t ibp = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "obp",
                        "type": "size_t",
                        "definition": [
                            "size_t obp = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "x",
                        "type": "size_t",
                        "definition": [
                            "size_t x"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bit",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char bit = readBitFromReversedStream(&ibp, in)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "postProcessScanlines",
            "header": "",
            "params": [
                "unsigned char *out",
                "unsigned char *in",
                "unsigned w",
                "unsigned h",
                "const LodePNGInfo *info_png"
            ],
            "definition": "static unsigned postProcessScanlines(unsigned char *out, unsigned char *in, unsigned w, unsigned h, const LodePNGInfo *info_png)\n{\n  unsigned bpp = lodepng_get_bpp(&info_png->color);\n  if (bpp == 0)\n  {\n    return 31;\n  }\n  if (info_png->interlace_method == 0)\n  {\n    helper_postProcessScanlines_1(out, in, w, h, bpp);\n  }\n  else\n  {\n    helper_postProcessScanlines_2(out, in, w, h, bpp);\n  }\n  return 0;\n}\n\n",
            "calle": [
                "helper_postProcessScanlines_1",
                "helper_postProcessScanlines_2",
                "lodepng_get_bpp"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info_png",
                        "type": "const LodePNGInfo *",
                        "definition": [
                            "const LodePNGInfo *info_png"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bpp = lodepng_get_bpp(&info_png->color)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "readChunk_PLTE",
            "header": "",
            "params": [
                "LodePNGColorMode *color",
                "const unsigned char *data",
                "size_t chunkLength"
            ],
            "definition": "static unsigned readChunk_PLTE(LodePNGColorMode *color, const unsigned char *data, size_t chunkLength)\n{\n  unsigned pos = 0;\n  unsigned i;\n  color->palettesize = chunkLength / 3u;\n  if ((color->palettesize == 0) || (color->palettesize > 256))\n  {\n    return 38;\n  }\n  lodepng_color_mode_alloc_palette(color);\n  if ((!color->palette) && color->palettesize)\n  {\n    color->palettesize = 0;\n    return 83;\n  }\n  for (i = 0; i != color->palettesize; i += 1)\n  {\n    color->palette[(4 * i) + 0] = data[pos];\n    pos += 1;\n    color->palette[(4 * i) + 1] = data[pos];\n    pos += 1;\n    color->palette[(4 * i) + 2] = data[pos++];\n    color->palette[(4 * i) + 3] = 255;\n  }\n\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_color_mode_alloc_palette"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "color",
                        "type": "LodePNGColorMode *",
                        "definition": [
                            "LodePNGColorMode *color"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "size_t",
                        "definition": [
                            "size_t chunkLength"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pos",
                        "type": "unsigned",
                        "definition": [
                            "unsigned pos = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "readChunk_tRNS",
            "header": "",
            "params": [
                "LodePNGColorMode *color",
                "const unsigned char *data",
                "size_t chunkLength"
            ],
            "definition": "static unsigned readChunk_tRNS(LodePNGColorMode *color, const unsigned char *data, size_t chunkLength)\n{\n  unsigned i;\n  if (color->colortype == LCT_PALETTE)\n  {\n    if (chunkLength > color->palettesize)\n    {\n      return 39;\n    }\n    for (i = 0; i != chunkLength; i += 1)\n      color->palette[(4 * i) + 3] = data[i];\n\n  }\n  else\n    if (color->colortype == LCT_GREY)\n  {\n    if (chunkLength != 2)\n    {\n      return 30;\n    }\n    color->key_defined = 1;\n    color->key_r = (color->key_g = (color->key_b = (256u * data[0]) + data[1]));\n  }\n  else\n    if (color->colortype == LCT_RGB)\n  {\n    if (chunkLength != 6)\n    {\n      return 41;\n    }\n    color->key_defined = 1;\n    color->key_r = (256u * data[0]) + data[1];\n    color->key_g = (256u * data[2]) + data[3];\n    color->key_b = (256u * data[4]) + data[5];\n  }\n  else\n    return 42;\n  return 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "color",
                        "type": "LodePNGColorMode *",
                        "definition": [
                            "LodePNGColorMode *color"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "size_t",
                        "definition": [
                            "size_t chunkLength"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "readChunk_bKGD",
            "header": "",
            "params": [
                "LodePNGInfo *info",
                "const unsigned char *data",
                "size_t chunkLength"
            ],
            "definition": "static unsigned readChunk_bKGD(LodePNGInfo *info, const unsigned char *data, size_t chunkLength)\n{\n  if (info->color.colortype == LCT_PALETTE)\n  {\n    if (chunkLength != 1)\n    {\n      return 43;\n    }\n    if (data[0] >= info->color.palettesize)\n    {\n      return 103;\n    }\n    info->background_defined = 1;\n    info->background_r = (info->background_g = (info->background_b = data[0]));\n  }\n  else\n    if ((info->color.colortype == LCT_GREY) || (info->color.colortype == LCT_GREY_ALPHA))\n  {\n    if (chunkLength != 2)\n    {\n      return 44;\n    }\n    info->background_defined = 1;\n    info->background_r = (info->background_g = (info->background_b = (256u * data[0]) + data[1]));\n  }\n  else\n    if ((info->color.colortype == LCT_RGB) || (info->color.colortype == LCT_RGBA))\n  {\n    if (chunkLength != 6)\n    {\n      return 45;\n    }\n    info->background_defined = 1;\n    info->background_r = (256u * data[0]) + data[1];\n    info->background_g = (256u * data[2]) + data[3];\n    info->background_b = (256u * data[4]) + data[5];\n  }\n  return 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "size_t",
                        "definition": [
                            "size_t chunkLength"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "readChunk_tEXt",
            "header": "",
            "params": [
                "LodePNGInfo *info",
                "const unsigned char *data",
                "size_t chunkLength"
            ],
            "definition": "static unsigned readChunk_tEXt(LodePNGInfo *info, const unsigned char *data, size_t chunkLength)\n{\n  unsigned error = 0;\n  char *key = 0;\n  unsigned int key_idx = 0;\n  char *str = 0;\n  unsigned int str_idx = 0;\n  while (!error)\n  {\n    helper_readChunk_tEXt_1(&error, &key_idx, &str_idx, info, data, chunkLength, key, str);\n  }\n\n  lodepng_free(key);\n  lodepng_free(str);\n  return error;\n}\n\n",
            "calle": [
                "helper_readChunk_tEXt_1",
                "lodepng_free"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "size_t",
                        "definition": [
                            "size_t chunkLength"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key",
                        "type": "char *",
                        "definition": [
                            "char *key = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int key_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "str",
                        "type": "char *",
                        "definition": [
                            "char *str = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "str_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int str_idx = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "readChunk_zTXt",
            "header": "",
            "params": [
                "LodePNGInfo *info",
                "const LodePNGDecoderSettings *decoder",
                "const unsigned char *data",
                "size_t chunkLength"
            ],
            "definition": "static unsigned readChunk_zTXt(LodePNGInfo *info, const LodePNGDecoderSettings *decoder, const unsigned char *data, size_t chunkLength)\n{\n  unsigned error = 0;\n  LodePNGDecompressSettings zlibsettings = decoder->zlibsettings;\n  unsigned length;\n  unsigned string2_begin;\n  char *key = 0;\n  unsigned int key_idx = 0;\n  unsigned char *str = 0;\n  size_t size = 0;\n  while (!error)\n  {\n    helper_readChunk_zTXt_1(&error, &zlibsettings, &length, &string2_begin, &key_idx, info, decoder, data, chunkLength, key, str, size);\n  }\n\n  lodepng_free(key);\n  lodepng_free(str);\n  return error;\n}\n\n",
            "calle": [
                "helper_readChunk_zTXt_1",
                "lodepng_free"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "decoder",
                        "type": "const LodePNGDecoderSettings *",
                        "definition": [
                            "const LodePNGDecoderSettings *decoder"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "size_t",
                        "definition": [
                            "size_t chunkLength"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "zlibsettings",
                        "type": "LodePNGDecompressSettings",
                        "definition": [
                            "LodePNGDecompressSettings zlibsettings = decoder->zlibsettings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "string2_begin",
                        "type": "unsigned",
                        "definition": [
                            "unsigned string2_begin"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key",
                        "type": "char *",
                        "definition": [
                            "char *key = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int key_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "str",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *str = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "readChunk_iTXt",
            "header": "",
            "params": [
                "LodePNGInfo *info",
                "const LodePNGDecoderSettings *decoder",
                "const unsigned char *data",
                "size_t chunkLength"
            ],
            "definition": "static unsigned readChunk_iTXt(LodePNGInfo *info, const LodePNGDecoderSettings *decoder, const unsigned char *data, size_t chunkLength)\n{\n  unsigned error = 0;\n  unsigned i;\n  LodePNGDecompressSettings zlibsettings = decoder->zlibsettings;\n  unsigned length;\n  unsigned begin;\n  unsigned compressed;\n  char *key = 0;\n  unsigned int key_idx = 0;\n  char *langtag = 0;\n  unsigned int langtag_idx = 0;\n  char *transkey = 0;\n  unsigned int transkey_idx = 0;\n  while (!error)\n  {\n    helper_readChunk_iTXt_1(&error, &i, &zlibsettings, &length, &begin, &compressed, &key_idx, &langtag_idx, &transkey_idx, info, decoder, data, chunkLength, key, langtag, transkey);\n  }\n\n  lodepng_free(key);\n  lodepng_free(langtag);\n  lodepng_free(transkey);\n  return error;\n}\n\n",
            "calle": [
                "helper_readChunk_iTXt_1",
                "lodepng_free"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "decoder",
                        "type": "const LodePNGDecoderSettings *",
                        "definition": [
                            "const LodePNGDecoderSettings *decoder"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "size_t",
                        "definition": [
                            "size_t chunkLength"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "zlibsettings",
                        "type": "LodePNGDecompressSettings",
                        "definition": [
                            "LodePNGDecompressSettings zlibsettings = decoder->zlibsettings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "begin",
                        "type": "unsigned",
                        "definition": [
                            "unsigned begin"
                        ]
                    },
                    {
                        "path": null,
                        "name": "compressed",
                        "type": "unsigned",
                        "definition": [
                            "unsigned compressed"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key",
                        "type": "char *",
                        "definition": [
                            "char *key = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int key_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "langtag",
                        "type": "char *",
                        "definition": [
                            "char *langtag = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "langtag_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int langtag_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "transkey",
                        "type": "char *",
                        "definition": [
                            "char *transkey = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "transkey_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int transkey_idx = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "readChunk_tIME",
            "header": "",
            "params": [
                "LodePNGInfo *info",
                "const unsigned char *data",
                "size_t chunkLength"
            ],
            "definition": "static unsigned readChunk_tIME(LodePNGInfo *info, const unsigned char *data, size_t chunkLength)\n{\n  if (chunkLength != 7)\n  {\n    return 73;\n  }\n  info->time_defined = 1;\n  info->time.year = (256u * data[0]) + data[1];\n  info->time.month = data[2];\n  info->time.day = data[3];\n  info->time.hour = data[4];\n  info->time.minute = data[5];\n  info->time.second = data[6];\n  return 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "size_t",
                        "definition": [
                            "size_t chunkLength"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "readChunk_pHYs",
            "header": "",
            "params": [
                "LodePNGInfo *info",
                "const unsigned char *data",
                "size_t chunkLength"
            ],
            "definition": "static unsigned readChunk_pHYs(LodePNGInfo *info, const unsigned char *data, size_t chunkLength)\n{\n  if (chunkLength != 9)\n  {\n    return 74;\n  }\n  info->phys_defined = 1;\n  info->phys_x = (((16777216u * data[0]) + (65536u * data[1])) + (256u * data[2])) + data[3];\n  info->phys_y = (((16777216u * data[4]) + (65536u * data[5])) + (256u * data[6])) + data[7];\n  info->phys_unit = data[8];\n  return 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "size_t",
                        "definition": [
                            "size_t chunkLength"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "readChunk_gAMA",
            "header": "",
            "params": [
                "LodePNGInfo *info",
                "const unsigned char *data",
                "size_t chunkLength"
            ],
            "definition": "static unsigned readChunk_gAMA(LodePNGInfo *info, const unsigned char *data, size_t chunkLength)\n{\n  if (chunkLength != 4)\n  {\n    return 96;\n  }\n  info->gama_defined = 1;\n  info->gama_gamma = (((16777216u * data[0]) + (65536u * data[1])) + (256u * data[2])) + data[3];\n  return 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "size_t",
                        "definition": [
                            "size_t chunkLength"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "readChunk_cHRM",
            "header": "",
            "params": [
                "LodePNGInfo *info",
                "const unsigned char *data",
                "size_t chunkLength"
            ],
            "definition": "static unsigned readChunk_cHRM(LodePNGInfo *info, const unsigned char *data, size_t chunkLength)\n{\n  if (chunkLength != 32)\n  {\n    return 97;\n  }\n  info->chrm_defined = 1;\n  info->chrm_white_x = (((16777216u * data[0]) + (65536u * data[1])) + (256u * data[2])) + data[3];\n  info->chrm_white_y = (((16777216u * data[4]) + (65536u * data[5])) + (256u * data[6])) + data[7];\n  info->chrm_red_x = (((16777216u * data[8]) + (65536u * data[9])) + (256u * data[10])) + data[11];\n  info->chrm_red_y = (((16777216u * data[12]) + (65536u * data[13])) + (256u * data[14])) + data[15];\n  info->chrm_green_x = (((16777216u * data[16]) + (65536u * data[17])) + (256u * data[18])) + data[19];\n  info->chrm_green_y = (((16777216u * data[20]) + (65536u * data[21])) + (256u * data[22])) + data[23];\n  info->chrm_blue_x = (((16777216u * data[24]) + (65536u * data[25])) + (256u * data[26])) + data[27];\n  info->chrm_blue_y = (((16777216u * data[28]) + (65536u * data[29])) + (256u * data[30])) + data[31];\n  return 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "size_t",
                        "definition": [
                            "size_t chunkLength"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "readChunk_sRGB",
            "header": "",
            "params": [
                "LodePNGInfo *info",
                "const unsigned char *data",
                "size_t chunkLength"
            ],
            "definition": "static unsigned readChunk_sRGB(LodePNGInfo *info, const unsigned char *data, size_t chunkLength)\n{\n  if (chunkLength != 1)\n  {\n    return 98;\n  }\n  info->srgb_defined = 1;\n  info->srgb_intent = data[0];\n  return 0;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "size_t",
                        "definition": [
                            "size_t chunkLength"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "readChunk_iCCP",
            "header": "",
            "params": [
                "LodePNGInfo *info",
                "const LodePNGDecoderSettings *decoder",
                "const unsigned char *data",
                "size_t chunkLength"
            ],
            "definition": "static unsigned readChunk_iCCP(LodePNGInfo *info, const LodePNGDecoderSettings *decoder, const unsigned char *data, size_t chunkLength)\n{\n  unsigned error = 0;\n  unsigned i;\n  size_t size = 0;\n  LodePNGDecompressSettings zlibsettings = decoder->zlibsettings;\n  unsigned length;\n  unsigned string2_begin;\n  info->iccp_defined = 1;\n  if (info->iccp_name)\n  {\n    lodepng_clear_icc(info);\n  }\n  for (length = 0; (length < chunkLength) && (data[length] != 0); length += 1)\n    ;\n\n  if ((length + 2) >= chunkLength)\n  {\n    return 75;\n  }\n  if ((length < 1) || (length > 79))\n  {\n    return 89;\n  }\n  info->iccp_name = (char *) lodepng_malloc(length + 1);\n  if (!info->iccp_name)\n  {\n    return 83;\n  }\n  info->iccp_name[length] = 0;\n  for (i = 0; i != length; i += 1)\n    info->iccp_name[i] = (char) data[i];\n\n  if (data[length + 1] != 0)\n  {\n    return 72;\n  }\n  string2_begin = length + 2;\n  if (string2_begin > chunkLength)\n  {\n    return 75;\n  }\n  length = ((unsigned) chunkLength) - string2_begin;\n  zlibsettings.max_output_size = decoder->max_icc_size;\n  error = zlib_decompress(&info->iccp_profile, &size, 0, &data[string2_begin], length, &zlibsettings);\n  if (error && (size > zlibsettings.max_output_size))\n  {\n    error = 113;\n  }\n  info->iccp_profile_size = size;\n  if ((!error) && (!info->iccp_profile_size))\n  {\n    error = 100;\n  }\n  return error;\n}\n\n",
            "calle": [
                "lodepng_clear_icc",
                "lodepng_malloc",
                "zlib_decompress"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "decoder",
                        "type": "const LodePNGDecoderSettings *",
                        "definition": [
                            "const LodePNGDecoderSettings *decoder"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "size_t",
                        "definition": [
                            "size_t chunkLength"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "zlibsettings",
                        "type": "LodePNGDecompressSettings",
                        "definition": [
                            "LodePNGDecompressSettings zlibsettings = decoder->zlibsettings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "string2_begin",
                        "type": "unsigned",
                        "definition": [
                            "unsigned string2_begin"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "readChunk_sBIT",
            "header": "",
            "params": [
                "LodePNGInfo *info",
                "const unsigned char *data",
                "size_t chunkLength"
            ],
            "definition": "static unsigned readChunk_sBIT(LodePNGInfo *info, const unsigned char *data, size_t chunkLength)\n{\n  unsigned bitdepth = (info->color.colortype == LCT_PALETTE) ? (8) : (info->color.bitdepth);\n  if (info->color.colortype == LCT_GREY)\n  {\n    if (chunkLength != 1)\n    {\n      return 114;\n    }\n    if ((data[0] == 0) || (data[0] > bitdepth))\n    {\n      return 115;\n    }\n    info->sbit_defined = 1;\n    info->sbit_r = (info->sbit_g = (info->sbit_b = data[0]));\n  }\n  else\n    if ((info->color.colortype == LCT_RGB) || (info->color.colortype == LCT_PALETTE))\n  {\n    if (chunkLength != 3)\n    {\n      return 114;\n    }\n    if (((data[0] == 0) || (data[1] == 0)) || (data[2] == 0))\n    {\n      return 115;\n    }\n    if (((data[0] > bitdepth) || (data[1] > bitdepth)) || (data[2] > bitdepth))\n    {\n      return 115;\n    }\n    info->sbit_defined = 1;\n    info->sbit_r = data[0];\n    info->sbit_g = data[1];\n    info->sbit_b = data[2];\n  }\n  else\n    if (info->color.colortype == LCT_GREY_ALPHA)\n  {\n    if (chunkLength != 2)\n    {\n      return 114;\n    }\n    if ((data[0] == 0) || (data[1] == 0))\n    {\n      return 115;\n    }\n    if ((data[0] > bitdepth) || (data[1] > bitdepth))\n    {\n      return 115;\n    }\n    info->sbit_defined = 1;\n    info->sbit_r = (info->sbit_g = (info->sbit_b = data[0]));\n    info->sbit_a = data[1];\n  }\n  else\n    if (info->color.colortype == LCT_RGBA)\n  {\n    helper_readChunk_sBIT_1(info, data, chunkLength, bitdepth);\n  }\n  return 0;\n}\n\n",
            "calle": [
                "helper_readChunk_sBIT_1"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo *",
                        "definition": [
                            "LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "size_t",
                        "definition": [
                            "size_t chunkLength"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitdepth",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bitdepth = (info->color.colortype == LCT_PALETTE) ? (8) : (info->color.bitdepth)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "decodeGeneric",
            "header": "",
            "params": [
                "unsigned char **out",
                "unsigned *w",
                "unsigned *h",
                "LodePNGState *state",
                "const unsigned char *in",
                "size_t insize"
            ],
            "definition": "static void decodeGeneric(unsigned char **out, unsigned *w, unsigned *h, LodePNGState *state, const unsigned char *in, size_t insize)\n{\n  unsigned char IEND = 0;\n  const unsigned char *chunk;\n  unsigned int chunk_idx = 0;\n  unsigned char *idat;\n  unsigned int idat_idx = 0;\n  size_t idatsize = 0;\n  unsigned char *scanlines = 0;\n  size_t scanlines_size = 0;\n  size_t expected_size = 0;\n  size_t outsize = 0;\n  unsigned unknown = 0;\n  unsigned critical_pos = 1;\n  *out = 0;\n  *w = (*h = 0);\n  state->error = lodepng_inspect(w, h, state, in, insize);\n  if (state->error)\n  {\n    return;\n  }\n  if (lodepng_pixel_overflow(*w, *h, &state->info_png.color, &state->info_raw))\n  {\n    {\n      state->error = 92;\n      return;\n    }\n    ;\n  }\n  idat_idx = (unsigned char *) lodepng_malloc(insize);\n  if (!(&idat[idat_idx]))\n  {\n    state->error = 83;\n    return;\n  }\n  ;\n  chunk_idx = &in[33];\n  while ((!IEND) && (!state->error))\n  {\n    helper_decodeGeneric_2(&IEND, &chunk_idx, &idatsize, &unknown, &critical_pos, state, in, insize, chunk, idat, idat_idx);\n  }\n\n  if (((!state->error) && (state->info_png.color.colortype == LCT_PALETTE)) && (!state->info_png.color.palette))\n  {\n    state->error = 106;\n  }\n  if (!state->error)\n  {\n    helper_decodeGeneric_1(&expected_size, w, h, state, idat, idatsize, scanlines, scanlines_size);\n  }\n  if ((!state->error) && (scanlines_size != expected_size))\n  {\n    state->error = 91;\n  }\n  lodepng_free(idat);\n  if (!state->error)\n  {\n    outsize = lodepng_get_raw_size(*w, *h, &state->info_png.color);\n    *out = (unsigned char *) lodepng_malloc(outsize);\n    if (!(*out))\n    {\n      state->error = 83;\n    }\n  }\n  if (!state->error)\n  {\n    lodepng_memset(*out, 0, outsize);\n    state->error = postProcessScanlines(*out, scanlines, *w, *h, &state->info_png);\n  }\n  lodepng_free(scanlines);\n}\n\n",
            "calle": [
                "helper_decodeGeneric_1",
                "helper_decodeGeneric_2",
                "lodepng_free",
                "lodepng_get_raw_size",
                "lodepng_inspect",
                "lodepng_malloc",
                "lodepng_memset",
                "lodepng_pixel_overflow",
                "postProcessScanlines"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned *",
                        "definition": [
                            "unsigned *h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "state",
                        "type": "LodePNGState *",
                        "definition": [
                            "LodePNGState *state"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "IEND",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char IEND = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int chunk_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "idat",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *idat"
                        ]
                    },
                    {
                        "path": null,
                        "name": "idat_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int idat_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "idatsize",
                        "type": "size_t",
                        "definition": [
                            "size_t idatsize = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "scanlines",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *scanlines = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "scanlines_size",
                        "type": "size_t",
                        "definition": [
                            "size_t scanlines_size = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "expected_size",
                        "type": "size_t",
                        "definition": [
                            "size_t expected_size = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outsize",
                        "type": "size_t",
                        "definition": [
                            "size_t outsize = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "unknown",
                        "type": "unsigned",
                        "definition": [
                            "unsigned unknown = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "critical_pos",
                        "type": "unsigned",
                        "definition": [
                            "unsigned critical_pos = 1"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "writeSignature",
            "header": "",
            "params": [
                "ucvector *out"
            ],
            "definition": "static unsigned writeSignature(ucvector *out)\n{\n  size_t pos = out->size;\n  const unsigned char signature[] = {137, 80, 78, 71, 13, 10, 26, 10};\n  if (!ucvector_resize(out, out->size + 8))\n  {\n    return 83;\n  }\n  lodepng_memcpy(out->data + pos, signature, 8);\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_memcpy",
                "ucvector_resize"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pos",
                        "type": "size_t",
                        "definition": [
                            "size_t pos = out->size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "signature",
                        "type": "const unsigned char []",
                        "definition": [
                            "const unsigned char signature[] = {137, 80, 78, 71, 13, 10, 26, 10}"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addChunk_IHDR",
            "header": "",
            "params": [
                "ucvector *out",
                "unsigned w",
                "unsigned h",
                "LodePNGColorType colortype",
                "unsigned bitdepth",
                "unsigned interlace_method"
            ],
            "definition": "static unsigned addChunk_IHDR(ucvector *out, unsigned w, unsigned h, LodePNGColorType colortype, unsigned bitdepth, unsigned interlace_method)\n{\n  unsigned char *chunk;\n  unsigned char *data;\n  unsigned int data_idx = 0;\n  {\n    unsigned error = lodepng_chunk_init(&chunk, out, 13, \"IHDR\");\n    if (error)\n    {\n      return error;\n    }\n  }\n  ;\n  data_idx = chunk + 8;\n  lodepng_set32bitInt((&data[data_idx]) + 0, w);\n  lodepng_set32bitInt((&data[data_idx]) + 4, h);\n  data[8 + data_idx] = (unsigned char) bitdepth;\n  data[9 + data_idx] = (unsigned char) colortype;\n  data[10 + data_idx] = 0;\n  data[11 + data_idx] = 0;\n  data[12 + data_idx] = interlace_method;\n  lodepng_chunk_generate_crc(chunk);\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_chunk_generate_crc",
                "lodepng_chunk_init",
                "lodepng_set32bitInt"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "colortype",
                        "type": "LodePNGColorType",
                        "definition": [
                            "LodePNGColorType colortype"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitdepth",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bitdepth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "interlace_method",
                        "type": "unsigned",
                        "definition": [
                            "unsigned interlace_method"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int data_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_chunk_init(&chunk, out, 13, \"IHDR\")"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addChunk_PLTE",
            "header": "",
            "params": [
                "ucvector *out",
                "const LodePNGColorMode *info"
            ],
            "definition": "static unsigned addChunk_PLTE(ucvector *out, const LodePNGColorMode *info)\n{\n  unsigned char *chunk;\n  size_t i;\n  size_t j = 8;\n  if ((info->palettesize == 0) || (info->palettesize > 256))\n  {\n    return 68;\n  }\n  {\n    unsigned error = lodepng_chunk_init(&chunk, out, info->palettesize * 3, \"PLTE\");\n    if (error)\n    {\n      return error;\n    }\n  }\n  ;\n  for (i = 0; i != info->palettesize; i += 1)\n  {\n    chunk[j] = info->palette[(i * 4) + 0];\n    j += 1;\n    chunk[j] = info->palette[(i * 4) + 1];\n    j += 1;\n    chunk[j++] = info->palette[(i * 4) + 2];\n  }\n\n  lodepng_chunk_generate_crc(chunk);\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_chunk_generate_crc",
                "lodepng_chunk_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "size_t",
                        "definition": [
                            "size_t j = 8"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_chunk_init(&chunk, out, info->palettesize * 3, \"PLTE\")"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addChunk_tRNS",
            "header": "",
            "params": [
                "ucvector *out",
                "const LodePNGColorMode *info"
            ],
            "definition": "static unsigned addChunk_tRNS(ucvector *out, const LodePNGColorMode *info)\n{\n  unsigned char *chunk = 0;\n  if (info->colortype == LCT_PALETTE)\n  {\n    helper_addChunk_tRNS_2(out, info, chunk);\n  }\n  else\n    if (info->colortype == LCT_GREY)\n  {\n    if (info->key_defined)\n    {\n      {\n        unsigned error = lodepng_chunk_init(&chunk, out, 2, \"tRNS\");\n        if (error)\n        {\n          return error;\n        }\n      }\n      ;\n      chunk[8] = (unsigned char) (info->key_r >> 8);\n      chunk[9] = (unsigned char) (info->key_r & 255);\n    }\n  }\n  else\n    if (info->colortype == LCT_RGB)\n  {\n    helper_addChunk_tRNS_1(out, info, chunk);\n  }\n  if (chunk)\n  {\n    lodepng_chunk_generate_crc(chunk);\n  }\n  return 0;\n}\n\n",
            "calle": [
                "helper_addChunk_tRNS_1",
                "helper_addChunk_tRNS_2",
                "lodepng_chunk_generate_crc",
                "lodepng_chunk_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *chunk = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_chunk_init(&chunk, out, 2, \"tRNS\")"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addChunk_IDAT",
            "header": "",
            "params": [
                "ucvector *out",
                "const unsigned char *data",
                "size_t datasize",
                "LodePNGCompressSettings *zlibsettings"
            ],
            "definition": "static unsigned addChunk_IDAT(ucvector *out, const unsigned char *data, size_t datasize, LodePNGCompressSettings *zlibsettings)\n{\n  unsigned error = 0;\n  unsigned char *zlib = 0;\n  size_t zlibsize = 0;\n  error = zlib_compress(&zlib, &zlibsize, data, datasize, zlibsettings);\n  if (!error)\n  {\n    error = lodepng_chunk_createv(out, zlibsize, \"IDAT\", zlib);\n  }\n  lodepng_free(zlib);\n  return error;\n}\n\n",
            "calle": [
                "lodepng_chunk_createv",
                "lodepng_free",
                "zlib_compress"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "datasize",
                        "type": "size_t",
                        "definition": [
                            "size_t datasize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "zlibsettings",
                        "type": "LodePNGCompressSettings *",
                        "definition": [
                            "LodePNGCompressSettings *zlibsettings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "zlib",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *zlib = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "zlibsize",
                        "type": "size_t",
                        "definition": [
                            "size_t zlibsize = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addChunk_IEND",
            "header": "",
            "params": [
                "ucvector *out"
            ],
            "definition": "static unsigned addChunk_IEND(ucvector *out)\n{\n  return lodepng_chunk_createv(out, 0, \"IEND\", 0);\n}\n\n",
            "calle": [
                "lodepng_chunk_createv"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addChunk_tEXt",
            "header": "",
            "params": [
                "ucvector *out",
                "const char *keyword",
                "const char *textstring"
            ],
            "definition": "static unsigned addChunk_tEXt(ucvector *out, const char *keyword, const char *textstring)\n{\n  unsigned char *chunk = 0;\n  size_t keysize = lodepng_strlen(keyword);\n  size_t textsize = lodepng_strlen(textstring);\n  size_t size = (keysize + 1) + textsize;\n  if ((keysize < 1) || (keysize > 79))\n  {\n    return 89;\n  }\n  {\n    unsigned error = lodepng_chunk_init(&chunk, out, size, \"tEXt\");\n    if (error)\n    {\n      return error;\n    }\n  }\n  ;\n  lodepng_memcpy(chunk + 8, keyword, keysize);\n  chunk[8 + keysize] = 0;\n  lodepng_memcpy((chunk + 9) + keysize, textstring, textsize);\n  lodepng_chunk_generate_crc(chunk);\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_chunk_generate_crc",
                "lodepng_chunk_init",
                "lodepng_memcpy",
                "lodepng_strlen"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "keyword",
                        "type": "const char *",
                        "definition": [
                            "const char *keyword"
                        ]
                    },
                    {
                        "path": null,
                        "name": "textstring",
                        "type": "const char *",
                        "definition": [
                            "const char *textstring"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *chunk = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "keysize",
                        "type": "size_t",
                        "definition": [
                            "size_t keysize = lodepng_strlen(keyword)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "textsize",
                        "type": "size_t",
                        "definition": [
                            "size_t textsize = lodepng_strlen(textstring)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size = (keysize + 1) + textsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_chunk_init(&chunk, out, size, \"tEXt\")"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addChunk_zTXt",
            "header": "",
            "params": [
                "ucvector *out",
                "const char *keyword",
                "const char *textstring",
                "LodePNGCompressSettings *zlibsettings"
            ],
            "definition": "static unsigned addChunk_zTXt(ucvector *out, const char *keyword, const char *textstring, LodePNGCompressSettings *zlibsettings)\n{\n  unsigned error = 0;\n  unsigned char *chunk = 0;\n  unsigned char *compressed = 0;\n  size_t compressedsize = 0;\n  size_t textsize = lodepng_strlen(textstring);\n  size_t keysize = lodepng_strlen(keyword);\n  if ((keysize < 1) || (keysize > 79))\n  {\n    return 89;\n  }\n  error = zlib_compress(&compressed, &compressedsize, (const unsigned char *) textstring, textsize, zlibsettings);\n  if (!error)\n  {\n    size_t size = (keysize + 2) + compressedsize;\n    error = lodepng_chunk_init(&chunk, out, size, \"zTXt\");\n  }\n  if (!error)\n  {\n    lodepng_memcpy(chunk + 8, keyword, keysize);\n    chunk[8 + keysize] = 0;\n    chunk[9 + keysize] = 0;\n    lodepng_memcpy((chunk + 10) + keysize, compressed, compressedsize);\n    lodepng_chunk_generate_crc(chunk);\n  }\n  lodepng_free(compressed);\n  return error;\n}\n\n",
            "calle": [
                "lodepng_chunk_generate_crc",
                "lodepng_chunk_init",
                "lodepng_free",
                "lodepng_memcpy",
                "lodepng_strlen",
                "zlib_compress"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "keyword",
                        "type": "const char *",
                        "definition": [
                            "const char *keyword"
                        ]
                    },
                    {
                        "path": null,
                        "name": "textstring",
                        "type": "const char *",
                        "definition": [
                            "const char *textstring"
                        ]
                    },
                    {
                        "path": null,
                        "name": "zlibsettings",
                        "type": "LodePNGCompressSettings *",
                        "definition": [
                            "LodePNGCompressSettings *zlibsettings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *chunk = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "compressed",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *compressed = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "compressedsize",
                        "type": "size_t",
                        "definition": [
                            "size_t compressedsize = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "textsize",
                        "type": "size_t",
                        "definition": [
                            "size_t textsize = lodepng_strlen(textstring)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "keysize",
                        "type": "size_t",
                        "definition": [
                            "size_t keysize = lodepng_strlen(keyword)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size = (keysize + 2) + compressedsize"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addChunk_iTXt",
            "header": "",
            "params": [
                "ucvector *out",
                "unsigned compress",
                "const char *keyword",
                "const char *langtag",
                "const char *transkey",
                "const char *textstring",
                "LodePNGCompressSettings *zlibsettings"
            ],
            "definition": "static unsigned addChunk_iTXt(ucvector *out, unsigned compress, const char *keyword, const char *langtag, const char *transkey, const char *textstring, LodePNGCompressSettings *zlibsettings)\n{\n  unsigned error = 0;\n  unsigned char *chunk = 0;\n  unsigned char *compressed = 0;\n  size_t compressedsize = 0;\n  size_t textsize = lodepng_strlen(textstring);\n  size_t keysize = lodepng_strlen(keyword);\n  size_t langsize = lodepng_strlen(langtag);\n  size_t transsize = lodepng_strlen(transkey);\n  if ((keysize < 1) || (keysize > 79))\n  {\n    return 89;\n  }\n  if (compress)\n  {\n    error = zlib_compress(&compressed, &compressedsize, (const unsigned char *) textstring, textsize, zlibsettings);\n  }\n  if (!error)\n  {\n    size_t size = (((((keysize + 3) + langsize) + 1) + transsize) + 1) + ((compress) ? (compressedsize) : (textsize));\n    error = lodepng_chunk_init(&chunk, out, size, \"iTXt\");\n  }\n  if (!error)\n  {\n    helper_addChunk_iTXt_1(compress, keyword, langtag, transkey, textstring, chunk, compressed, compressedsize, textsize, keysize, langsize, transsize);\n  }\n  lodepng_free(compressed);\n  return error;\n}\n\n",
            "calle": [
                "helper_addChunk_iTXt_1",
                "lodepng_chunk_init",
                "lodepng_free",
                "lodepng_strlen",
                "zlib_compress"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "compress",
                        "type": "unsigned",
                        "definition": [
                            "unsigned compress"
                        ]
                    },
                    {
                        "path": null,
                        "name": "keyword",
                        "type": "const char *",
                        "definition": [
                            "const char *keyword"
                        ]
                    },
                    {
                        "path": null,
                        "name": "langtag",
                        "type": "const char *",
                        "definition": [
                            "const char *langtag"
                        ]
                    },
                    {
                        "path": null,
                        "name": "transkey",
                        "type": "const char *",
                        "definition": [
                            "const char *transkey"
                        ]
                    },
                    {
                        "path": null,
                        "name": "textstring",
                        "type": "const char *",
                        "definition": [
                            "const char *textstring"
                        ]
                    },
                    {
                        "path": null,
                        "name": "zlibsettings",
                        "type": "LodePNGCompressSettings *",
                        "definition": [
                            "LodePNGCompressSettings *zlibsettings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *chunk = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "compressed",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *compressed = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "compressedsize",
                        "type": "size_t",
                        "definition": [
                            "size_t compressedsize = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "textsize",
                        "type": "size_t",
                        "definition": [
                            "size_t textsize = lodepng_strlen(textstring)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "keysize",
                        "type": "size_t",
                        "definition": [
                            "size_t keysize = lodepng_strlen(keyword)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "langsize",
                        "type": "size_t",
                        "definition": [
                            "size_t langsize = lodepng_strlen(langtag)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "transsize",
                        "type": "size_t",
                        "definition": [
                            "size_t transsize = lodepng_strlen(transkey)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size = (((((keysize + 3) + langsize) + 1) + transsize) + 1) + ((compress) ? (compressedsize) : (textsize))"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addChunk_bKGD",
            "header": "",
            "params": [
                "ucvector *out",
                "const LodePNGInfo *info"
            ],
            "definition": "static unsigned addChunk_bKGD(ucvector *out, const LodePNGInfo *info)\n{\n  unsigned char *chunk = 0;\n  if ((info->color.colortype == LCT_GREY) || (info->color.colortype == LCT_GREY_ALPHA))\n  {\n    {\n      unsigned error = lodepng_chunk_init(&chunk, out, 2, \"bKGD\");\n      if (error)\n      {\n        return error;\n      }\n    }\n    ;\n    chunk[8] = (unsigned char) (info->background_r >> 8);\n    chunk[9] = (unsigned char) (info->background_r & 255);\n  }\n  else\n    if ((info->color.colortype == LCT_RGB) || (info->color.colortype == LCT_RGBA))\n  {\n    {\n      unsigned error = lodepng_chunk_init(&chunk, out, 6, \"bKGD\");\n      if (error)\n      {\n        return error;\n      }\n    }\n    ;\n    chunk[8] = (unsigned char) (info->background_r >> 8);\n    chunk[9] = (unsigned char) (info->background_r & 255);\n    chunk[10] = (unsigned char) (info->background_g >> 8);\n    chunk[11] = (unsigned char) (info->background_g & 255);\n    chunk[12] = (unsigned char) (info->background_b >> 8);\n    chunk[13] = (unsigned char) (info->background_b & 255);\n  }\n  else\n    if (info->color.colortype == LCT_PALETTE)\n  {\n    {\n      unsigned error = lodepng_chunk_init(&chunk, out, 1, \"bKGD\");\n      if (error)\n      {\n        return error;\n      }\n    }\n    ;\n    chunk[8] = (unsigned char) (info->background_r & 255);\n  }\n  if (chunk)\n  {\n    lodepng_chunk_generate_crc(chunk);\n  }\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_chunk_generate_crc",
                "lodepng_chunk_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGInfo *",
                        "definition": [
                            "const LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *chunk = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_chunk_init(&chunk, out, 1, \"bKGD\")",
                            "unsigned error = lodepng_chunk_init(&chunk, out, 2, \"bKGD\")",
                            "unsigned error = lodepng_chunk_init(&chunk, out, 6, \"bKGD\")"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addChunk_tIME",
            "header": "",
            "params": [
                "ucvector *out",
                "const LodePNGTime *time"
            ],
            "definition": "static unsigned addChunk_tIME(ucvector *out, const LodePNGTime *time)\n{\n  unsigned char *chunk;\n  {\n    unsigned error = lodepng_chunk_init(&chunk, out, 7, \"tIME\");\n    if (error)\n    {\n      return error;\n    }\n  }\n  ;\n  chunk[8] = (unsigned char) (time->year >> 8);\n  chunk[9] = (unsigned char) (time->year & 255);\n  chunk[10] = (unsigned char) time->month;\n  chunk[11] = (unsigned char) time->day;\n  chunk[12] = (unsigned char) time->hour;\n  chunk[13] = (unsigned char) time->minute;\n  chunk[14] = (unsigned char) time->second;\n  lodepng_chunk_generate_crc(chunk);\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_chunk_generate_crc",
                "lodepng_chunk_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "time",
                        "type": "const LodePNGTime *",
                        "definition": [
                            "const LodePNGTime *time"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_chunk_init(&chunk, out, 7, \"tIME\")"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addChunk_pHYs",
            "header": "",
            "params": [
                "ucvector *out",
                "const LodePNGInfo *info"
            ],
            "definition": "static unsigned addChunk_pHYs(ucvector *out, const LodePNGInfo *info)\n{\n  unsigned char *chunk;\n  {\n    unsigned error = lodepng_chunk_init(&chunk, out, 9, \"pHYs\");\n    if (error)\n    {\n      return error;\n    }\n  }\n  ;\n  lodepng_set32bitInt(chunk + 8, info->phys_x);\n  lodepng_set32bitInt(chunk + 12, info->phys_y);\n  chunk[16] = info->phys_unit;\n  lodepng_chunk_generate_crc(chunk);\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_chunk_generate_crc",
                "lodepng_chunk_init",
                "lodepng_set32bitInt"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGInfo *",
                        "definition": [
                            "const LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_chunk_init(&chunk, out, 9, \"pHYs\")"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addChunk_gAMA",
            "header": "",
            "params": [
                "ucvector *out",
                "const LodePNGInfo *info"
            ],
            "definition": "static unsigned addChunk_gAMA(ucvector *out, const LodePNGInfo *info)\n{\n  unsigned char *chunk;\n  {\n    unsigned error = lodepng_chunk_init(&chunk, out, 4, \"gAMA\");\n    if (error)\n    {\n      return error;\n    }\n  }\n  ;\n  lodepng_set32bitInt(chunk + 8, info->gama_gamma);\n  lodepng_chunk_generate_crc(chunk);\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_chunk_generate_crc",
                "lodepng_chunk_init",
                "lodepng_set32bitInt"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGInfo *",
                        "definition": [
                            "const LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_chunk_init(&chunk, out, 4, \"gAMA\")"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addChunk_cHRM",
            "header": "",
            "params": [
                "ucvector *out",
                "const LodePNGInfo *info"
            ],
            "definition": "static unsigned addChunk_cHRM(ucvector *out, const LodePNGInfo *info)\n{\n  unsigned char *chunk;\n  {\n    unsigned error = lodepng_chunk_init(&chunk, out, 32, \"cHRM\");\n    if (error)\n    {\n      return error;\n    }\n  }\n  ;\n  lodepng_set32bitInt(chunk + 8, info->chrm_white_x);\n  lodepng_set32bitInt(chunk + 12, info->chrm_white_y);\n  lodepng_set32bitInt(chunk + 16, info->chrm_red_x);\n  lodepng_set32bitInt(chunk + 20, info->chrm_red_y);\n  lodepng_set32bitInt(chunk + 24, info->chrm_green_x);\n  lodepng_set32bitInt(chunk + 28, info->chrm_green_y);\n  lodepng_set32bitInt(chunk + 32, info->chrm_blue_x);\n  lodepng_set32bitInt(chunk + 36, info->chrm_blue_y);\n  lodepng_chunk_generate_crc(chunk);\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_chunk_generate_crc",
                "lodepng_chunk_init",
                "lodepng_set32bitInt"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGInfo *",
                        "definition": [
                            "const LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_chunk_init(&chunk, out, 32, \"cHRM\")"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addChunk_sRGB",
            "header": "",
            "params": [
                "ucvector *out",
                "const LodePNGInfo *info"
            ],
            "definition": "static unsigned addChunk_sRGB(ucvector *out, const LodePNGInfo *info)\n{\n  unsigned char data = info->srgb_intent;\n  return lodepng_chunk_createv(out, 1, \"sRGB\", &data);\n}\n\n",
            "calle": [
                "lodepng_chunk_createv"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGInfo *",
                        "definition": [
                            "const LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char data = info->srgb_intent"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addChunk_iCCP",
            "header": "",
            "params": [
                "ucvector *out",
                "const LodePNGInfo *info",
                "LodePNGCompressSettings *zlibsettings"
            ],
            "definition": "static unsigned addChunk_iCCP(ucvector *out, const LodePNGInfo *info, LodePNGCompressSettings *zlibsettings)\n{\n  unsigned error = 0;\n  unsigned char *chunk = 0;\n  unsigned char *compressed = 0;\n  size_t compressedsize = 0;\n  size_t keysize = lodepng_strlen(info->iccp_name);\n  if ((keysize < 1) || (keysize > 79))\n  {\n    return 89;\n  }\n  error = zlib_compress(&compressed, &compressedsize, info->iccp_profile, info->iccp_profile_size, zlibsettings);\n  if (!error)\n  {\n    size_t size = (keysize + 2) + compressedsize;\n    error = lodepng_chunk_init(&chunk, out, size, \"iCCP\");\n  }\n  if (!error)\n  {\n    lodepng_memcpy(chunk + 8, info->iccp_name, keysize);\n    chunk[8 + keysize] = 0;\n    chunk[9 + keysize] = 0;\n    lodepng_memcpy((chunk + 10) + keysize, compressed, compressedsize);\n    lodepng_chunk_generate_crc(chunk);\n  }\n  lodepng_free(compressed);\n  return error;\n}\n\n",
            "calle": [
                "lodepng_chunk_generate_crc",
                "lodepng_chunk_init",
                "lodepng_free",
                "lodepng_memcpy",
                "lodepng_strlen",
                "zlib_compress"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGInfo *",
                        "definition": [
                            "const LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "zlibsettings",
                        "type": "LodePNGCompressSettings *",
                        "definition": [
                            "LodePNGCompressSettings *zlibsettings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *chunk = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "compressed",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *compressed = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "compressedsize",
                        "type": "size_t",
                        "definition": [
                            "size_t compressedsize = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "keysize",
                        "type": "size_t",
                        "definition": [
                            "size_t keysize = lodepng_strlen(info->iccp_name)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size = (keysize + 2) + compressedsize"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addChunk_sBIT",
            "header": "",
            "params": [
                "ucvector *out",
                "const LodePNGInfo *info"
            ],
            "definition": "static unsigned addChunk_sBIT(ucvector *out, const LodePNGInfo *info)\n{\n  unsigned bitdepth = (info->color.colortype == LCT_PALETTE) ? (8) : (info->color.bitdepth);\n  unsigned char *chunk = 0;\n  if (info->color.colortype == LCT_GREY)\n  {\n    if ((info->sbit_r == 0) || (info->sbit_r > bitdepth))\n    {\n      return 115;\n    }\n    {\n      unsigned error = lodepng_chunk_init(&chunk, out, 1, \"sBIT\");\n      if (error)\n      {\n        return error;\n      }\n    }\n    ;\n    chunk[8] = info->sbit_r;\n  }\n  else\n    if ((info->color.colortype == LCT_RGB) || (info->color.colortype == LCT_PALETTE))\n  {\n    helper_addChunk_sBIT_3(out, info, bitdepth, chunk);\n  }\n  else\n    if (info->color.colortype == LCT_GREY_ALPHA)\n  {\n    helper_addChunk_sBIT_1(out, info, bitdepth, chunk);\n  }\n  else\n    if (info->color.colortype == LCT_RGBA)\n  {\n    helper_addChunk_sBIT_2(out, info, bitdepth, chunk);\n  }\n  if (chunk)\n  {\n    lodepng_chunk_generate_crc(chunk);\n  }\n  return 0;\n}\n\n",
            "calle": [
                "helper_addChunk_sBIT_1",
                "helper_addChunk_sBIT_2",
                "helper_addChunk_sBIT_3",
                "lodepng_chunk_generate_crc",
                "lodepng_chunk_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGInfo *",
                        "definition": [
                            "const LodePNGInfo *info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitdepth",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bitdepth = (info->color.colortype == LCT_PALETTE) ? (8) : (info->color.bitdepth)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *chunk = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_chunk_init(&chunk, out, 1, \"sBIT\")"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "filterScanline",
            "header": "",
            "params": [
                "unsigned char *out",
                "const unsigned char *scanline",
                "const unsigned char *prevline",
                "size_t length",
                "size_t bytewidth",
                "unsigned char filterType"
            ],
            "definition": "static void filterScanline(unsigned char *out, const unsigned char *scanline, const unsigned char *prevline, size_t length, size_t bytewidth, unsigned char filterType)\n{\n  size_t i;\n  switch (filterType)\n  {\n    case 0:\n    {\n      for (i = 0; i != length; i += 1)\n        out[i] = scanline[i];\n\n      break;\n    }\n\n    case 1:\n    {\n      for (i = 0; i != bytewidth; i += 1)\n        out[i] = scanline[i];\n\n      for (i = bytewidth; i < length; i += 1)\n        out[i] = scanline[i] - scanline[i - bytewidth];\n\n      break;\n    }\n\n    case 2:\n    {\n      if (prevline)\n      {\n        for (i = 0; i != length; i += 1)\n          out[i] = scanline[i] - prevline[i];\n\n      }\n      else\n      {\n        for (i = 0; i != length; i += 1)\n          out[i] = scanline[i];\n\n      }\n      break;\n    }\n\n    case 3:\n    {\n      if (prevline)\n      {\n        for (i = 0; i != bytewidth; i += 1)\n          out[i] = scanline[i] - (prevline[i] >> 1);\n\n        for (i = bytewidth; i < length; i += 1)\n          out[i] = scanline[i] - ((scanline[i - bytewidth] + prevline[i]) >> 1);\n\n      }\n      else\n      {\n        for (i = 0; i != bytewidth; i += 1)\n          out[i] = scanline[i];\n\n        for (i = bytewidth; i < length; i += 1)\n          out[i] = scanline[i] - (scanline[i - bytewidth] >> 1);\n\n      }\n      break;\n    }\n\n    case 4:\n    {\n      if (prevline)\n      {\n        for (i = 0; i != bytewidth; i += 1)\n          out[i] = scanline[i] - prevline[i];\n\n        for (i = bytewidth; i < length; i += 1)\n        {\n          out[i] = scanline[i] - paethPredictor(scanline[i - bytewidth], prevline[i], prevline[i - bytewidth]);\n        }\n\n      }\n      else\n      {\n        for (i = 0; i != bytewidth; i += 1)\n          out[i] = scanline[i];\n\n        for (i = bytewidth; i < length; i += 1)\n          out[i] = scanline[i] - scanline[i - bytewidth];\n\n      }\n      break;\n    }\n\n    default:\n    {\n      return;\n    }\n\n  }\n\n}\n\n",
            "calle": [
                "paethPredictor"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "scanline",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *scanline"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *prevline"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "size_t",
                        "definition": [
                            "size_t length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bytewidth",
                        "type": "size_t",
                        "definition": [
                            "size_t bytewidth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "filterType",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char filterType"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "ilog2",
            "header": "",
            "params": [
                "size_t i"
            ],
            "definition": "static size_t ilog2(size_t i)\n{\n  size_t result = 0;\n  if (i >= 65536)\n  {\n    result += 16;\n    i >>= 16;\n  }\n  if (i >= 256)\n  {\n    result += 8;\n    i >>= 8;\n  }\n  if (i >= 16)\n  {\n    result += 4;\n    i >>= 4;\n  }\n  if (i >= 4)\n  {\n    result += 2;\n    i >>= 2;\n  }\n  if (i >= 2)\n  {\n    result += 1;\n  }\n  return result;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "result",
                        "type": "size_t",
                        "definition": [
                            "size_t result = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "ilog2i",
            "header": "",
            "params": [
                "size_t i"
            ],
            "definition": "static size_t ilog2i(size_t i)\n{\n  size_t l;\n  if (i == 0)\n  {\n    return 0;\n  }\n  l = ilog2(i);\n  return (i * l) + ((i - (1u << l)) << 1u);\n}\n\n",
            "calle": [
                "ilog2"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "l",
                        "type": "size_t",
                        "definition": [
                            "size_t l"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "filter",
            "header": "",
            "params": [
                "unsigned char *out",
                "const unsigned char *in",
                "unsigned w",
                "unsigned h",
                "const LodePNGColorMode *color",
                "const LodePNGEncoderSettings *settings"
            ],
            "definition": "static unsigned filter(unsigned char *out, const unsigned char *in, unsigned w, unsigned h, const LodePNGColorMode *color, const LodePNGEncoderSettings *settings)\n{\n  unsigned bpp = lodepng_get_bpp(color);\n  size_t linebytes = lodepng_get_raw_size_idat(w, 1, bpp) - 1u;\n  size_t bytewidth = (bpp + 7u) / 8u;\n  const unsigned char *prevline = 0;\n  unsigned int prevline_idx = 0;\n  unsigned x;\n  unsigned y;\n  unsigned error = 0;\n  LodePNGFilterStrategy strategy = settings->filter_strategy;\n  if (settings->filter_palette_zero && ((color->colortype == LCT_PALETTE) || (color->bitdepth < 8)))\n  {\n    strategy = LFS_ZERO;\n  }\n  if (bpp == 0)\n  {\n    return 31;\n  }\n  if ((strategy >= LFS_ZERO) && (strategy <= LFS_FOUR))\n  {\n    unsigned char type = (unsigned char) strategy;\n    for (y = 0; y != h; y += 1)\n    {\n      size_t outindex = (1 + linebytes) * y;\n      size_t inindex = linebytes * y;\n      out[outindex] = type;\n      filterScanline(&out[outindex + 1], &in[inindex], prevline, linebytes, bytewidth, type);\n      prevline_idx = &in[inindex];\n    }\n\n  }\n  else\n    if (strategy == LFS_MINSUM)\n  {\n    helper_filter_1(&linebytes, &prevline_idx, &x, &y, &error, out, in, h, bytewidth, prevline);\n  }\n  else\n    if (strategy == LFS_ENTROPY)\n  {\n    helper_filter_2(&linebytes, &prevline_idx, &x, &y, &error, out, in, h, bytewidth, prevline);\n  }\n  else\n    if (strategy == LFS_PREDEFINED)\n  {\n    for (y = 0; y != h; y += 1)\n    {\n      size_t outindex = (1 + linebytes) * y;\n      size_t inindex = linebytes * y;\n      unsigned char type = settings->predefined_filters[y];\n      out[outindex] = type;\n      filterScanline(&out[outindex + 1], &in[inindex], prevline, linebytes, bytewidth, type);\n      prevline_idx = &in[inindex];\n    }\n\n  }\n  else\n    if (strategy == LFS_BRUTE_FORCE)\n  {\n    helper_filter_3(&linebytes, &prevline_idx, &x, &y, &error, out, in, h, settings, bytewidth, prevline);\n  }\n  else\n    return 88;\n  return error;\n}\n\n",
            "calle": [
                "filterScanline",
                "helper_filter_1",
                "helper_filter_2",
                "helper_filter_3",
                "lodepng_get_bpp",
                "lodepng_get_raw_size_idat"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "color",
                        "type": "const LodePNGColorMode *",
                        "definition": [
                            "const LodePNGColorMode *color"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGEncoderSettings *",
                        "definition": [
                            "const LodePNGEncoderSettings *settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bpp = lodepng_get_bpp(color)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "linebytes",
                        "type": "size_t",
                        "definition": [
                            "size_t linebytes = lodepng_get_raw_size_idat(w, 1, bpp) - 1u"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bytewidth",
                        "type": "size_t",
                        "definition": [
                            "size_t bytewidth = (bpp + 7u) / 8u"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *prevline = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int prevline_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "x",
                        "type": "unsigned",
                        "definition": [
                            "unsigned x"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y",
                        "type": "unsigned",
                        "definition": [
                            "unsigned y"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "strategy",
                        "type": "LodePNGFilterStrategy",
                        "definition": [
                            "LodePNGFilterStrategy strategy = settings->filter_strategy"
                        ]
                    },
                    {
                        "path": null,
                        "name": "type",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char type = (unsigned char) strategy",
                            "unsigned char type = settings->predefined_filters[y]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outindex",
                        "type": "size_t",
                        "definition": [
                            "size_t outindex = (1 + linebytes) * y"
                        ]
                    },
                    {
                        "path": null,
                        "name": "inindex",
                        "type": "size_t",
                        "definition": [
                            "size_t inindex = linebytes * y"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addPaddingBits",
            "header": "",
            "params": [
                "unsigned char *out",
                "const unsigned char *in",
                "size_t olinebits",
                "size_t ilinebits",
                "unsigned h"
            ],
            "definition": "static void addPaddingBits(unsigned char *out, const unsigned char *in, size_t olinebits, size_t ilinebits, unsigned h)\n{\n  unsigned y;\n  size_t diff = olinebits - ilinebits;\n  size_t obp = 0;\n  size_t ibp = 0;\n  for (y = 0; y != h; y += 1)\n  {\n    size_t x;\n    for (x = 0; x < ilinebits; x += 1)\n    {\n      unsigned char bit = readBitFromReversedStream(&ibp, in);\n      setBitOfReversedStream(&obp, out, bit);\n    }\n\n    for (x = 0; x != diff; x += 1)\n      setBitOfReversedStream(&obp, out, 0);\n\n  }\n\n}\n\n",
            "calle": [
                "readBitFromReversedStream",
                "setBitOfReversedStream"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "olinebits",
                        "type": "size_t",
                        "definition": [
                            "size_t olinebits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ilinebits",
                        "type": "size_t",
                        "definition": [
                            "size_t ilinebits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y",
                        "type": "unsigned",
                        "definition": [
                            "unsigned y"
                        ]
                    },
                    {
                        "path": null,
                        "name": "diff",
                        "type": "size_t",
                        "definition": [
                            "size_t diff = olinebits - ilinebits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "obp",
                        "type": "size_t",
                        "definition": [
                            "size_t obp = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ibp",
                        "type": "size_t",
                        "definition": [
                            "size_t ibp = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "x",
                        "type": "size_t",
                        "definition": [
                            "size_t x"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bit",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char bit = readBitFromReversedStream(&ibp, in)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "Adam7_interlace",
            "header": "",
            "params": [
                "unsigned char *out",
                "const unsigned char *in",
                "unsigned w",
                "unsigned h",
                "unsigned bpp"
            ],
            "definition": "static void Adam7_interlace(unsigned char *out, const unsigned char *in, unsigned w, unsigned h, unsigned bpp)\n{\n  unsigned passw[7];\n  unsigned passh[7];\n  size_t filter_passstart[8];\n  size_t padded_passstart[8];\n  size_t passstart[8];\n  unsigned i;\n  Adam7_getpassvalues(passw, passh, filter_passstart, padded_passstart, passstart, w, h, bpp);\n  if (bpp >= 8)\n  {\n    for (i = 0; i != 7; i += 1)\n    {\n      unsigned x;\n      unsigned y;\n      unsigned b;\n      size_t bytewidth = bpp / 8u;\n      for (y = 0; y < passh[i]; y += 1)\n        for (x = 0; x < passw[i]; x += 1)\n      {\n        size_t pixelinstart = ((((ADAM7_IY[i] + (y * ADAM7_DY[i])) * w) + ADAM7_IX[i]) + (x * ADAM7_DX[i])) * bytewidth;\n        size_t pixeloutstart = passstart[i] + (((y * passw[i]) + x) * bytewidth);\n        for (b = 0; b < bytewidth; b += 1)\n        {\n          out[pixeloutstart + b] = in[pixelinstart + b];\n        }\n\n      }\n\n\n    }\n\n  }\n  else\n  {\n    helper_Adam7_interlace_1(&i, out, in, w, bpp, passw, passh, passstart);\n  }\n}\n\n",
            "calle": [
                "Adam7_getpassvalues",
                "helper_Adam7_interlace_1"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bpp"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passw",
                        "type": "unsigned [7]",
                        "definition": [
                            "unsigned passw[7]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passh",
                        "type": "unsigned [7]",
                        "definition": [
                            "unsigned passh[7]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "filter_passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t filter_passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "padded_passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t padded_passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "x",
                        "type": "unsigned",
                        "definition": [
                            "unsigned x"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y",
                        "type": "unsigned",
                        "definition": [
                            "unsigned y"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned",
                        "definition": [
                            "unsigned b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bytewidth",
                        "type": "size_t",
                        "definition": [
                            "size_t bytewidth = bpp / 8u"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pixelinstart",
                        "type": "size_t",
                        "definition": [
                            "size_t pixelinstart = ((((ADAM7_IY[i] + (y * ADAM7_DY[i])) * w) + ADAM7_IX[i]) + (x * ADAM7_DX[i])) * bytewidth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pixeloutstart",
                        "type": "size_t",
                        "definition": [
                            "size_t pixeloutstart = passstart[i] + (((y * passw[i]) + x) * bytewidth)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ADAM7_IY",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "ADAM7_DY",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "ADAM7_IX",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "ADAM7_DX",
                        "type": "None",
                        "definition": []
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "preProcessScanlines",
            "header": "",
            "params": [
                "unsigned char **out",
                "size_t *outsize",
                "const unsigned char *in",
                "unsigned w",
                "unsigned h",
                "const LodePNGInfo *info_png",
                "const LodePNGEncoderSettings *settings"
            ],
            "definition": "static unsigned preProcessScanlines(unsigned char **out, size_t *outsize, const unsigned char *in, unsigned w, unsigned h, const LodePNGInfo *info_png, const LodePNGEncoderSettings *settings)\n{\n  unsigned bpp = lodepng_get_bpp(&info_png->color);\n  unsigned error = 0;\n  if (info_png->interlace_method == 0)\n  {\n    helper_preProcessScanlines_1(&error, out, outsize, in, w, h, info_png, settings, bpp);\n  }\n  else\n  {\n    helper_preProcessScanlines_2(&error, out, outsize, in, w, h, info_png, settings, bpp);\n  }\n  return error;\n}\n\n",
            "calle": [
                "helper_preProcessScanlines_1",
                "helper_preProcessScanlines_2",
                "lodepng_get_bpp"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char **",
                        "definition": [
                            "unsigned char **out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outsize",
                        "type": "size_t *",
                        "definition": [
                            "size_t *outsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info_png",
                        "type": "const LodePNGInfo *",
                        "definition": [
                            "const LodePNGInfo *info_png"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGEncoderSettings *",
                        "definition": [
                            "const LodePNGEncoderSettings *settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bpp = lodepng_get_bpp(&info_png->color)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "addUnknownChunks",
            "header": "",
            "params": [
                "ucvector *out",
                "unsigned char *data",
                "size_t datasize"
            ],
            "definition": "static unsigned addUnknownChunks(ucvector *out, unsigned char *data, size_t datasize)\n{\n  unsigned char *inchunk = data;\n  unsigned int inchunk_idx = 0;\n  while (((size_t) ((&inchunk[inchunk_idx]) - data)) < datasize)\n  {\n    {\n      unsigned error = lodepng_chunk_append(&out->data, &out->size, inchunk);\n      if (error)\n      {\n        return error;\n      }\n    }\n    ;\n    out->allocsize = out->size;\n    inchunk_idx = lodepng_chunk_next(inchunk_idx, data + datasize);\n  }\n\n  return 0;\n}\n\n",
            "calle": [
                "lodepng_chunk_append",
                "lodepng_chunk_next"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector *",
                        "definition": [
                            "ucvector *out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "datasize",
                        "type": "size_t",
                        "definition": [
                            "size_t datasize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "inchunk",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *inchunk = data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "inchunk_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int inchunk_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_chunk_append(&out->data, &out->size, inchunk)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "isGrayICCProfile",
            "header": "",
            "params": [
                "const unsigned char *profile",
                "unsigned size"
            ],
            "definition": "static unsigned isGrayICCProfile(const unsigned char *profile, unsigned size)\n{\n  if (size < 20)\n  {\n    return 0;\n  }\n  return (((profile[16] == 'G') && (profile[17] == 'R')) && (profile[18] == 'A')) && (profile[19] == 'Y');\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "profile",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *profile"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "unsigned",
                        "definition": [
                            "unsigned size"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "isRGBICCProfile",
            "header": "",
            "params": [
                "const unsigned char *profile",
                "unsigned size"
            ],
            "definition": "static unsigned isRGBICCProfile(const unsigned char *profile, unsigned size)\n{\n  if (size < 20)\n  {\n    return 0;\n  }\n  return (((profile[16] == 'R') && (profile[17] == 'G')) && (profile[18] == 'B')) && (profile[19] == ' ');\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "profile",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *profile"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "unsigned",
                        "definition": [
                            "unsigned size"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_HuffmanTree_makeTable_1",
            "header": "",
            "params": [
                "size_t * const numpresent_ref",
                "HuffmanTree * const tree",
                "static const unsigned mask",
                "size_t i"
            ],
            "definition": "unsigned helper_HuffmanTree_makeTable_1(size_t * const numpresent_ref, HuffmanTree * const tree, static const unsigned mask, size_t i)\n{\n  size_t numpresent = *numpresent_ref;\n  unsigned l = tree->lengths[i];\n  unsigned symbol;\n  unsigned reverse;\n  if (l == 0)\n  {\n    continue;\n  }\n  symbol = tree->codes[i];\n  reverse = reverseBits(symbol, l);\n  numpresent += 1;\n  if (l <= 9u)\n  {\n    unsigned num = 1u << (9u - l);\n    unsigned j;\n    for (j = 0; j < num; j += 1)\n    {\n      unsigned index = reverse | (j << l);\n      if (tree->table_len[index] != 16)\n      {\n        return 55;\n      }\n      tree->table_len[index] = l;\n      tree->table_value[index] = i;\n    }\n\n  }\n  else\n  {\n    helper_helper_HuffmanTree_makeTable_1_1(tree, mask, i, l, reverse);\n  }\n  *numpresent_ref = numpresent;\n}\n\n",
            "calle": [
                "helper_helper_HuffmanTree_makeTable_1_1",
                "reverseBits"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "numpresent_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const numpresent_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree",
                        "type": "HuffmanTree * const",
                        "definition": [
                            "HuffmanTree * const tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mask",
                        "type": "const unsigned",
                        "definition": [
                            "static const unsigned mask"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numpresent",
                        "type": "size_t",
                        "definition": [
                            "size_t numpresent = *numpresent_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "l",
                        "type": "unsigned",
                        "definition": [
                            "unsigned l = tree->lengths[i]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "symbol",
                        "type": "unsigned",
                        "definition": [
                            "unsigned symbol"
                        ]
                    },
                    {
                        "path": null,
                        "name": "reverse",
                        "type": "unsigned",
                        "definition": [
                            "unsigned reverse"
                        ]
                    },
                    {
                        "path": null,
                        "name": "num",
                        "type": "unsigned",
                        "definition": [
                            "unsigned num = 1u << (9u - l)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "unsigned",
                        "definition": [
                            "unsigned j"
                        ]
                    },
                    {
                        "path": null,
                        "name": "index",
                        "type": "unsigned",
                        "definition": [
                            "unsigned index = reverse | (j << l)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_lodepng_huffman_code_lengths_1",
            "header": "",
            "params": [
                "unsigned * const error_ref",
                "unsigned * const i_ref",
                "unsigned * const lengths",
                "unsigned maxbitlen",
                "size_t numpresent",
                "BPMNode * const leaves",
                "unsigned int leaves_idx"
            ],
            "definition": "void helper_lodepng_huffman_code_lengths_1(unsigned * const error_ref, unsigned * const i_ref, unsigned * const lengths, unsigned maxbitlen, size_t numpresent, BPMNode * const leaves, unsigned int leaves_idx)\n{\n  unsigned error = *error_ref;\n  unsigned i = *i_ref;\n  BPMLists lists;\n  BPMNode *node;\n  unsigned int node_idx = 0;\n  bpmnode_sort(leaves, numpresent);\n  lists.listsize = maxbitlen;\n  lists.memsize = (2 * maxbitlen) * (maxbitlen + 1);\n  lists.nextfree = 0;\n  lists.numfree = lists.memsize;\n  lists.memory = (BPMNode *) lodepng_malloc(lists.memsize * (sizeof(*lists.memory)));\n  lists.freelist = (BPMNode **) lodepng_malloc(lists.memsize * (sizeof(BPMNode *)));\n  lists.chains0 = (BPMNode **) lodepng_malloc(lists.listsize * (sizeof(BPMNode *)));\n  lists.chains1 = (BPMNode **) lodepng_malloc(lists.listsize * (sizeof(BPMNode *)));\n  if ((((!lists.memory) || (!lists.freelist)) || (!lists.chains0)) || (!lists.chains1))\n  {\n    error = 83;\n  }\n  if (!error)\n  {\n    for (i = 0; i != lists.memsize; i += 1)\n      lists.freelist[i] = &lists.memory[i];\n\n    bpmnode_create(&lists, leaves[0 + leaves_idx].weight, 1, 0);\n    bpmnode_create(&lists, leaves[1 + leaves_idx].weight, 2, 0);\n    for (i = 0; i != lists.listsize; i += 1)\n    {\n      lists.chains0[i] = &lists.memory[0];\n      lists.chains1[i] = &lists.memory[1];\n    }\n\n    for (i = 2; i != ((2 * numpresent) - 2); i += 1)\n      boundaryPM(&lists, leaves, numpresent, ((int) maxbitlen) - 1, (int) i);\n\n    for (node_idx = lists.chains1[maxbitlen - 1]; node; node_idx = node_idx->tail)\n    {\n      for (i = 0; i != node->index; i += 1)\n        ++lengths[leaves[i + leaves_idx].index];\n\n    }\n\n  }\n  lodepng_free(lists.memory);\n  lodepng_free(lists.freelist);\n  lodepng_free(lists.chains0);\n  lodepng_free(lists.chains1);\n  *error_ref = error;\n  *i_ref = i;\n}\n\n",
            "calle": [
                "boundaryPM",
                "bpmnode_create",
                "bpmnode_sort",
                "lodepng_free",
                "lodepng_malloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lengths",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const lengths"
                        ]
                    },
                    {
                        "path": null,
                        "name": "maxbitlen",
                        "type": "unsigned",
                        "definition": [
                            "unsigned maxbitlen"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numpresent",
                        "type": "size_t",
                        "definition": [
                            "size_t numpresent"
                        ]
                    },
                    {
                        "path": null,
                        "name": "leaves",
                        "type": "BPMNode * const",
                        "definition": [
                            "BPMNode * const leaves"
                        ]
                    },
                    {
                        "path": null,
                        "name": "leaves_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int leaves_idx"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lists",
                        "type": "BPMLists",
                        "definition": [
                            "BPMLists lists"
                        ]
                    },
                    {
                        "path": null,
                        "name": "node",
                        "type": "BPMNode *",
                        "definition": [
                            "BPMNode *node"
                        ]
                    },
                    {
                        "path": null,
                        "name": "node_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int node_idx = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_getTreeInflateDynamic_1",
            "header": "",
            "params": [
                "unsigned * const error_ref",
                "unsigned * const n_ref",
                "unsigned * const HLIT_ref",
                "unsigned * const i_ref",
                "unsigned int * const bitlen_ll_idx_ref",
                "unsigned int * const bitlen_d_idx_ref",
                "unsigned int * const bitlen_cl_idx_ref",
                "HuffmanTree * const tree_ll",
                "HuffmanTree * const tree_d",
                "LodePNGBitReader * const reader",
                "unsigned HDIST",
                "unsigned HCLEN",
                "unsigned * const bitlen_ll",
                "unsigned * const bitlen_d",
                "unsigned * const bitlen_cl",
                "HuffmanTree tree_cl"
            ],
            "definition": "void helper_getTreeInflateDynamic_1(unsigned * const error_ref, unsigned * const n_ref, unsigned * const HLIT_ref, unsigned * const i_ref, unsigned int * const bitlen_ll_idx_ref, unsigned int * const bitlen_d_idx_ref, unsigned int * const bitlen_cl_idx_ref, HuffmanTree * const tree_ll, HuffmanTree * const tree_d, LodePNGBitReader * const reader, unsigned HDIST, unsigned HCLEN, unsigned * const bitlen_ll, unsigned * const bitlen_d, unsigned * const bitlen_cl, HuffmanTree tree_cl)\n{\n  unsigned error = *error_ref;\n  unsigned n = *n_ref;\n  unsigned HLIT = *HLIT_ref;\n  unsigned i = *i_ref;\n  unsigned int bitlen_ll_idx = *bitlen_ll_idx_ref;\n  unsigned int bitlen_d_idx = *bitlen_d_idx_ref;\n  unsigned int bitlen_cl_idx = *bitlen_cl_idx_ref;\n  if (lodepng_gtofl(reader->bp, HCLEN * 3, reader->bitsize))\n  {\n    {\n      error = 50;\n      break;\n    }\n    ;\n  }\n  for (i = 0; i != HCLEN; i += 1)\n  {\n    ensureBits9(reader, 3);\n    bitlen_cl[CLCL_ORDER[i] + bitlen_cl_idx] = readBits(reader, 3);\n  }\n\n  for (i = HCLEN; i != 19; i += 1)\n  {\n    bitlen_cl[CLCL_ORDER[i] + bitlen_cl_idx] = 0;\n  }\n\n  error = HuffmanTree_makeFromLengths(&tree_cl, bitlen_cl, 19, 7);\n  if (error)\n  {\n    break;\n  }\n  bitlen_ll_idx = (unsigned *) lodepng_malloc(288 * (sizeof(unsigned)));\n  bitlen_d_idx = (unsigned *) lodepng_malloc(32 * (sizeof(unsigned)));\n  if ((!(&bitlen_ll[bitlen_ll_idx])) || (!(&bitlen_d[bitlen_d_idx])))\n  {\n    error = 83;\n    break;\n  }\n  ;\n  lodepng_memset(bitlen_ll, 0, 288 * (sizeof(*(&bitlen_ll[bitlen_ll_idx]))));\n  lodepng_memset(bitlen_d, 0, 32 * (sizeof(*(&bitlen_d[bitlen_d_idx]))));\n  i = 0;\n  while (i < (HLIT + HDIST))\n  {\n    helper_helper_getTreeInflateDynamic_1_1(&error, &n, &HLIT, &i, &bitlen_ll_idx, &bitlen_d_idx, reader, HDIST, bitlen_ll, bitlen_d, tree_cl);\n  }\n\n  if (error)\n  {\n    break;\n  }\n  if (bitlen_ll[256 + bitlen_ll_idx] == 0)\n  {\n    error = 64;\n    break;\n  }\n  ;\n  error = HuffmanTree_makeFromLengths(tree_ll, bitlen_ll, 288, 15);\n  if (error)\n  {\n    break;\n  }\n  error = HuffmanTree_makeFromLengths(tree_d, bitlen_d, 32, 15);\n  break;\n  *error_ref = error;\n  *n_ref = n;\n  *HLIT_ref = HLIT;\n  *i_ref = i;\n  *bitlen_ll_idx_ref = bitlen_ll_idx;\n  *bitlen_d_idx_ref = bitlen_d_idx;\n  *bitlen_cl_idx_ref = bitlen_cl_idx;\n}\n\n",
            "calle": [
                "HuffmanTree_makeFromLengths",
                "ensureBits9",
                "helper_helper_getTreeInflateDynamic_1_1",
                "lodepng_gtofl",
                "lodepng_malloc",
                "lodepng_memset",
                "readBits"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "n_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const n_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HLIT_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const HLIT_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_ll_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const bitlen_ll_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_d_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const bitlen_d_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_cl_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const bitlen_cl_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_ll",
                        "type": "HuffmanTree * const",
                        "definition": [
                            "HuffmanTree * const tree_ll"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_d",
                        "type": "HuffmanTree * const",
                        "definition": [
                            "HuffmanTree * const tree_d"
                        ]
                    },
                    {
                        "path": null,
                        "name": "reader",
                        "type": "LodePNGBitReader * const",
                        "definition": [
                            "LodePNGBitReader * const reader"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HDIST",
                        "type": "unsigned",
                        "definition": [
                            "unsigned HDIST"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HCLEN",
                        "type": "unsigned",
                        "definition": [
                            "unsigned HCLEN"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_ll",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const bitlen_ll"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_d",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const bitlen_d"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_cl",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const bitlen_cl"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_cl",
                        "type": "HuffmanTree",
                        "definition": [
                            "HuffmanTree tree_cl"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "n",
                        "type": "unsigned",
                        "definition": [
                            "unsigned n = *n_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HLIT",
                        "type": "unsigned",
                        "definition": [
                            "unsigned HLIT = *HLIT_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_ll_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int bitlen_ll_idx = *bitlen_ll_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_d_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int bitlen_d_idx = *bitlen_d_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_cl_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int bitlen_cl_idx = *bitlen_cl_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "CLCL_ORDER",
                        "type": "None",
                        "definition": []
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_inflateHuffmanBlock_1",
            "header": "",
            "params": [
                "unsigned * const error_ref",
                "int * const done_ref",
                "ucvector * const out",
                "LodePNGBitReader * const reader",
                "size_t max_output_size",
                "HuffmanTree tree_ll",
                "HuffmanTree tree_d",
                "const size_t reserved_size"
            ],
            "definition": "void helper_inflateHuffmanBlock_1(unsigned * const error_ref, int * const done_ref, ucvector * const out, LodePNGBitReader * const reader, size_t max_output_size, HuffmanTree tree_ll, HuffmanTree tree_d, const size_t reserved_size)\n{\n  unsigned error = *error_ref;\n  int done = *done_ref;\n  unsigned code_ll;\n  ensureBits32(reader, 30);\n  code_ll = huffmanDecodeSymbol(reader, &tree_ll);\n  if (code_ll <= 255)\n  {\n    out->data[out->size++] = (unsigned char) code_ll;\n    code_ll = huffmanDecodeSymbol(reader, &tree_ll);\n  }\n  if (code_ll <= 255)\n  {\n    out->data[out->size++] = (unsigned char) code_ll;\n  }\n  else\n    if ((code_ll >= 257) && (code_ll <= 285))\n  {\n    helper_helper_inflateHuffmanBlock_1_1(&error, out, reader, tree_d, code_ll);\n  }\n  else\n    if (code_ll == 256)\n  {\n    done = 1;\n  }\n  else\n  {\n    {\n      error = 16;\n      break;\n    }\n    ;\n  }\n  if ((out->allocsize - out->size) < reserved_size)\n  {\n    if (!ucvector_reserve(out, out->size + reserved_size))\n    {\n      error = 83;\n      break;\n    }\n    ;\n  }\n  if (reader->bp > reader->bitsize)\n  {\n    {\n      error = 51;\n      break;\n    }\n    ;\n  }\n  if (max_output_size && (out->size > max_output_size))\n  {\n    {\n      error = 109;\n      break;\n    }\n    ;\n  }\n  *error_ref = error;\n  *done_ref = done;\n}\n\n",
            "calle": [
                "ensureBits32",
                "helper_helper_inflateHuffmanBlock_1_1",
                "huffmanDecodeSymbol",
                "ucvector_reserve"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "done_ref",
                        "type": "int * const",
                        "definition": [
                            "int * const done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector * const",
                        "definition": [
                            "ucvector * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "reader",
                        "type": "LodePNGBitReader * const",
                        "definition": [
                            "LodePNGBitReader * const reader"
                        ]
                    },
                    {
                        "path": null,
                        "name": "max_output_size",
                        "type": "size_t",
                        "definition": [
                            "size_t max_output_size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_ll",
                        "type": "HuffmanTree",
                        "definition": [
                            "HuffmanTree tree_ll"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_d",
                        "type": "HuffmanTree",
                        "definition": [
                            "HuffmanTree tree_d"
                        ]
                    },
                    {
                        "path": null,
                        "name": "reserved_size",
                        "type": "const size_t",
                        "definition": [
                            "const size_t reserved_size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "done",
                        "type": "int",
                        "definition": [
                            "int done = *done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "code_ll",
                        "type": "unsigned",
                        "definition": [
                            "unsigned code_ll"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_encodeLZ77_1",
            "header": "",
            "params": [
                "size_t * const pos_ref",
                "unsigned * const i_ref",
                "unsigned * const error_ref",
                "unsigned * const numzeros_ref",
                "unsigned * const offset_ref",
                "unsigned * const length_ref",
                "unsigned * const lazy_ref",
                "unsigned * const lazylength_ref",
                "unsigned * const lazyoffset_ref",
                "unsigned * const hashval_ref",
                "unsigned * const current_offset_ref",
                "unsigned * const current_length_ref",
                "unsigned * const prev_offset_ref",
                "unsigned int * const lastptr_idx_ref",
                "unsigned int * const foreptr_idx_ref",
                "unsigned int * const backptr_idx_ref",
                "unsigned * const hashpos_ref",
                "uivector * const out",
                "Hash * const hash",
                "const unsigned char * const in",
                "size_t insize",
                "unsigned windowsize",
                "unsigned minmatch",
                "unsigned nicematch",
                "unsigned lazymatching",
                "unsigned maxchainlength",
                "unsigned maxlazymatch",
                "unsigned usezeros",
                "const unsigned char * const lastptr",
                "const unsigned char * const foreptr",
                "const unsigned char * const backptr"
            ],
            "definition": "void helper_encodeLZ77_1(size_t * const pos_ref, unsigned * const i_ref, unsigned * const error_ref, unsigned * const numzeros_ref, unsigned * const offset_ref, unsigned * const length_ref, unsigned * const lazy_ref, unsigned * const lazylength_ref, unsigned * const lazyoffset_ref, unsigned * const hashval_ref, unsigned * const current_offset_ref, unsigned * const current_length_ref, unsigned * const prev_offset_ref, unsigned int * const lastptr_idx_ref, unsigned int * const foreptr_idx_ref, unsigned int * const backptr_idx_ref, unsigned * const hashpos_ref, uivector * const out, Hash * const hash, const unsigned char * const in, size_t insize, unsigned windowsize, unsigned minmatch, unsigned nicematch, unsigned lazymatching, unsigned maxchainlength, unsigned maxlazymatch, unsigned usezeros, const unsigned char * const lastptr, const unsigned char * const foreptr, const unsigned char * const backptr)\n{\n  size_t pos = *pos_ref;\n  unsigned i = *i_ref;\n  unsigned error = *error_ref;\n  unsigned numzeros = *numzeros_ref;\n  unsigned offset = *offset_ref;\n  unsigned length = *length_ref;\n  unsigned lazy = *lazy_ref;\n  unsigned lazylength = *lazylength_ref;\n  unsigned lazyoffset = *lazyoffset_ref;\n  unsigned hashval = *hashval_ref;\n  unsigned current_offset = *current_offset_ref;\n  unsigned current_length = *current_length_ref;\n  unsigned prev_offset = *prev_offset_ref;\n  unsigned int lastptr_idx = *lastptr_idx_ref;\n  unsigned int foreptr_idx = *foreptr_idx_ref;\n  unsigned int backptr_idx = *backptr_idx_ref;\n  unsigned hashpos = *hashpos_ref;\n  size_t wpos = pos & (windowsize - 1);\n  unsigned chainlength = 0;\n  hashval = getHash(in, insize, pos);\n  if (usezeros && (hashval == 0))\n  {\n    if (numzeros == 0)\n    {\n      numzeros = countZeros(in, insize, pos);\n    }\n    else\n      if (((pos + numzeros) > insize) || (in[(pos + numzeros) - 1] != 0))\n    {\n      numzeros -= 1;\n    }\n  }\n  else\n  {\n    numzeros = 0;\n  }\n  updateHashChain(hash, wpos, hashval, numzeros);\n  length = 0;\n  offset = 0;\n  hashpos = hash->chain[wpos];\n  lastptr_idx = &in[(insize < (pos + MAX_SUPPORTED_DEFLATE_LENGTH)) ? (insize) : (pos + MAX_SUPPORTED_DEFLATE_LENGTH)];\n  prev_offset = 0;\n  for (;;)\n  {\n    helper_helper_encodeLZ77_1_3(&offset, &length, &current_offset, &current_length, &prev_offset, &foreptr_idx, &backptr_idx, &hashpos, hash, in, windowsize, nicematch, maxchainlength, lastptr, foreptr, backptr, pos, numzeros, hashval, lastptr_idx, wpos, chainlength);\n  }\n\n  if (lazymatching)\n  {\n    helper_helper_encodeLZ77_1_2(&pos, &error, &numzeros, &offset, &length, &lazy, &lazylength, &lazyoffset, &hashval, out, hash, in, maxlazymatch);\n  }\n  if ((length >= 3) && (offset > windowsize))\n  {\n    error = 86;\n    break;\n  }\n  ;\n  if (length < 3)\n  {\n    if (!uivector_push_back(out, in[pos]))\n    {\n      error = 83;\n      break;\n    }\n    ;\n  }\n  else\n    if ((length < minmatch) || ((length == 3) && (offset > 4096)))\n  {\n    if (!uivector_push_back(out, in[pos]))\n    {\n      error = 83;\n      break;\n    }\n    ;\n  }\n  else\n  {\n    helper_helper_encodeLZ77_1_1(&pos, &i, &numzeros, &hashval, &wpos, out, hash, in, insize, windowsize, usezeros, offset, length);\n  }\n  *pos_ref = pos;\n  *i_ref = i;\n  *error_ref = error;\n  *numzeros_ref = numzeros;\n  *offset_ref = offset;\n  *length_ref = length;\n  *lazy_ref = lazy;\n  *lazylength_ref = lazylength;\n  *lazyoffset_ref = lazyoffset;\n  *hashval_ref = hashval;\n  *current_offset_ref = current_offset;\n  *current_length_ref = current_length;\n  *prev_offset_ref = prev_offset;\n  *lastptr_idx_ref = lastptr_idx;\n  *foreptr_idx_ref = foreptr_idx;\n  *backptr_idx_ref = backptr_idx;\n  *hashpos_ref = hashpos;\n}\n\n",
            "calle": [
                "countZeros",
                "getHash",
                "helper_helper_encodeLZ77_1_1",
                "helper_helper_encodeLZ77_1_2",
                "helper_helper_encodeLZ77_1_3",
                "uivector_push_back",
                "updateHashChain"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "pos_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const pos_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numzeros_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const numzeros_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "offset_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const offset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazy_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const lazy_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazylength_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const lazylength_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazyoffset_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const lazyoffset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hashval_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const hashval_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "current_offset_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const current_offset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "current_length_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const current_length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prev_offset_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const prev_offset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lastptr_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const lastptr_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "foreptr_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const foreptr_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "backptr_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const backptr_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hashpos_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const hashpos_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "uivector * const",
                        "definition": [
                            "uivector * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hash",
                        "type": "Hash * const",
                        "definition": [
                            "Hash * const hash"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "windowsize",
                        "type": "unsigned",
                        "definition": [
                            "unsigned windowsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "minmatch",
                        "type": "unsigned",
                        "definition": [
                            "unsigned minmatch"
                        ]
                    },
                    {
                        "path": null,
                        "name": "nicematch",
                        "type": "unsigned",
                        "definition": [
                            "unsigned nicematch"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazymatching",
                        "type": "unsigned",
                        "definition": [
                            "unsigned lazymatching"
                        ]
                    },
                    {
                        "path": null,
                        "name": "maxchainlength",
                        "type": "unsigned",
                        "definition": [
                            "unsigned maxchainlength"
                        ]
                    },
                    {
                        "path": null,
                        "name": "maxlazymatch",
                        "type": "unsigned",
                        "definition": [
                            "unsigned maxlazymatch"
                        ]
                    },
                    {
                        "path": null,
                        "name": "usezeros",
                        "type": "unsigned",
                        "definition": [
                            "unsigned usezeros"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lastptr",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const lastptr"
                        ]
                    },
                    {
                        "path": null,
                        "name": "foreptr",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const foreptr"
                        ]
                    },
                    {
                        "path": null,
                        "name": "backptr",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const backptr"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pos",
                        "type": "size_t",
                        "definition": [
                            "size_t pos = *pos_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numzeros",
                        "type": "unsigned",
                        "definition": [
                            "unsigned numzeros = *numzeros_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "offset",
                        "type": "unsigned",
                        "definition": [
                            "unsigned offset = *offset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length = *length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazy",
                        "type": "unsigned",
                        "definition": [
                            "unsigned lazy = *lazy_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazylength",
                        "type": "unsigned",
                        "definition": [
                            "unsigned lazylength = *lazylength_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazyoffset",
                        "type": "unsigned",
                        "definition": [
                            "unsigned lazyoffset = *lazyoffset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hashval",
                        "type": "unsigned",
                        "definition": [
                            "unsigned hashval = *hashval_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "current_offset",
                        "type": "unsigned",
                        "definition": [
                            "unsigned current_offset = *current_offset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "current_length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned current_length = *current_length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prev_offset",
                        "type": "unsigned",
                        "definition": [
                            "unsigned prev_offset = *prev_offset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lastptr_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int lastptr_idx = *lastptr_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "foreptr_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int foreptr_idx = *foreptr_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "backptr_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int backptr_idx = *backptr_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hashpos",
                        "type": "unsigned",
                        "definition": [
                            "unsigned hashpos = *hashpos_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "wpos",
                        "type": "size_t",
                        "definition": [
                            "size_t wpos = pos & (windowsize - 1)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chainlength",
                        "type": "unsigned",
                        "definition": [
                            "unsigned chainlength = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "MAX_SUPPORTED_DEFLATE_LENGTH",
                        "type": "None",
                        "definition": []
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_deflateDynamic_1",
            "header": "",
            "params": [
                "size_t * const datapos_ref",
                "unsigned * const error_ref",
                "uivector * const lz77_encoded_ref",
                "unsigned int * const frequencies_ll_idx_ref",
                "unsigned int * const frequencies_d_idx_ref",
                "unsigned int * const frequencies_cl_idx_ref",
                "unsigned int * const bitlen_lld_idx_ref",
                "unsigned int * const bitlen_lld_e_idx_ref",
                "size_t * const i_ref",
                "size_t * const numcodes_ll_ref",
                "size_t * const numcodes_d_ref",
                "size_t * const numcodes_lld_ref",
                "size_t * const numcodes_lld_e_ref",
                "size_t * const numcodes_cl_ref",
                "unsigned * const HLIT_ref",
                "unsigned * const HDIST_ref",
                "unsigned * const HCLEN_ref",
                "LodePNGBitWriter * const writer",
                "Hash * const hash",
                "const unsigned char * const data",
                "size_t dataend",
                "const LodePNGCompressSettings * const settings",
                "HuffmanTree tree_ll",
                "HuffmanTree tree_d",
                "HuffmanTree tree_cl",
                "unsigned * const frequencies_ll",
                "unsigned * const frequencies_d",
                "unsigned * const frequencies_cl",
                "unsigned * const bitlen_lld",
                "unsigned * const bitlen_lld_e",
                "size_t datasize",
                "unsigned BFINAL"
            ],
            "definition": "void helper_deflateDynamic_1(size_t * const datapos_ref, unsigned * const error_ref, uivector * const lz77_encoded_ref, unsigned int * const frequencies_ll_idx_ref, unsigned int * const frequencies_d_idx_ref, unsigned int * const frequencies_cl_idx_ref, unsigned int * const bitlen_lld_idx_ref, unsigned int * const bitlen_lld_e_idx_ref, size_t * const i_ref, size_t * const numcodes_ll_ref, size_t * const numcodes_d_ref, size_t * const numcodes_lld_ref, size_t * const numcodes_lld_e_ref, size_t * const numcodes_cl_ref, unsigned * const HLIT_ref, unsigned * const HDIST_ref, unsigned * const HCLEN_ref, LodePNGBitWriter * const writer, Hash * const hash, const unsigned char * const data, size_t dataend, const LodePNGCompressSettings * const settings, HuffmanTree tree_ll, HuffmanTree tree_d, HuffmanTree tree_cl, unsigned * const frequencies_ll, unsigned * const frequencies_d, unsigned * const frequencies_cl, unsigned * const bitlen_lld, unsigned * const bitlen_lld_e, size_t datasize, unsigned BFINAL)\n{\n  size_t datapos = *datapos_ref;\n  unsigned error = *error_ref;\n  uivector lz77_encoded = *lz77_encoded_ref;\n  unsigned int frequencies_ll_idx = *frequencies_ll_idx_ref;\n  unsigned int frequencies_d_idx = *frequencies_d_idx_ref;\n  unsigned int frequencies_cl_idx = *frequencies_cl_idx_ref;\n  unsigned int bitlen_lld_idx = *bitlen_lld_idx_ref;\n  unsigned int bitlen_lld_e_idx = *bitlen_lld_e_idx_ref;\n  size_t i = *i_ref;\n  size_t numcodes_ll = *numcodes_ll_ref;\n  size_t numcodes_d = *numcodes_d_ref;\n  size_t numcodes_lld = *numcodes_lld_ref;\n  size_t numcodes_lld_e = *numcodes_lld_e_ref;\n  size_t numcodes_cl = *numcodes_cl_ref;\n  unsigned HLIT = *HLIT_ref;\n  unsigned HDIST = *HDIST_ref;\n  unsigned HCLEN = *HCLEN_ref;\n  lodepng_memset(frequencies_ll, 0, 286 * (sizeof(*(&frequencies_ll[frequencies_ll_idx]))));\n  lodepng_memset(frequencies_d, 0, 30 * (sizeof(*(&frequencies_d[frequencies_d_idx]))));\n  lodepng_memset(frequencies_cl, 0, 19 * (sizeof(*(&frequencies_cl[frequencies_cl_idx]))));\n  if (settings->use_lz77)\n  {\n    error = encodeLZ77(&lz77_encoded, hash, data, datapos, dataend, settings->windowsize, settings->minmatch, settings->nicematch, settings->lazymatching);\n    if (error)\n    {\n      break;\n    }\n  }\n  else\n  {\n    if (!uivector_resize(&lz77_encoded, datasize))\n    {\n      error = 83;\n      break;\n    }\n    ;\n    for (i = datapos; i < dataend; i += 1)\n      lz77_encoded.data[i - datapos] = data[i];\n\n  }\n  for (i = 0; i != lz77_encoded.size; i += 1)\n  {\n    unsigned symbol = lz77_encoded.data[i];\n    frequencies_ll[symbol + frequencies_ll_idx] += 1;\n    if (symbol > 256)\n    {\n      unsigned dist = lz77_encoded.data[i + 2];\n      frequencies_d[dist + frequencies_d_idx] += 1;\n      i += 3;\n    }\n  }\n\n  frequencies_ll[256 + frequencies_ll_idx] = 1;\n  error = HuffmanTree_makeFromFrequencies(&tree_ll, frequencies_ll, 257, 286, 15);\n  if (error)\n  {\n    break;\n  }\n  error = HuffmanTree_makeFromFrequencies(&tree_d, frequencies_d, 2, 30, 15);\n  if (error)\n  {\n    break;\n  }\n  numcodes_ll = (tree_ll.numcodes < 286) ? (tree_ll.numcodes) : (286);\n  numcodes_d = (tree_d.numcodes < 30) ? (tree_d.numcodes) : (30);\n  numcodes_lld = numcodes_ll + numcodes_d;\n  bitlen_lld_idx = (unsigned *) lodepng_malloc(numcodes_lld * (sizeof(*bitlen_lld_idx)));\n  bitlen_lld_e_idx = (unsigned *) lodepng_malloc(numcodes_lld * (sizeof(*bitlen_lld_e_idx)));\n  if ((!(&bitlen_lld[bitlen_lld_idx])) || (!(&bitlen_lld_e[bitlen_lld_e_idx])))\n  {\n    error = 83;\n    break;\n  }\n  ;\n  numcodes_lld_e = 0;\n  for (i = 0; i != numcodes_ll; i += 1)\n    bitlen_lld[i + bitlen_lld_idx] = tree_ll.lengths[i];\n\n  for (i = 0; i != numcodes_d; i += 1)\n    bitlen_lld[(numcodes_ll + i) + bitlen_lld_idx] = tree_d.lengths[i];\n\n  for (i = 0; i != numcodes_lld; i += 1)\n  {\n    helper_helper_deflateDynamic_1_1(&bitlen_lld_e_idx, &i, &numcodes_lld_e, bitlen_lld, bitlen_lld_e, bitlen_lld_idx, numcodes_lld);\n  }\n\n  for (i = 0; i != numcodes_lld_e; i += 1)\n  {\n    frequencies_cl[bitlen_lld_e[i + bitlen_lld_e_idx] + frequencies_cl_idx] += 1;\n    if (bitlen_lld_e[i + bitlen_lld_e_idx] >= 16)\n    {\n      i += 1;\n    }\n  }\n\n  error = HuffmanTree_makeFromFrequencies(&tree_cl, frequencies_cl, 19, 19, 7);\n  if (error)\n  {\n    break;\n  }\n  numcodes_cl = 19;\n  while ((numcodes_cl > 4u) && (tree_cl.lengths[CLCL_ORDER[numcodes_cl - 1u]] == 0))\n  {\n    numcodes_cl -= 1;\n  }\n\n  writeBits(writer, BFINAL, 1);\n  writeBits(writer, 0, 1);\n  writeBits(writer, 1, 1);\n  HLIT = (unsigned) (numcodes_ll - 257);\n  HDIST = (unsigned) (numcodes_d - 1);\n  HCLEN = (unsigned) (numcodes_cl - 4);\n  writeBits(writer, HLIT, 5);\n  writeBits(writer, HDIST, 5);\n  writeBits(writer, HCLEN, 4);\n  for (i = 0; i != numcodes_cl; i += 1)\n    writeBits(writer, tree_cl.lengths[CLCL_ORDER[i]], 3);\n\n  for (i = 0; i != numcodes_lld_e; i += 1)\n  {\n    writeBitsReversed(writer, tree_cl.codes[bitlen_lld_e[i + bitlen_lld_e_idx]], tree_cl.lengths[bitlen_lld_e[i + bitlen_lld_e_idx]]);\n    if (bitlen_lld_e[i + bitlen_lld_e_idx] == 16)\n    {\n      i += 1;\n      writeBits(writer, bitlen_lld_e[i + bitlen_lld_e_idx], 2);\n    }\n    else\n      if (bitlen_lld_e[i + bitlen_lld_e_idx] == 17)\n    {\n      i += 1;\n      writeBits(writer, bitlen_lld_e[i + bitlen_lld_e_idx], 3);\n    }\n    else\n      if (bitlen_lld_e[i + bitlen_lld_e_idx] == 18)\n    {\n      i += 1;\n      writeBits(writer, bitlen_lld_e[i + bitlen_lld_e_idx], 7);\n    }\n  }\n\n  writeLZ77data(writer, &lz77_encoded, &tree_ll, &tree_d);\n  if (tree_ll.lengths[256] == 0)\n  {\n    error = 64;\n    break;\n  }\n  ;\n  writeBitsReversed(writer, tree_ll.codes[256], tree_ll.lengths[256]);\n  break;\n  *datapos_ref = datapos;\n  *error_ref = error;\n  *lz77_encoded_ref = lz77_encoded;\n  *frequencies_ll_idx_ref = frequencies_ll_idx;\n  *frequencies_d_idx_ref = frequencies_d_idx;\n  *frequencies_cl_idx_ref = frequencies_cl_idx;\n  *bitlen_lld_idx_ref = bitlen_lld_idx;\n  *bitlen_lld_e_idx_ref = bitlen_lld_e_idx;\n  *i_ref = i;\n  *numcodes_ll_ref = numcodes_ll;\n  *numcodes_d_ref = numcodes_d;\n  *numcodes_lld_ref = numcodes_lld;\n  *numcodes_lld_e_ref = numcodes_lld_e;\n  *numcodes_cl_ref = numcodes_cl;\n  *HLIT_ref = HLIT;\n  *HDIST_ref = HDIST;\n  *HCLEN_ref = HCLEN;\n}\n\n",
            "calle": [
                "HuffmanTree_makeFromFrequencies",
                "encodeLZ77",
                "helper_helper_deflateDynamic_1_1",
                "lodepng_malloc",
                "lodepng_memset",
                "uivector_resize",
                "writeBits",
                "writeBitsReversed",
                "writeLZ77data"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "datapos_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const datapos_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lz77_encoded_ref",
                        "type": "uivector * const",
                        "definition": [
                            "uivector * const lz77_encoded_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "frequencies_ll_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const frequencies_ll_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "frequencies_d_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const frequencies_d_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "frequencies_cl_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const frequencies_cl_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_lld_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const bitlen_lld_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_lld_e_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const bitlen_lld_e_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_ll_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const numcodes_ll_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_d_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const numcodes_d_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_lld_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const numcodes_lld_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_lld_e_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const numcodes_lld_e_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_cl_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const numcodes_cl_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HLIT_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const HLIT_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HDIST_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const HDIST_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HCLEN_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const HCLEN_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "writer",
                        "type": "LodePNGBitWriter * const",
                        "definition": [
                            "LodePNGBitWriter * const writer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hash",
                        "type": "Hash * const",
                        "definition": [
                            "Hash * const hash"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "dataend",
                        "type": "size_t",
                        "definition": [
                            "size_t dataend"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGCompressSettings * const",
                        "definition": [
                            "const LodePNGCompressSettings * const settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_ll",
                        "type": "HuffmanTree",
                        "definition": [
                            "HuffmanTree tree_ll"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_d",
                        "type": "HuffmanTree",
                        "definition": [
                            "HuffmanTree tree_d"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_cl",
                        "type": "HuffmanTree",
                        "definition": [
                            "HuffmanTree tree_cl"
                        ]
                    },
                    {
                        "path": null,
                        "name": "frequencies_ll",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const frequencies_ll"
                        ]
                    },
                    {
                        "path": null,
                        "name": "frequencies_d",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const frequencies_d"
                        ]
                    },
                    {
                        "path": null,
                        "name": "frequencies_cl",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const frequencies_cl"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_lld",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const bitlen_lld"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_lld_e",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const bitlen_lld_e"
                        ]
                    },
                    {
                        "path": null,
                        "name": "datasize",
                        "type": "size_t",
                        "definition": [
                            "size_t datasize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "BFINAL",
                        "type": "unsigned",
                        "definition": [
                            "unsigned BFINAL"
                        ]
                    },
                    {
                        "path": null,
                        "name": "datapos",
                        "type": "size_t",
                        "definition": [
                            "size_t datapos = *datapos_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lz77_encoded",
                        "type": "uivector",
                        "definition": [
                            "uivector lz77_encoded = *lz77_encoded_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "frequencies_ll_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int frequencies_ll_idx = *frequencies_ll_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "frequencies_d_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int frequencies_d_idx = *frequencies_d_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "frequencies_cl_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int frequencies_cl_idx = *frequencies_cl_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_lld_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int bitlen_lld_idx = *bitlen_lld_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_lld_e_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int bitlen_lld_e_idx = *bitlen_lld_e_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_ll",
                        "type": "size_t",
                        "definition": [
                            "size_t numcodes_ll = *numcodes_ll_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_d",
                        "type": "size_t",
                        "definition": [
                            "size_t numcodes_d = *numcodes_d_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_lld",
                        "type": "size_t",
                        "definition": [
                            "size_t numcodes_lld = *numcodes_lld_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_lld_e",
                        "type": "size_t",
                        "definition": [
                            "size_t numcodes_lld_e = *numcodes_lld_e_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_cl",
                        "type": "size_t",
                        "definition": [
                            "size_t numcodes_cl = *numcodes_cl_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HLIT",
                        "type": "unsigned",
                        "definition": [
                            "unsigned HLIT = *HLIT_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HDIST",
                        "type": "unsigned",
                        "definition": [
                            "unsigned HDIST = *HDIST_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HCLEN",
                        "type": "unsigned",
                        "definition": [
                            "unsigned HCLEN = *HCLEN_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "symbol",
                        "type": "unsigned",
                        "definition": [
                            "unsigned symbol = lz77_encoded.data[i]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "dist",
                        "type": "unsigned",
                        "definition": [
                            "unsigned dist = lz77_encoded.data[i + 2]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "CLCL_ORDER",
                        "type": "None",
                        "definition": []
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_getPixelColorRGBA8_1",
            "header": "",
            "params": [
                "unsigned char * const r",
                "unsigned char * const g",
                "unsigned char * const b",
                "unsigned char * const a",
                "const unsigned char * const in",
                "size_t i",
                "const LodePNGColorMode * const mode"
            ],
            "definition": "void helper_getPixelColorRGBA8_1(unsigned char * const r, unsigned char * const g, unsigned char * const b, unsigned char * const a, const unsigned char * const in, size_t i, const LodePNGColorMode * const mode)\n{\n  if (mode->bitdepth == 8)\n  {\n    *r = in[(i * 3) + 0];\n    *g = in[(i * 3) + 1];\n    *b = in[(i * 3) + 2];\n    if (((mode->key_defined && ((*r) == mode->key_r)) && ((*g) == mode->key_g)) && ((*b) == mode->key_b))\n    {\n      *a = 0;\n    }\n    else\n      *a = 255;\n  }\n  else\n  {\n    *r = in[(i * 6) + 0];\n    *g = in[(i * 6) + 2];\n    *b = in[(i * 6) + 4];\n    if (((mode->key_defined && (((256U * in[(i * 6) + 0]) + in[(i * 6) + 1]) == mode->key_r)) && (((256U * in[(i * 6) + 2]) + in[(i * 6) + 3]) == mode->key_g)) && (((256U * in[(i * 6) + 4]) + in[(i * 6) + 5]) == mode->key_b))\n    {\n      *a = 0;\n    }\n    else\n      *a = 255;\n  }\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const g"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode",
                        "type": "const LodePNGColorMode * const",
                        "definition": [
                            "const LodePNGColorMode * const mode"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_getPixelColorRGBA8_2",
            "header": "",
            "params": [
                "unsigned char * const r",
                "unsigned char * const g",
                "unsigned char * const b",
                "unsigned char * const a",
                "const unsigned char * const in",
                "size_t i",
                "const LodePNGColorMode * const mode"
            ],
            "definition": "void helper_getPixelColorRGBA8_2(unsigned char * const r, unsigned char * const g, unsigned char * const b, unsigned char * const a, const unsigned char * const in, size_t i, const LodePNGColorMode * const mode)\n{\n  if (mode->bitdepth == 8)\n  {\n    *r = (*g = (*b = in[i]));\n    if (mode->key_defined && ((*r) == mode->key_r))\n    {\n      *a = 0;\n    }\n    else\n      *a = 255;\n  }\n  else\n    if (mode->bitdepth == 16)\n  {\n    *r = (*g = (*b = in[(i * 2) + 0]));\n    if (mode->key_defined && (((256U * in[(i * 2) + 0]) + in[(i * 2) + 1]) == mode->key_r))\n    {\n      *a = 0;\n    }\n    else\n      *a = 255;\n  }\n  else\n  {\n    unsigned highest = (1U << mode->bitdepth) - 1U;\n    size_t j = i * mode->bitdepth;\n    unsigned value = readBitsFromReversedStream(&j, in, mode->bitdepth);\n    *r = (*g = (*b = (value * 255) / highest));\n    if (mode->key_defined && (value == mode->key_r))\n    {\n      *a = 0;\n    }\n    else\n      *a = 255;\n  }\n}\n\n",
            "calle": [
                "readBitsFromReversedStream"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const g"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode",
                        "type": "const LodePNGColorMode * const",
                        "definition": [
                            "const LodePNGColorMode * const mode"
                        ]
                    },
                    {
                        "path": null,
                        "name": "highest",
                        "type": "unsigned",
                        "definition": [
                            "unsigned highest = (1U << mode->bitdepth) - 1U"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "size_t",
                        "definition": [
                            "size_t j = i * mode->bitdepth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "value",
                        "type": "unsigned",
                        "definition": [
                            "unsigned value = readBitsFromReversedStream(&j, in, mode->bitdepth)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_getPixelColorsRGBA8_1",
            "header": "",
            "params": [
                "unsigned int * const buffer_idx_ref",
                "size_t * const i_ref",
                "unsigned char * const buffer",
                "size_t numpixels",
                "const unsigned char * const in",
                "const LodePNGColorMode * const mode",
                "unsigned num_channels"
            ],
            "definition": "void helper_getPixelColorsRGBA8_1(unsigned int * const buffer_idx_ref, size_t * const i_ref, unsigned char * const buffer, size_t numpixels, const unsigned char * const in, const LodePNGColorMode * const mode, unsigned num_channels)\n{\n  unsigned int buffer_idx = *buffer_idx_ref;\n  size_t i = *i_ref;\n  if (mode->bitdepth == 8)\n  {\n    for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n    {\n      lodepng_memcpy(buffer, &in[i * 3], 3);\n      buffer[3 + buffer_idx] = 255;\n    }\n\n    if (mode->key_defined)\n    {\n      buffer_idx -= numpixels * num_channels;\n      for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n      {\n        if (((buffer[0 + buffer_idx] == mode->key_r) && (buffer[1 + buffer_idx] == mode->key_g)) && (buffer[2 + buffer_idx] == mode->key_b))\n        {\n          buffer[3 + buffer_idx] = 0;\n        }\n      }\n\n    }\n  }\n  else\n  {\n    for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n    {\n      buffer[0 + buffer_idx] = in[(i * 6) + 0];\n      buffer[1 + buffer_idx] = in[(i * 6) + 2];\n      buffer[2 + buffer_idx] = in[(i * 6) + 4];\n      buffer[3 + buffer_idx] = (((mode->key_defined && (((256U * in[(i * 6) + 0]) + in[(i * 6) + 1]) == mode->key_r)) && (((256U * in[(i * 6) + 2]) + in[(i * 6) + 3]) == mode->key_g)) && (((256U * in[(i * 6) + 4]) + in[(i * 6) + 5]) == mode->key_b)) ? (0) : (255);\n    }\n\n  }\n  *buffer_idx_ref = buffer_idx;\n  *i_ref = i;\n}\n\n",
            "calle": [
                "lodepng_memcpy"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "buffer_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const buffer_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "buffer",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const buffer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numpixels",
                        "type": "size_t",
                        "definition": [
                            "size_t numpixels"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode",
                        "type": "const LodePNGColorMode * const",
                        "definition": [
                            "const LodePNGColorMode * const mode"
                        ]
                    },
                    {
                        "path": null,
                        "name": "num_channels",
                        "type": "unsigned",
                        "definition": [
                            "unsigned num_channels"
                        ]
                    },
                    {
                        "path": null,
                        "name": "buffer_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int buffer_idx = *buffer_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_getPixelColorsRGBA8_2",
            "header": "",
            "params": [
                "unsigned int * const buffer_idx_ref",
                "size_t * const i_ref",
                "unsigned char * const buffer",
                "size_t numpixels",
                "const unsigned char * const in",
                "const LodePNGColorMode * const mode",
                "unsigned num_channels"
            ],
            "definition": "void helper_getPixelColorsRGBA8_2(unsigned int * const buffer_idx_ref, size_t * const i_ref, unsigned char * const buffer, size_t numpixels, const unsigned char * const in, const LodePNGColorMode * const mode, unsigned num_channels)\n{\n  unsigned int buffer_idx = *buffer_idx_ref;\n  size_t i = *i_ref;\n  if (mode->bitdepth == 8)\n  {\n    for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n    {\n      buffer[0 + buffer_idx] = (buffer[1 + buffer_idx] = (buffer[2 + buffer_idx] = in[i]));\n      buffer[3 + buffer_idx] = 255;\n    }\n\n    if (mode->key_defined)\n    {\n      buffer_idx -= numpixels * num_channels;\n      for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n      {\n        if (buffer[0 + buffer_idx] == mode->key_r)\n        {\n          buffer[3 + buffer_idx] = 0;\n        }\n      }\n\n    }\n  }\n  else\n    if (mode->bitdepth == 16)\n  {\n    for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n    {\n      buffer[0 + buffer_idx] = (buffer[1 + buffer_idx] = (buffer[2 + buffer_idx] = in[i * 2]));\n      buffer[3 + buffer_idx] = (mode->key_defined && (((256U * in[(i * 2) + 0]) + in[(i * 2) + 1]) == mode->key_r)) ? (0) : (255);\n    }\n\n  }\n  else\n  {\n    unsigned highest = (1U << mode->bitdepth) - 1U;\n    size_t j = 0;\n    for (i = 0; i != numpixels; i += 1, buffer_idx += num_channels)\n    {\n      unsigned value = readBitsFromReversedStream(&j, in, mode->bitdepth);\n      buffer[0 + buffer_idx] = (buffer[1 + buffer_idx] = (buffer[2 + buffer_idx] = (value * 255) / highest));\n      buffer[3 + buffer_idx] = (mode->key_defined && (value == mode->key_r)) ? (0) : (255);\n    }\n\n  }\n  *buffer_idx_ref = buffer_idx;\n  *i_ref = i;\n}\n\n",
            "calle": [
                "readBitsFromReversedStream"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "buffer_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const buffer_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "buffer",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const buffer"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numpixels",
                        "type": "size_t",
                        "definition": [
                            "size_t numpixels"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode",
                        "type": "const LodePNGColorMode * const",
                        "definition": [
                            "const LodePNGColorMode * const mode"
                        ]
                    },
                    {
                        "path": null,
                        "name": "num_channels",
                        "type": "unsigned",
                        "definition": [
                            "unsigned num_channels"
                        ]
                    },
                    {
                        "path": null,
                        "name": "buffer_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int buffer_idx = *buffer_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "highest",
                        "type": "unsigned",
                        "definition": [
                            "unsigned highest = (1U << mode->bitdepth) - 1U"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "size_t",
                        "definition": [
                            "size_t j = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "value",
                        "type": "unsigned",
                        "definition": [
                            "unsigned value = readBitsFromReversedStream(&j, in, mode->bitdepth)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_lodepng_convert_1",
            "header": "",
            "params": [
                "size_t * const i_ref",
                "unsigned * const error_ref",
                "unsigned char * const out",
                "const unsigned char * const in",
                "const LodePNGColorMode * const mode_out",
                "const LodePNGColorMode * const mode_in",
                "unsigned w",
                "unsigned h",
                "ColorTree tree"
            ],
            "definition": "unsigned helper_lodepng_convert_1(size_t * const i_ref, unsigned * const error_ref, unsigned char * const out, const unsigned char * const in, const LodePNGColorMode * const mode_out, const LodePNGColorMode * const mode_in, unsigned w, unsigned h, ColorTree tree)\n{\n  size_t i = *i_ref;\n  unsigned error = *error_ref;\n  size_t palettesize = mode_out->palettesize;\n  const unsigned char *palette = mode_out->palette;\n  unsigned int palette_idx = 0;\n  size_t palsize = ((size_t) 1u) << mode_out->bitdepth;\n  if (palettesize == 0)\n  {\n    palettesize = mode_in->palettesize;\n    palette_idx = mode_in->palette_idx;\n    if ((mode_in->colortype == LCT_PALETTE) && (mode_in->bitdepth == mode_out->bitdepth))\n    {\n      size_t numbytes = lodepng_get_raw_size(w, h, mode_in);\n      lodepng_memcpy(out, in, numbytes);\n      return 0;\n    }\n  }\n  if (palettesize < palsize)\n  {\n    palsize = palettesize;\n  }\n  color_tree_init(&tree);\n  for (i = 0; i != palsize; i += 1)\n  {\n    const unsigned char *p = &palette[(i * 4) + palette_idx];\n    error = color_tree_add(&tree, p[0], p[1], p[2], p[3], (unsigned) i);\n    if (error)\n    {\n      break;\n    }\n  }\n\n  *i_ref = i;\n  *error_ref = error;\n}\n\n",
            "calle": [
                "color_tree_add",
                "color_tree_init",
                "lodepng_get_raw_size",
                "lodepng_memcpy"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode_out",
                        "type": "const LodePNGColorMode * const",
                        "definition": [
                            "const LodePNGColorMode * const mode_out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode_in",
                        "type": "const LodePNGColorMode * const",
                        "definition": [
                            "const LodePNGColorMode * const mode_in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree",
                        "type": "ColorTree",
                        "definition": [
                            "ColorTree tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "palettesize",
                        "type": "size_t",
                        "definition": [
                            "size_t palettesize = mode_out->palettesize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "palette",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *palette = mode_out->palette"
                        ]
                    },
                    {
                        "path": null,
                        "name": "palette_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int palette_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "palsize",
                        "type": "size_t",
                        "definition": [
                            "size_t palsize = ((size_t) 1u) << mode_out->bitdepth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numbytes",
                        "type": "size_t",
                        "definition": [
                            "size_t numbytes = lodepng_get_raw_size(w, h, mode_in)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *p = &palette[(i * 4) + palette_idx]"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_lodepng_convert_2",
            "header": "",
            "params": [
                "size_t * const i_ref",
                "unsigned * const error_ref",
                "unsigned char * const out",
                "const unsigned char * const in",
                "const LodePNGColorMode * const mode_out",
                "const LodePNGColorMode * const mode_in",
                "ColorTree tree",
                "size_t numpixels"
            ],
            "definition": "void helper_lodepng_convert_2(size_t * const i_ref, unsigned * const error_ref, unsigned char * const out, const unsigned char * const in, const LodePNGColorMode * const mode_out, const LodePNGColorMode * const mode_in, ColorTree tree, size_t numpixels)\n{\n  size_t i = *i_ref;\n  unsigned error = *error_ref;\n  if ((mode_in->bitdepth == 16) && (mode_out->bitdepth == 16))\n  {\n    for (i = 0; i != numpixels; i += 1)\n    {\n      unsigned short r = 0;\n      unsigned short g = 0;\n      unsigned short b = 0;\n      unsigned short a = 0;\n      getPixelColorRGBA16(&r, &g, &b, &a, in, i, mode_in);\n      rgba16ToPixel(out, i, mode_out, r, g, b, a);\n    }\n\n  }\n  else\n    if ((mode_out->bitdepth == 8) && (mode_out->colortype == LCT_RGBA))\n  {\n    getPixelColorsRGBA8(out, numpixels, in, mode_in);\n  }\n  else\n    if ((mode_out->bitdepth == 8) && (mode_out->colortype == LCT_RGB))\n  {\n    getPixelColorsRGB8(out, numpixels, in, mode_in);\n  }\n  else\n  {\n    unsigned char r = 0;\n    unsigned char g = 0;\n    unsigned char b = 0;\n    unsigned char a = 0;\n    for (i = 0; i != numpixels; i += 1)\n    {\n      getPixelColorRGBA8(&r, &g, &b, &a, in, i, mode_in);\n      error = rgba8ToPixel(out, i, mode_out, &tree, r, g, b, a);\n      if (error)\n      {\n        break;\n      }\n    }\n\n  }\n  *i_ref = i;\n  *error_ref = error;\n}\n\n",
            "calle": [
                "getPixelColorRGBA16",
                "getPixelColorRGBA8",
                "getPixelColorsRGB8",
                "getPixelColorsRGBA8",
                "rgba16ToPixel",
                "rgba8ToPixel"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode_out",
                        "type": "const LodePNGColorMode * const",
                        "definition": [
                            "const LodePNGColorMode * const mode_out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode_in",
                        "type": "const LodePNGColorMode * const",
                        "definition": [
                            "const LodePNGColorMode * const mode_in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree",
                        "type": "ColorTree",
                        "definition": [
                            "ColorTree tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numpixels",
                        "type": "size_t",
                        "definition": [
                            "size_t numpixels"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned char r = 0",
                            "unsigned short r = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned char g = 0",
                            "unsigned short g = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned char b = 0",
                            "unsigned short b = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned char a = 0",
                            "unsigned short a = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_lodepng_compute_color_stats_1",
            "header": "",
            "params": [
                "size_t * const i_ref",
                "unsigned * const numcolors_done_ref",
                "unsigned * const bits_done_ref",
                "unsigned * const sixteen_ref",
                "LodePNGColorStats * const stats",
                "const unsigned char * const in",
                "const LodePNGColorMode * const mode_in",
                "size_t numpixels"
            ],
            "definition": "void helper_lodepng_compute_color_stats_1(size_t * const i_ref, unsigned * const numcolors_done_ref, unsigned * const bits_done_ref, unsigned * const sixteen_ref, LodePNGColorStats * const stats, const unsigned char * const in, const LodePNGColorMode * const mode_in, size_t numpixels)\n{\n  size_t i = *i_ref;\n  unsigned numcolors_done = *numcolors_done_ref;\n  unsigned bits_done = *bits_done_ref;\n  unsigned sixteen = *sixteen_ref;\n  unsigned short r = 0;\n  unsigned short g = 0;\n  unsigned short b = 0;\n  unsigned short a = 0;\n  for (i = 0; i != numpixels; i += 1)\n  {\n    getPixelColorRGBA16(&r, &g, &b, &a, in, i, mode_in);\n    if (((((r & 255) != ((r >> 8) & 255)) || ((g & 255) != ((g >> 8) & 255))) || ((b & 255) != ((b >> 8) & 255))) || ((a & 255) != ((a >> 8) & 255)))\n    {\n      stats->bits = 16;\n      sixteen = 1;\n      bits_done = 1;\n      numcolors_done = 1;\n      break;\n    }\n  }\n\n  *i_ref = i;\n  *numcolors_done_ref = numcolors_done;\n  *bits_done_ref = bits_done;\n  *sixteen_ref = sixteen;\n}\n\n",
            "calle": [
                "getPixelColorRGBA16"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcolors_done_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const numcolors_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bits_done_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const bits_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "sixteen_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const sixteen_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "stats",
                        "type": "LodePNGColorStats * const",
                        "definition": [
                            "LodePNGColorStats * const stats"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode_in",
                        "type": "const LodePNGColorMode * const",
                        "definition": [
                            "const LodePNGColorMode * const mode_in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numpixels",
                        "type": "size_t",
                        "definition": [
                            "size_t numpixels"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcolors_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned numcolors_done = *numcolors_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bits_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bits_done = *bits_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "sixteen",
                        "type": "unsigned",
                        "definition": [
                            "unsigned sixteen = *sixteen_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short r = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short g = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short b = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short a = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_lodepng_compute_color_stats_2",
            "header": "",
            "params": [
                "size_t * const i_ref",
                "unsigned * const colored_done_ref",
                "unsigned * const alpha_done_ref",
                "LodePNGColorStats * const stats",
                "const unsigned char * const in",
                "const LodePNGColorMode * const mode_in",
                "size_t numpixels",
                "unsigned numcolors_done",
                "unsigned bits_done"
            ],
            "definition": "void helper_lodepng_compute_color_stats_2(size_t * const i_ref, unsigned * const colored_done_ref, unsigned * const alpha_done_ref, LodePNGColorStats * const stats, const unsigned char * const in, const LodePNGColorMode * const mode_in, size_t numpixels, unsigned numcolors_done, unsigned bits_done)\n{\n  size_t i = *i_ref;\n  unsigned colored_done = *colored_done_ref;\n  unsigned alpha_done = *alpha_done_ref;\n  unsigned short r = 0;\n  unsigned short g = 0;\n  unsigned short b = 0;\n  unsigned short a = 0;\n  for (i = 0; i != numpixels; i += 1)\n  {\n    helper_helper_lodepng_compute_color_stats_2_1(&colored_done, &alpha_done, stats, in, mode_in, numcolors_done, bits_done, i, r, g, b, a);\n  }\n\n  if (stats->key && (!stats->alpha))\n  {\n    for (i = 0; i != numpixels; i += 1)\n    {\n      getPixelColorRGBA16(&r, &g, &b, &a, in, i, mode_in);\n      if ((((a != 0) && (r == stats->key_r)) && (g == stats->key_g)) && (b == stats->key_b))\n      {\n        stats->alpha = 1;\n        stats->key = 0;\n        alpha_done = 1;\n      }\n    }\n\n  }\n  *i_ref = i;\n  *colored_done_ref = colored_done;\n  *alpha_done_ref = alpha_done;\n}\n\n",
            "calle": [
                "getPixelColorRGBA16",
                "helper_helper_lodepng_compute_color_stats_2_1"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "colored_done_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const colored_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "alpha_done_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const alpha_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "stats",
                        "type": "LodePNGColorStats * const",
                        "definition": [
                            "LodePNGColorStats * const stats"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode_in",
                        "type": "const LodePNGColorMode * const",
                        "definition": [
                            "const LodePNGColorMode * const mode_in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numpixels",
                        "type": "size_t",
                        "definition": [
                            "size_t numpixels"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcolors_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned numcolors_done"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bits_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bits_done"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "colored_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned colored_done = *colored_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "alpha_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned alpha_done = *alpha_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short r = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short g = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short b = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short a = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_lodepng_compute_color_stats_3",
            "header": "",
            "params": [
                "size_t * const i_ref",
                "unsigned * const error_ref",
                "unsigned * const colored_done_ref",
                "unsigned * const alpha_done_ref",
                "unsigned * const numcolors_done_ref",
                "unsigned * const bits_done_ref",
                "LodePNGColorStats * const stats",
                "const unsigned char * const in",
                "const LodePNGColorMode * const mode_in",
                "ColorTree tree",
                "size_t numpixels",
                "unsigned bpp",
                "unsigned maxnumcolors"
            ],
            "definition": "void helper_lodepng_compute_color_stats_3(size_t * const i_ref, unsigned * const error_ref, unsigned * const colored_done_ref, unsigned * const alpha_done_ref, unsigned * const numcolors_done_ref, unsigned * const bits_done_ref, LodePNGColorStats * const stats, const unsigned char * const in, const LodePNGColorMode * const mode_in, ColorTree tree, size_t numpixels, unsigned bpp, unsigned maxnumcolors)\n{\n  size_t i = *i_ref;\n  unsigned error = *error_ref;\n  unsigned colored_done = *colored_done_ref;\n  unsigned alpha_done = *alpha_done_ref;\n  unsigned numcolors_done = *numcolors_done_ref;\n  unsigned bits_done = *bits_done_ref;\n  unsigned char r = 0;\n  unsigned char g = 0;\n  unsigned char b = 0;\n  unsigned char a = 0;\n  for (i = 0; i != numpixels; i += 1)\n  {\n    helper_helper_lodepng_compute_color_stats_3_1(&error, &colored_done, &alpha_done, &numcolors_done, &bits_done, stats, in, mode_in, tree, bpp, maxnumcolors, i, r, g, b, a);\n  }\n\n  if (stats->key && (!stats->alpha))\n  {\n    for (i = 0; i != numpixels; i += 1)\n    {\n      getPixelColorRGBA8(&r, &g, &b, &a, in, i, mode_in);\n      if ((((a != 0) && (r == stats->key_r)) && (g == stats->key_g)) && (b == stats->key_b))\n      {\n        stats->alpha = 1;\n        stats->key = 0;\n        alpha_done = 1;\n        if (stats->bits < 8)\n        {\n          stats->bits = 8;\n        }\n      }\n    }\n\n  }\n  stats->key_r += stats->key_r << 8;\n  stats->key_g += stats->key_g << 8;\n  stats->key_b += stats->key_b << 8;\n  *i_ref = i;\n  *error_ref = error;\n  *colored_done_ref = colored_done;\n  *alpha_done_ref = alpha_done;\n  *numcolors_done_ref = numcolors_done;\n  *bits_done_ref = bits_done;\n}\n\n",
            "calle": [
                "getPixelColorRGBA8",
                "helper_helper_lodepng_compute_color_stats_3_1"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "colored_done_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const colored_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "alpha_done_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const alpha_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcolors_done_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const numcolors_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bits_done_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const bits_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "stats",
                        "type": "LodePNGColorStats * const",
                        "definition": [
                            "LodePNGColorStats * const stats"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode_in",
                        "type": "const LodePNGColorMode * const",
                        "definition": [
                            "const LodePNGColorMode * const mode_in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree",
                        "type": "ColorTree",
                        "definition": [
                            "ColorTree tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numpixels",
                        "type": "size_t",
                        "definition": [
                            "size_t numpixels"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bpp"
                        ]
                    },
                    {
                        "path": null,
                        "name": "maxnumcolors",
                        "type": "unsigned",
                        "definition": [
                            "unsigned maxnumcolors"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "colored_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned colored_done = *colored_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "alpha_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned alpha_done = *alpha_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcolors_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned numcolors_done = *numcolors_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bits_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bits_done = *bits_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char g = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char b = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char a = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_auto_choose_color_1",
            "header": "",
            "params": [
                "unsigned * const error_ref",
                "size_t * const i_ref",
                "LodePNGColorMode * const mode_out",
                "const LodePNGColorMode * const mode_in",
                "const LodePNGColorStats * const stats",
                "unsigned palettebits"
            ],
            "definition": "void helper_auto_choose_color_1(unsigned * const error_ref, size_t * const i_ref, LodePNGColorMode * const mode_out, const LodePNGColorMode * const mode_in, const LodePNGColorStats * const stats, unsigned palettebits)\n{\n  unsigned error = *error_ref;\n  size_t i = *i_ref;\n  const unsigned char *p = stats->palette;\n  lodepng_palette_clear(mode_out);\n  for (i = 0; i != stats->numcolors; i += 1)\n  {\n    error = lodepng_palette_add(mode_out, p[(i * 4) + 0], p[(i * 4) + 1], p[(i * 4) + 2], p[(i * 4) + 3]);\n    if (error)\n    {\n      break;\n    }\n  }\n\n  mode_out->colortype = LCT_PALETTE;\n  mode_out->bitdepth = palettebits;\n  if (((mode_in->colortype == LCT_PALETTE) && (mode_in->palettesize >= mode_out->palettesize)) && (mode_in->bitdepth == mode_out->bitdepth))\n  {\n    lodepng_color_mode_cleanup(mode_out);\n    lodepng_color_mode_copy(mode_out, mode_in);\n  }\n  *error_ref = error;\n  *i_ref = i;\n}\n\n",
            "calle": [
                "lodepng_color_mode_cleanup",
                "lodepng_color_mode_copy",
                "lodepng_palette_add",
                "lodepng_palette_clear"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode_out",
                        "type": "LodePNGColorMode * const",
                        "definition": [
                            "LodePNGColorMode * const mode_out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode_in",
                        "type": "const LodePNGColorMode * const",
                        "definition": [
                            "const LodePNGColorMode * const mode_in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "stats",
                        "type": "const LodePNGColorStats * const",
                        "definition": [
                            "const LodePNGColorStats * const stats"
                        ]
                    },
                    {
                        "path": null,
                        "name": "palettebits",
                        "type": "unsigned",
                        "definition": [
                            "unsigned palettebits"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *p = stats->palette"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_unfilterScanline_1",
            "header": "",
            "params": [
                "size_t * const i_ref",
                "unsigned char * const recon",
                "const unsigned char * const scanline",
                "const unsigned char * const precon",
                "size_t bytewidth",
                "size_t length"
            ],
            "definition": "void helper_unfilterScanline_1(size_t * const i_ref, unsigned char * const recon, const unsigned char * const scanline, const unsigned char * const precon, size_t bytewidth, size_t length)\n{\n  size_t i = *i_ref;\n  if (precon)\n  {\n    helper_helper_unfilterScanline_1_1(&i, recon, scanline, precon, bytewidth, length);\n  }\n  else\n  {\n    size_t j = 0;\n    for (i = 0; i != bytewidth; i += 1)\n      recon[i] = scanline[i];\n\n    for (i = bytewidth; i != length; i += 1, j += 1)\n      recon[i] = scanline[i] + (recon[j] >> 1u);\n\n  }\n  break;\n  *i_ref = i;\n}\n\n",
            "calle": [
                "helper_helper_unfilterScanline_1_1"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "recon",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const recon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "scanline",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const scanline"
                        ]
                    },
                    {
                        "path": null,
                        "name": "precon",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const precon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bytewidth",
                        "type": "size_t",
                        "definition": [
                            "size_t bytewidth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "size_t",
                        "definition": [
                            "size_t length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "size_t",
                        "definition": [
                            "size_t j = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_unfilterScanline_2",
            "header": "",
            "params": [
                "size_t * const i_ref",
                "unsigned char * const recon",
                "const unsigned char * const scanline",
                "const unsigned char * const precon",
                "size_t bytewidth",
                "size_t length"
            ],
            "definition": "void helper_unfilterScanline_2(size_t * const i_ref, unsigned char * const recon, const unsigned char * const scanline, const unsigned char * const precon, size_t bytewidth, size_t length)\n{\n  size_t i = *i_ref;\n  if (precon)\n  {\n    helper_helper_unfilterScanline_2_1(&i, recon, scanline, precon, bytewidth, length);\n  }\n  else\n  {\n    size_t j = 0;\n    for (i = 0; i != bytewidth; i += 1)\n    {\n      recon[i] = scanline[i];\n    }\n\n    for (i = bytewidth; i != length; i += 1, j += 1)\n    {\n      recon[i] = scanline[i] + recon[j];\n    }\n\n  }\n  break;\n  *i_ref = i;\n}\n\n",
            "calle": [
                "helper_helper_unfilterScanline_2_1"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "recon",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const recon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "scanline",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const scanline"
                        ]
                    },
                    {
                        "path": null,
                        "name": "precon",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const precon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bytewidth",
                        "type": "size_t",
                        "definition": [
                            "size_t bytewidth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "size_t",
                        "definition": [
                            "size_t length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "size_t",
                        "definition": [
                            "size_t j = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_Adam7_deinterlace_1",
            "header": "",
            "params": [
                "unsigned * const i_ref",
                "unsigned char * const out",
                "const unsigned char * const in",
                "unsigned w",
                "unsigned bpp",
                "unsigned passw[7]",
                "unsigned passh[7]",
                "size_t passstart[8]"
            ],
            "definition": "void helper_Adam7_deinterlace_1(unsigned * const i_ref, unsigned char * const out, const unsigned char * const in, unsigned w, unsigned bpp, unsigned passw[7], unsigned passh[7], size_t passstart[8])\n{\n  unsigned i = *i_ref;\n  for (i = 0; i != 7; i += 1)\n  {\n    unsigned x;\n    unsigned y;\n    unsigned b;\n    unsigned ilinebits = bpp * passw[i];\n    unsigned olinebits = bpp * w;\n    size_t obp;\n    size_t ibp;\n    for (y = 0; y < passh[i]; y += 1)\n      for (x = 0; x < passw[i]; x += 1)\n    {\n      ibp = (8 * passstart[i]) + ((y * ilinebits) + (x * bpp));\n      obp = ((ADAM7_IY[i] + (((size_t) y) * ADAM7_DY[i])) * olinebits) + ((ADAM7_IX[i] + (((size_t) x) * ADAM7_DX[i])) * bpp);\n      for (b = 0; b < bpp; b += 1)\n      {\n        unsigned char bit = readBitFromReversedStream(&ibp, in);\n        setBitOfReversedStream(&obp, out, bit);\n      }\n\n    }\n\n\n  }\n\n  *i_ref = i;\n}\n\n",
            "calle": [
                "readBitFromReversedStream",
                "setBitOfReversedStream"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bpp"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passw",
                        "type": "unsigned [7]",
                        "definition": [
                            "unsigned passw[7]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passh",
                        "type": "unsigned [7]",
                        "definition": [
                            "unsigned passh[7]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "x",
                        "type": "unsigned",
                        "definition": [
                            "unsigned x"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y",
                        "type": "unsigned",
                        "definition": [
                            "unsigned y"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned",
                        "definition": [
                            "unsigned b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ilinebits",
                        "type": "unsigned",
                        "definition": [
                            "unsigned ilinebits = bpp * passw[i]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "olinebits",
                        "type": "unsigned",
                        "definition": [
                            "unsigned olinebits = bpp * w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "obp",
                        "type": "size_t",
                        "definition": [
                            "size_t obp"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ibp",
                        "type": "size_t",
                        "definition": [
                            "size_t ibp"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bit",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char bit = readBitFromReversedStream(&ibp, in)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ADAM7_IY",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "ADAM7_DY",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "ADAM7_IX",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "ADAM7_DX",
                        "type": "None",
                        "definition": []
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_postProcessScanlines_1",
            "header": "",
            "params": [
                "unsigned char * const out",
                "unsigned char * const in",
                "unsigned w",
                "unsigned h",
                "unsigned bpp"
            ],
            "definition": "unsigned helper_postProcessScanlines_1(unsigned char * const out, unsigned char * const in, unsigned w, unsigned h, unsigned bpp)\n{\n  if ((bpp < 8) && ((w * bpp) != ((((w * bpp) + 7u) / 8u) * 8u)))\n  {\n    {\n      unsigned error = unfilter(in, in, w, h, bpp);\n      if (error)\n      {\n        return error;\n      }\n    }\n    ;\n    removePaddingBits(out, in, w * bpp, (((w * bpp) + 7u) / 8u) * 8u, h);\n  }\n  else\n  {\n    unsigned error = unfilter(out, in, w, h, bpp);\n    if (error)\n    {\n      return error;\n    }\n  }\n  ;\n}\n\n",
            "calle": [
                "removePaddingBits",
                "unfilter"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bpp"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = unfilter(in, in, w, h, bpp)",
                            "unsigned error = unfilter(out, in, w, h, bpp)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_postProcessScanlines_2",
            "header": "",
            "params": [
                "unsigned char * const out",
                "unsigned char * const in",
                "unsigned w",
                "unsigned h",
                "unsigned bpp"
            ],
            "definition": "unsigned helper_postProcessScanlines_2(unsigned char * const out, unsigned char * const in, unsigned w, unsigned h, unsigned bpp)\n{\n  unsigned passw[7];\n  unsigned passh[7];\n  size_t filter_passstart[8];\n  size_t padded_passstart[8];\n  size_t passstart[8];\n  unsigned i;\n  Adam7_getpassvalues(passw, passh, filter_passstart, padded_passstart, passstart, w, h, bpp);\n  for (i = 0; i != 7; i += 1)\n  {\n    {\n      unsigned error = unfilter(&in[padded_passstart[i]], &in[filter_passstart[i]], passw[i], passh[i], bpp);\n      if (error)\n      {\n        return error;\n      }\n    }\n    ;\n    if (bpp < 8)\n    {\n      removePaddingBits(&in[passstart[i]], &in[padded_passstart[i]], passw[i] * bpp, (((passw[i] * bpp) + 7u) / 8u) * 8u, passh[i]);\n    }\n  }\n\n  Adam7_deinterlace(out, in, w, h, bpp);\n}\n\n",
            "calle": [
                "Adam7_deinterlace",
                "Adam7_getpassvalues",
                "removePaddingBits",
                "unfilter"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bpp"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passw",
                        "type": "unsigned [7]",
                        "definition": [
                            "unsigned passw[7]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passh",
                        "type": "unsigned [7]",
                        "definition": [
                            "unsigned passh[7]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "filter_passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t filter_passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "padded_passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t padded_passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = unfilter(&in[padded_passstart[i]], &in[filter_passstart[i]], passw[i], passh[i], bpp)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_readChunk_tEXt_1",
            "header": "",
            "params": [
                "unsigned * const error_ref",
                "unsigned int * const key_idx_ref",
                "unsigned int * const str_idx_ref",
                "LodePNGInfo * const info",
                "const unsigned char * const data",
                "size_t chunkLength",
                "char * const key",
                "char * const str"
            ],
            "definition": "void helper_readChunk_tEXt_1(unsigned * const error_ref, unsigned int * const key_idx_ref, unsigned int * const str_idx_ref, LodePNGInfo * const info, const unsigned char * const data, size_t chunkLength, char * const key, char * const str)\n{\n  unsigned error = *error_ref;\n  unsigned int key_idx = *key_idx_ref;\n  unsigned int str_idx = *str_idx_ref;\n  unsigned length;\n  unsigned string2_begin;\n  length = 0;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  while ((length < chunkLength) && (data[length] != 0))\n    ++length;\n\n  if ((length < 1) || (length > 79))\n  {\n    error = 89;\n    break;\n  }\n  ;\n  key_idx = (char *) lodepng_malloc(length + 1);\n  if (!(&key[key_idx]))\n  {\n    error = 83;\n    break;\n  }\n  ;\n  lodepng_memcpy(key, data, length);\n  key[length + key_idx] = 0;\n  string2_begin = length + 1;\n  length = (unsigned) ((chunkLength < string2_begin) ? (0) : (chunkLength - string2_begin));\n  str_idx = (char *) lodepng_malloc(length + 1);\n  if (!(&str[str_idx]))\n  {\n    error = 83;\n    break;\n  }\n  ;\n  lodepng_memcpy(str, data + string2_begin, length);\n  str[length + str_idx] = 0;\n  error = lodepng_add_text(info, key, str);\n  break;\n  *error_ref = error;\n  *key_idx_ref = key_idx;\n  *str_idx_ref = str_idx;\n}\n\n",
            "calle": [
                "lodepng_add_text",
                "lodepng_malloc",
                "lodepng_memcpy"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const key_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "str_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const str_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo * const",
                        "definition": [
                            "LodePNGInfo * const info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "size_t",
                        "definition": [
                            "size_t chunkLength"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key",
                        "type": "char * const",
                        "definition": [
                            "char * const key"
                        ]
                    },
                    {
                        "path": null,
                        "name": "str",
                        "type": "char * const",
                        "definition": [
                            "char * const str"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int key_idx = *key_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "str_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int str_idx = *str_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "string2_begin",
                        "type": "unsigned",
                        "definition": [
                            "unsigned string2_begin"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_readChunk_zTXt_1",
            "header": "",
            "params": [
                "unsigned * const error_ref",
                "LodePNGDecompressSettings * const zlibsettings_ref",
                "unsigned * const length_ref",
                "unsigned * const string2_begin_ref",
                "unsigned int * const key_idx_ref",
                "LodePNGInfo * const info",
                "const LodePNGDecoderSettings * const decoder",
                "const unsigned char * const data",
                "size_t chunkLength",
                "char * const key",
                "unsigned char * const str",
                "size_t size"
            ],
            "definition": "void helper_readChunk_zTXt_1(unsigned * const error_ref, LodePNGDecompressSettings * const zlibsettings_ref, unsigned * const length_ref, unsigned * const string2_begin_ref, unsigned int * const key_idx_ref, LodePNGInfo * const info, const LodePNGDecoderSettings * const decoder, const unsigned char * const data, size_t chunkLength, char * const key, unsigned char * const str, size_t size)\n{\n  unsigned error = *error_ref;\n  LodePNGDecompressSettings zlibsettings = *zlibsettings_ref;\n  unsigned length = *length_ref;\n  unsigned string2_begin = *string2_begin_ref;\n  unsigned int key_idx = *key_idx_ref;\n  for (length = 0; (length < chunkLength) && (data[length] != 0); length += 1)\n    ;\n\n  if ((length + 2) >= chunkLength)\n  {\n    error = 75;\n    break;\n  }\n  ;\n  if ((length < 1) || (length > 79))\n  {\n    error = 89;\n    break;\n  }\n  ;\n  key_idx = (char *) lodepng_malloc(length + 1);\n  if (!(&key[key_idx]))\n  {\n    error = 83;\n    break;\n  }\n  ;\n  lodepng_memcpy(key, data, length);\n  key[length + key_idx] = 0;\n  if (data[length + 1] != 0)\n  {\n    error = 72;\n    break;\n  }\n  ;\n  string2_begin = length + 2;\n  if (string2_begin > chunkLength)\n  {\n    error = 75;\n    break;\n  }\n  ;\n  length = ((unsigned) chunkLength) - string2_begin;\n  zlibsettings.max_output_size = decoder->max_text_size;\n  error = zlib_decompress(&str, &size, 0, &data[string2_begin], length, &zlibsettings);\n  if (error && (size > zlibsettings.max_output_size))\n  {\n    error = 112;\n  }\n  if (error)\n  {\n    break;\n  }\n  error = lodepng_add_text_sized(info, key, (char *) str, size);\n  break;\n  *error_ref = error;\n  *zlibsettings_ref = zlibsettings;\n  *length_ref = length;\n  *string2_begin_ref = string2_begin;\n  *key_idx_ref = key_idx;\n}\n\n",
            "calle": [
                "lodepng_add_text_sized",
                "lodepng_malloc",
                "lodepng_memcpy",
                "zlib_decompress"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "zlibsettings_ref",
                        "type": "LodePNGDecompressSettings * const",
                        "definition": [
                            "LodePNGDecompressSettings * const zlibsettings_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "string2_begin_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const string2_begin_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const key_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo * const",
                        "definition": [
                            "LodePNGInfo * const info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "decoder",
                        "type": "const LodePNGDecoderSettings * const",
                        "definition": [
                            "const LodePNGDecoderSettings * const decoder"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "size_t",
                        "definition": [
                            "size_t chunkLength"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key",
                        "type": "char * const",
                        "definition": [
                            "char * const key"
                        ]
                    },
                    {
                        "path": null,
                        "name": "str",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const str"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "zlibsettings",
                        "type": "LodePNGDecompressSettings",
                        "definition": [
                            "LodePNGDecompressSettings zlibsettings = *zlibsettings_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length = *length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "string2_begin",
                        "type": "unsigned",
                        "definition": [
                            "unsigned string2_begin = *string2_begin_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int key_idx = *key_idx_ref"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_readChunk_iTXt_1",
            "header": "",
            "params": [
                "unsigned * const error_ref",
                "unsigned * const i_ref",
                "LodePNGDecompressSettings * const zlibsettings_ref",
                "unsigned * const length_ref",
                "unsigned * const begin_ref",
                "unsigned * const compressed_ref",
                "unsigned int * const key_idx_ref",
                "unsigned int * const langtag_idx_ref",
                "unsigned int * const transkey_idx_ref",
                "LodePNGInfo * const info",
                "const LodePNGDecoderSettings * const decoder",
                "const unsigned char * const data",
                "size_t chunkLength",
                "char * const key",
                "char * const langtag",
                "char * const transkey"
            ],
            "definition": "void helper_readChunk_iTXt_1(unsigned * const error_ref, unsigned * const i_ref, LodePNGDecompressSettings * const zlibsettings_ref, unsigned * const length_ref, unsigned * const begin_ref, unsigned * const compressed_ref, unsigned int * const key_idx_ref, unsigned int * const langtag_idx_ref, unsigned int * const transkey_idx_ref, LodePNGInfo * const info, const LodePNGDecoderSettings * const decoder, const unsigned char * const data, size_t chunkLength, char * const key, char * const langtag, char * const transkey)\n{\n  unsigned error = *error_ref;\n  unsigned i = *i_ref;\n  LodePNGDecompressSettings zlibsettings = *zlibsettings_ref;\n  unsigned length = *length_ref;\n  unsigned begin = *begin_ref;\n  unsigned compressed = *compressed_ref;\n  unsigned int key_idx = *key_idx_ref;\n  unsigned int langtag_idx = *langtag_idx_ref;\n  unsigned int transkey_idx = *transkey_idx_ref;\n  if (chunkLength < 5)\n  {\n    error = 30;\n    break;\n  }\n  ;\n  for (length = 0; (length < chunkLength) && (data[length] != 0); length += 1)\n    ;\n\n  if ((length + 3) >= chunkLength)\n  {\n    error = 75;\n    break;\n  }\n  ;\n  if ((length < 1) || (length > 79))\n  {\n    error = 89;\n    break;\n  }\n  ;\n  key_idx = (char *) lodepng_malloc(length + 1);\n  if (!(&key[key_idx]))\n  {\n    error = 83;\n    break;\n  }\n  ;\n  lodepng_memcpy(key, data, length);\n  key[length + key_idx] = 0;\n  compressed = data[length + 1];\n  if (data[length + 2] != 0)\n  {\n    error = 72;\n    break;\n  }\n  ;\n  begin = length + 3;\n  length = 0;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  length += 1;\n  for (i = begin; (i < chunkLength) && (data[i] != 0); i += 1)\n    ++length;\n\n  langtag_idx = (char *) lodepng_malloc(length + 1);\n  if (!(&langtag[langtag_idx]))\n  {\n    error = 83;\n    break;\n  }\n  ;\n  lodepng_memcpy(langtag, data + begin, length);\n  langtag[length + langtag_idx] = 0;\n  begin += length + 1;\n  length = 0;\n  for (i = begin; (i < chunkLength) && (data[i] != 0); ++i)\n    ++length;\n\n  transkey_idx = (char *) lodepng_malloc(length + 1);\n  if (!(&transkey[transkey_idx]))\n  {\n    error = 83;\n    break;\n  }\n  ;\n  lodepng_memcpy(transkey, data + begin, length);\n  transkey[length + transkey_idx] = 0;\n  begin += length + 1;\n  length = (((unsigned) chunkLength) < begin) ? (0) : (((unsigned) chunkLength) - begin);\n  if (compressed)\n  {\n    unsigned char *str = 0;\n    size_t size = 0;\n    zlibsettings.max_output_size = decoder->max_text_size;\n    error = zlib_decompress(&str, &size, 0, &data[begin], length, &zlibsettings);\n    if (error && (size > zlibsettings.max_output_size))\n      error = 112;\n    if (!error)\n      error = lodepng_add_itext_sized(info, key, langtag, transkey, (char *) str, size);\n    lodepng_free(str);\n  }\n  else\n  {\n    error = lodepng_add_itext_sized(info, key, langtag, transkey, (char *) (data + begin), length);\n  }\n  break;\n  *error_ref = error;\n  *i_ref = i;\n  *zlibsettings_ref = zlibsettings;\n  *length_ref = length;\n  *begin_ref = begin;\n  *compressed_ref = compressed;\n  *key_idx_ref = key_idx;\n  *langtag_idx_ref = langtag_idx;\n  *transkey_idx_ref = transkey_idx;\n}\n\n",
            "calle": [
                "lodepng_add_itext_sized",
                "lodepng_free",
                "lodepng_malloc",
                "lodepng_memcpy",
                "zlib_decompress"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "zlibsettings_ref",
                        "type": "LodePNGDecompressSettings * const",
                        "definition": [
                            "LodePNGDecompressSettings * const zlibsettings_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "begin_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const begin_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "compressed_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const compressed_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const key_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "langtag_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const langtag_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "transkey_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const transkey_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo * const",
                        "definition": [
                            "LodePNGInfo * const info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "decoder",
                        "type": "const LodePNGDecoderSettings * const",
                        "definition": [
                            "const LodePNGDecoderSettings * const decoder"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "size_t",
                        "definition": [
                            "size_t chunkLength"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key",
                        "type": "char * const",
                        "definition": [
                            "char * const key"
                        ]
                    },
                    {
                        "path": null,
                        "name": "langtag",
                        "type": "char * const",
                        "definition": [
                            "char * const langtag"
                        ]
                    },
                    {
                        "path": null,
                        "name": "transkey",
                        "type": "char * const",
                        "definition": [
                            "char * const transkey"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "zlibsettings",
                        "type": "LodePNGDecompressSettings",
                        "definition": [
                            "LodePNGDecompressSettings zlibsettings = *zlibsettings_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length = *length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "begin",
                        "type": "unsigned",
                        "definition": [
                            "unsigned begin = *begin_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "compressed",
                        "type": "unsigned",
                        "definition": [
                            "unsigned compressed = *compressed_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "key_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int key_idx = *key_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "langtag_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int langtag_idx = *langtag_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "transkey_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int transkey_idx = *transkey_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "str",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *str = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_readChunk_sBIT_1",
            "header": "",
            "params": [
                "LodePNGInfo * const info",
                "const unsigned char * const data",
                "size_t chunkLength",
                "unsigned bitdepth"
            ],
            "definition": "unsigned helper_readChunk_sBIT_1(LodePNGInfo * const info, const unsigned char * const data, size_t chunkLength, unsigned bitdepth)\n{\n  if (chunkLength != 4)\n  {\n    return 114;\n  }\n  if ((((data[0] == 0) || (data[1] == 0)) || (data[2] == 0)) || (data[3] == 0))\n  {\n    return 115;\n  }\n  if ((((data[0] > bitdepth) || (data[1] > bitdepth)) || (data[2] > bitdepth)) || (data[3] > bitdepth))\n  {\n    return 115;\n  }\n  info->sbit_defined = 1;\n  info->sbit_r = data[0];\n  info->sbit_g = data[1];\n  info->sbit_b = data[2];\n  info->sbit_a = data[3];\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo * const",
                        "definition": [
                            "LodePNGInfo * const info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "size_t",
                        "definition": [
                            "size_t chunkLength"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitdepth",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bitdepth"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_decodeGeneric_1",
            "header": "",
            "params": [
                "size_t * const expected_size_ref",
                "unsigned * const w",
                "unsigned * const h",
                "LodePNGState * const state",
                "unsigned char * const idat",
                "size_t idatsize",
                "unsigned char * const scanlines",
                "size_t scanlines_size"
            ],
            "definition": "void helper_decodeGeneric_1(size_t * const expected_size_ref, unsigned * const w, unsigned * const h, LodePNGState * const state, unsigned char * const idat, size_t idatsize, unsigned char * const scanlines, size_t scanlines_size)\n{\n  size_t expected_size = *expected_size_ref;\n  if (state->info_png.interlace_method == 0)\n  {\n    size_t bpp = lodepng_get_bpp(&state->info_png.color);\n    expected_size = lodepng_get_raw_size_idat(*w, *h, bpp);\n  }\n  else\n  {\n    size_t bpp = lodepng_get_bpp(&state->info_png.color);\n    expected_size = 0;\n    expected_size += lodepng_get_raw_size_idat(((*w) + 7) >> 3, ((*h) + 7) >> 3, bpp);\n    if ((*w) > 4)\n    {\n      expected_size += lodepng_get_raw_size_idat(((*w) + 3) >> 3, ((*h) + 7) >> 3, bpp);\n    }\n    expected_size += lodepng_get_raw_size_idat(((*w) + 3) >> 2, ((*h) + 3) >> 3, bpp);\n    if ((*w) > 2)\n    {\n      expected_size += lodepng_get_raw_size_idat(((*w) + 1) >> 2, ((*h) + 3) >> 2, bpp);\n    }\n    expected_size += lodepng_get_raw_size_idat(((*w) + 1) >> 1, ((*h) + 1) >> 2, bpp);\n    if ((*w) > 1)\n    {\n      expected_size += lodepng_get_raw_size_idat(((*w) + 0) >> 1, ((*h) + 1) >> 1, bpp);\n    }\n    expected_size += lodepng_get_raw_size_idat((*w) + 0, ((*h) + 0) >> 1, bpp);\n  }\n  state->error = zlib_decompress(&scanlines, &scanlines_size, expected_size, idat, idatsize, &state->decoder.zlibsettings);\n  *expected_size_ref = expected_size;\n}\n\n",
            "calle": [
                "lodepng_get_bpp",
                "lodepng_get_raw_size_idat",
                "zlib_decompress"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "expected_size_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const expected_size_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "state",
                        "type": "LodePNGState * const",
                        "definition": [
                            "LodePNGState * const state"
                        ]
                    },
                    {
                        "path": null,
                        "name": "idat",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const idat"
                        ]
                    },
                    {
                        "path": null,
                        "name": "idatsize",
                        "type": "size_t",
                        "definition": [
                            "size_t idatsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "scanlines",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const scanlines"
                        ]
                    },
                    {
                        "path": null,
                        "name": "scanlines_size",
                        "type": "size_t",
                        "definition": [
                            "size_t scanlines_size"
                        ]
                    },
                    {
                        "path": null,
                        "name": "expected_size",
                        "type": "size_t",
                        "definition": [
                            "size_t expected_size = *expected_size_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "size_t",
                        "definition": [
                            "size_t bpp = lodepng_get_bpp(&state->info_png.color)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_decodeGeneric_2",
            "header": "",
            "params": [
                "unsigned char * const IEND_ref",
                "unsigned int * const chunk_idx_ref",
                "size_t * const idatsize_ref",
                "unsigned * const unknown_ref",
                "unsigned * const critical_pos_ref",
                "LodePNGState * const state",
                "const unsigned char * const in",
                "size_t insize",
                "const unsigned char * const chunk",
                "unsigned char * const idat",
                "unsigned int idat_idx"
            ],
            "definition": "void helper_decodeGeneric_2(unsigned char * const IEND_ref, unsigned int * const chunk_idx_ref, size_t * const idatsize_ref, unsigned * const unknown_ref, unsigned * const critical_pos_ref, LodePNGState * const state, const unsigned char * const in, size_t insize, const unsigned char * const chunk, unsigned char * const idat, unsigned int idat_idx)\n{\n  unsigned char IEND = *IEND_ref;\n  unsigned int chunk_idx = *chunk_idx_ref;\n  size_t idatsize = *idatsize_ref;\n  unsigned unknown = *unknown_ref;\n  unsigned critical_pos = *critical_pos_ref;\n  unsigned chunkLength;\n  const unsigned char *data;\n  unsigned int data_idx = 0;\n  size_t pos = (size_t) ((&chunk[chunk_idx]) - in);\n  if (((&chunk[chunk_idx]) < in) || ((pos + 12) > insize))\n  {\n    if (state->decoder.ignore_end)\n    {\n      break;\n    }\n    {\n      state->error = 30;\n      break;\n    }\n    ;\n  }\n  chunkLength = lodepng_chunk_length(chunk);\n  if (chunkLength > 2147483647)\n  {\n    if (state->decoder.ignore_end)\n    {\n      break;\n    }\n    {\n      state->error = 63;\n      break;\n    }\n    ;\n  }\n  if ((((pos + ((size_t) chunkLength)) + 12) > insize) || (((pos + ((size_t) chunkLength)) + 12) < pos))\n  {\n    {\n      state->error = 64;\n      break;\n    }\n    ;\n  }\n  data_idx = lodepng_chunk_data_const(chunk);\n  unknown = 0;\n  if (lodepng_chunk_type_equals(chunk, \"IDAT\"))\n  {\n    helper_helper_decodeGeneric_2_1(&idatsize, &critical_pos, state, insize, idat, idat_idx, chunkLength, data);\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"IEND\"))\n  {\n    IEND = 1;\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"PLTE\"))\n  {\n    state->error = readChunk_PLTE(&state->info_png.color, data, chunkLength);\n    if (state->error)\n    {\n      break;\n    }\n    critical_pos = 2;\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"tRNS\"))\n  {\n    state->error = readChunk_tRNS(&state->info_png.color, data, chunkLength);\n    if (state->error)\n    {\n      break;\n    }\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"bKGD\"))\n  {\n    state->error = readChunk_bKGD(&state->info_png, data, chunkLength);\n    if (state->error)\n    {\n      break;\n    }\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"tEXt\"))\n  {\n    if (state->decoder.read_text_chunks)\n    {\n      state->error = readChunk_tEXt(&state->info_png, data, chunkLength);\n      if (state->error)\n      {\n        break;\n      }\n    }\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"zTXt\"))\n  {\n    if (state->decoder.read_text_chunks)\n    {\n      state->error = readChunk_zTXt(&state->info_png, &state->decoder, data, chunkLength);\n      if (state->error)\n      {\n        break;\n      }\n    }\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"iTXt\"))\n  {\n    if (state->decoder.read_text_chunks)\n    {\n      state->error = readChunk_iTXt(&state->info_png, &state->decoder, data, chunkLength);\n      if (state->error)\n      {\n        break;\n      }\n    }\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"tIME\"))\n  {\n    state->error = readChunk_tIME(&state->info_png, data, chunkLength);\n    if (state->error)\n    {\n      break;\n    }\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"pHYs\"))\n  {\n    state->error = readChunk_pHYs(&state->info_png, data, chunkLength);\n    if (state->error)\n    {\n      break;\n    }\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"gAMA\"))\n  {\n    state->error = readChunk_gAMA(&state->info_png, data, chunkLength);\n    if (state->error)\n    {\n      break;\n    }\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"cHRM\"))\n  {\n    state->error = readChunk_cHRM(&state->info_png, data, chunkLength);\n    if (state->error)\n    {\n      break;\n    }\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"sRGB\"))\n  {\n    state->error = readChunk_sRGB(&state->info_png, data, chunkLength);\n    if (state->error)\n    {\n      break;\n    }\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"iCCP\"))\n  {\n    state->error = readChunk_iCCP(&state->info_png, &state->decoder, data, chunkLength);\n    if (state->error)\n    {\n      break;\n    }\n  }\n  else\n    if (lodepng_chunk_type_equals(chunk, \"sBIT\"))\n  {\n    state->error = readChunk_sBIT(&state->info_png, data, chunkLength);\n    if (state->error)\n    {\n      break;\n    }\n  }\n  else\n  {\n    if ((!state->decoder.ignore_critical) && (!lodepng_chunk_ancillary(chunk)))\n    {\n      {\n        state->error = 69;\n        break;\n      }\n      ;\n    }\n    unknown = 1;\n    if (state->decoder.remember_unknown_chunks)\n    {\n      state->error = lodepng_chunk_append(&state->info_png.unknown_chunks_data[critical_pos - 1], &state->info_png.unknown_chunks_size[critical_pos - 1], chunk);\n      if (state->error)\n      {\n        break;\n      }\n    }\n  }\n  if ((!state->decoder.ignore_crc) && (!unknown))\n  {\n    if (lodepng_chunk_check_crc(chunk))\n    {\n      state->error = 57;\n      break;\n    }\n    ;\n  }\n  if (!IEND)\n  {\n    chunk_idx = lodepng_chunk_next_const(chunk_idx, in + insize);\n  }\n  *IEND_ref = IEND;\n  *chunk_idx_ref = chunk_idx;\n  *idatsize_ref = idatsize;\n  *unknown_ref = unknown;\n  *critical_pos_ref = critical_pos;\n}\n\n",
            "calle": [
                "helper_helper_decodeGeneric_2_1",
                "lodepng_chunk_ancillary",
                "lodepng_chunk_append",
                "lodepng_chunk_check_crc",
                "lodepng_chunk_data_const",
                "lodepng_chunk_length",
                "lodepng_chunk_next_const",
                "lodepng_chunk_type_equals",
                "readChunk_PLTE",
                "readChunk_bKGD",
                "readChunk_cHRM",
                "readChunk_gAMA",
                "readChunk_iCCP",
                "readChunk_iTXt",
                "readChunk_pHYs",
                "readChunk_sBIT",
                "readChunk_sRGB",
                "readChunk_tEXt",
                "readChunk_tIME",
                "readChunk_tRNS",
                "readChunk_zTXt"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "IEND_ref",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const IEND_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const chunk_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "idatsize_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const idatsize_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "unknown_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const unknown_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "critical_pos_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const critical_pos_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "state",
                        "type": "LodePNGState * const",
                        "definition": [
                            "LodePNGState * const state"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "idat",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const idat"
                        ]
                    },
                    {
                        "path": null,
                        "name": "idat_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int idat_idx"
                        ]
                    },
                    {
                        "path": null,
                        "name": "IEND",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char IEND = *IEND_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int chunk_idx = *chunk_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "idatsize",
                        "type": "size_t",
                        "definition": [
                            "size_t idatsize = *idatsize_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "unknown",
                        "type": "unsigned",
                        "definition": [
                            "unsigned unknown = *unknown_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "critical_pos",
                        "type": "unsigned",
                        "definition": [
                            "unsigned critical_pos = *critical_pos_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "unsigned",
                        "definition": [
                            "unsigned chunkLength"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char *",
                        "definition": [
                            "const unsigned char *data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int data_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pos",
                        "type": "size_t",
                        "definition": [
                            "size_t pos = (size_t) ((&chunk[chunk_idx]) - in)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_addChunk_tRNS_1",
            "header": "",
            "params": [
                "ucvector * const out",
                "const LodePNGColorMode * const info",
                "unsigned char * const chunk"
            ],
            "definition": "unsigned helper_addChunk_tRNS_1(ucvector * const out, const LodePNGColorMode * const info, unsigned char * const chunk)\n{\n  if (info->key_defined)\n  {\n    {\n      unsigned error = lodepng_chunk_init(&chunk, out, 6, \"tRNS\");\n      if (error)\n      {\n        return error;\n      }\n    }\n    ;\n    chunk[8] = (unsigned char) (info->key_r >> 8);\n    chunk[9] = (unsigned char) (info->key_r & 255);\n    chunk[10] = (unsigned char) (info->key_g >> 8);\n    chunk[11] = (unsigned char) (info->key_g & 255);\n    chunk[12] = (unsigned char) (info->key_b >> 8);\n    chunk[13] = (unsigned char) (info->key_b & 255);\n  }\n}\n\n",
            "calle": [
                "lodepng_chunk_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector * const",
                        "definition": [
                            "ucvector * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGColorMode * const",
                        "definition": [
                            "const LodePNGColorMode * const info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_chunk_init(&chunk, out, 6, \"tRNS\")"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_addChunk_tRNS_2",
            "header": "",
            "params": [
                "ucvector * const out",
                "const LodePNGColorMode * const info",
                "unsigned char * const chunk"
            ],
            "definition": "unsigned helper_addChunk_tRNS_2(ucvector * const out, const LodePNGColorMode * const info, unsigned char * const chunk)\n{\n  size_t i;\n  size_t amount = info->palettesize;\n  for (i = info->palettesize; i != 0; i -= 1)\n  {\n    if (info->palette[(4 * (i - 1)) + 3] != 255)\n    {\n      break;\n    }\n    amount -= 1;\n  }\n\n  if (amount)\n  {\n    {\n      unsigned error = lodepng_chunk_init(&chunk, out, amount, \"tRNS\");\n      if (error)\n      {\n        return error;\n      }\n    }\n    ;\n    for (i = 0; i != amount; i += 1)\n      chunk[8 + i] = info->palette[(4 * i) + 3];\n\n  }\n}\n\n",
            "calle": [
                "lodepng_chunk_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector * const",
                        "definition": [
                            "ucvector * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGColorMode * const",
                        "definition": [
                            "const LodePNGColorMode * const info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "amount",
                        "type": "size_t",
                        "definition": [
                            "size_t amount = info->palettesize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_chunk_init(&chunk, out, amount, \"tRNS\")"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_addChunk_iTXt_1",
            "header": "",
            "params": [
                "unsigned compress",
                "const char * const keyword",
                "const char * const langtag",
                "const char * const transkey",
                "const char * const textstring",
                "unsigned char * const chunk",
                "unsigned char * const compressed",
                "size_t compressedsize",
                "size_t textsize",
                "size_t keysize",
                "size_t langsize",
                "size_t transsize"
            ],
            "definition": "void helper_addChunk_iTXt_1(unsigned compress, const char * const keyword, const char * const langtag, const char * const transkey, const char * const textstring, unsigned char * const chunk, unsigned char * const compressed, size_t compressedsize, size_t textsize, size_t keysize, size_t langsize, size_t transsize)\n{\n  size_t pos = 8;\n  lodepng_memcpy(chunk + pos, keyword, keysize);\n  pos += keysize;\n  chunk[pos] = 0;\n  pos += 1;\n  chunk[pos] = (compress) ? (1) : (0);\n  pos += 1;\n  chunk[pos] = 0;\n  pos += 1;\n  lodepng_memcpy(chunk + pos, langtag, langsize);\n  pos += langsize;\n  chunk[pos] = 0;\n  pos += 1;\n  lodepng_memcpy(chunk + pos, transkey, transsize);\n  pos += transsize;\n  chunk[pos++] = 0;\n  if (compress)\n  {\n    lodepng_memcpy(chunk + pos, compressed, compressedsize);\n  }\n  else\n  {\n    lodepng_memcpy(chunk + pos, textstring, textsize);\n  }\n  lodepng_chunk_generate_crc(chunk);\n}\n\n",
            "calle": [
                "lodepng_chunk_generate_crc",
                "lodepng_memcpy"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "compress",
                        "type": "unsigned",
                        "definition": [
                            "unsigned compress"
                        ]
                    },
                    {
                        "path": null,
                        "name": "keyword",
                        "type": "const char * const",
                        "definition": [
                            "const char * const keyword"
                        ]
                    },
                    {
                        "path": null,
                        "name": "langtag",
                        "type": "const char * const",
                        "definition": [
                            "const char * const langtag"
                        ]
                    },
                    {
                        "path": null,
                        "name": "transkey",
                        "type": "const char * const",
                        "definition": [
                            "const char * const transkey"
                        ]
                    },
                    {
                        "path": null,
                        "name": "textstring",
                        "type": "const char * const",
                        "definition": [
                            "const char * const textstring"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "compressed",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const compressed"
                        ]
                    },
                    {
                        "path": null,
                        "name": "compressedsize",
                        "type": "size_t",
                        "definition": [
                            "size_t compressedsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "textsize",
                        "type": "size_t",
                        "definition": [
                            "size_t textsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "keysize",
                        "type": "size_t",
                        "definition": [
                            "size_t keysize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "langsize",
                        "type": "size_t",
                        "definition": [
                            "size_t langsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "transsize",
                        "type": "size_t",
                        "definition": [
                            "size_t transsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pos",
                        "type": "size_t",
                        "definition": [
                            "size_t pos = 8"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_addChunk_sBIT_1",
            "header": "",
            "params": [
                "ucvector * const out",
                "const LodePNGInfo * const info",
                "unsigned bitdepth",
                "unsigned char * const chunk"
            ],
            "definition": "unsigned helper_addChunk_sBIT_1(ucvector * const out, const LodePNGInfo * const info, unsigned bitdepth, unsigned char * const chunk)\n{\n  if ((info->sbit_r == 0) || (info->sbit_a == 0))\n  {\n    return 115;\n  }\n  if ((info->sbit_r > bitdepth) || (info->sbit_a > bitdepth))\n  {\n    return 115;\n  }\n  {\n    unsigned error = lodepng_chunk_init(&chunk, out, 2, \"sBIT\");\n    if (error)\n    {\n      return error;\n    }\n  }\n  ;\n  chunk[8] = info->sbit_r;\n  chunk[9] = info->sbit_a;\n}\n\n",
            "calle": [
                "lodepng_chunk_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector * const",
                        "definition": [
                            "ucvector * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGInfo * const",
                        "definition": [
                            "const LodePNGInfo * const info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitdepth",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bitdepth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_chunk_init(&chunk, out, 2, \"sBIT\")"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_addChunk_sBIT_2",
            "header": "",
            "params": [
                "ucvector * const out",
                "const LodePNGInfo * const info",
                "unsigned bitdepth",
                "unsigned char * const chunk"
            ],
            "definition": "unsigned helper_addChunk_sBIT_2(ucvector * const out, const LodePNGInfo * const info, unsigned bitdepth, unsigned char * const chunk)\n{\n  if ((((((((info->sbit_r == 0) || (info->sbit_g == 0)) || (info->sbit_b == 0)) || (info->sbit_a == 0)) || (info->sbit_r > bitdepth)) || (info->sbit_g > bitdepth)) || (info->sbit_b > bitdepth)) || (info->sbit_a > bitdepth))\n  {\n    return 115;\n  }\n  {\n    unsigned error = lodepng_chunk_init(&chunk, out, 4, \"sBIT\");\n    if (error)\n    {\n      return error;\n    }\n  }\n  ;\n  chunk[8] = info->sbit_r;\n  chunk[9] = info->sbit_g;\n  chunk[10] = info->sbit_b;\n  chunk[11] = info->sbit_a;\n}\n\n",
            "calle": [
                "lodepng_chunk_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector * const",
                        "definition": [
                            "ucvector * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGInfo * const",
                        "definition": [
                            "const LodePNGInfo * const info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitdepth",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bitdepth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_chunk_init(&chunk, out, 4, \"sBIT\")"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_addChunk_sBIT_3",
            "header": "",
            "params": [
                "ucvector * const out",
                "const LodePNGInfo * const info",
                "unsigned bitdepth",
                "unsigned char * const chunk"
            ],
            "definition": "unsigned helper_addChunk_sBIT_3(ucvector * const out, const LodePNGInfo * const info, unsigned bitdepth, unsigned char * const chunk)\n{\n  if (((info->sbit_r == 0) || (info->sbit_g == 0)) || (info->sbit_b == 0))\n  {\n    return 115;\n  }\n  if (((info->sbit_r > bitdepth) || (info->sbit_g > bitdepth)) || (info->sbit_b > bitdepth))\n  {\n    return 115;\n  }\n  {\n    unsigned error = lodepng_chunk_init(&chunk, out, 3, \"sBIT\");\n    if (error)\n    {\n      return error;\n    }\n  }\n  ;\n  chunk[8] = info->sbit_r;\n  chunk[9] = info->sbit_g;\n  chunk[10] = info->sbit_b;\n}\n\n",
            "calle": [
                "lodepng_chunk_init"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector * const",
                        "definition": [
                            "ucvector * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "const LodePNGInfo * const",
                        "definition": [
                            "const LodePNGInfo * const info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitdepth",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bitdepth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunk",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const chunk"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = lodepng_chunk_init(&chunk, out, 3, \"sBIT\")"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_filter_1",
            "header": "",
            "params": [
                "size_t * const linebytes_ref",
                "unsigned int * const prevline_idx_ref",
                "unsigned * const x_ref",
                "unsigned * const y_ref",
                "unsigned * const error_ref",
                "unsigned char * const out",
                "const unsigned char * const in",
                "unsigned h",
                "size_t bytewidth",
                "const unsigned char * const prevline"
            ],
            "definition": "void helper_filter_1(size_t * const linebytes_ref, unsigned int * const prevline_idx_ref, unsigned * const x_ref, unsigned * const y_ref, unsigned * const error_ref, unsigned char * const out, const unsigned char * const in, unsigned h, size_t bytewidth, const unsigned char * const prevline)\n{\n  size_t linebytes = *linebytes_ref;\n  unsigned int prevline_idx = *prevline_idx_ref;\n  unsigned x = *x_ref;\n  unsigned y = *y_ref;\n  unsigned error = *error_ref;\n  unsigned char *attempt[5];\n  size_t smallest = 0;\n  unsigned char type;\n  unsigned char bestType = 0;\n  for (type = 0; type != 5; type += 1)\n  {\n    attempt[type] = (unsigned char *) lodepng_malloc(linebytes);\n    if (!attempt[type])\n    {\n      error = 83;\n    }\n  }\n\n  if (!error)\n  {\n    helper_helper_filter_1_1(&linebytes, &prevline_idx, &x, &y, &smallest, &type, &bestType, out, in, h, bytewidth, prevline, attempt);\n  }\n  for (type = 0; type != 5; type += 1)\n    lodepng_free(attempt[type]);\n\n  *linebytes_ref = linebytes;\n  *prevline_idx_ref = prevline_idx;\n  *x_ref = x;\n  *y_ref = y;\n  *error_ref = error;\n}\n\n",
            "calle": [
                "helper_helper_filter_1_1",
                "lodepng_free",
                "lodepng_malloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "linebytes_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const linebytes_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const prevline_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "x_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const x_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const y_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bytewidth",
                        "type": "size_t",
                        "definition": [
                            "size_t bytewidth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const prevline"
                        ]
                    },
                    {
                        "path": null,
                        "name": "linebytes",
                        "type": "size_t",
                        "definition": [
                            "size_t linebytes = *linebytes_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int prevline_idx = *prevline_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "x",
                        "type": "unsigned",
                        "definition": [
                            "unsigned x = *x_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y",
                        "type": "unsigned",
                        "definition": [
                            "unsigned y = *y_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "attempt",
                        "type": "unsigned char *[5]",
                        "definition": [
                            "unsigned char *attempt[5]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "smallest",
                        "type": "size_t",
                        "definition": [
                            "size_t smallest = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "type",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char type"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bestType",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char bestType = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_filter_2",
            "header": "",
            "params": [
                "size_t * const linebytes_ref",
                "unsigned int * const prevline_idx_ref",
                "unsigned * const x_ref",
                "unsigned * const y_ref",
                "unsigned * const error_ref",
                "unsigned char * const out",
                "const unsigned char * const in",
                "unsigned h",
                "size_t bytewidth",
                "const unsigned char * const prevline"
            ],
            "definition": "void helper_filter_2(size_t * const linebytes_ref, unsigned int * const prevline_idx_ref, unsigned * const x_ref, unsigned * const y_ref, unsigned * const error_ref, unsigned char * const out, const unsigned char * const in, unsigned h, size_t bytewidth, const unsigned char * const prevline)\n{\n  size_t linebytes = *linebytes_ref;\n  unsigned int prevline_idx = *prevline_idx_ref;\n  unsigned x = *x_ref;\n  unsigned y = *y_ref;\n  unsigned error = *error_ref;\n  unsigned char *attempt[5];\n  size_t bestSum = 0;\n  unsigned type;\n  unsigned bestType = 0;\n  unsigned count[256];\n  for (type = 0; type != 5; type += 1)\n  {\n    attempt[type] = (unsigned char *) lodepng_malloc(linebytes);\n    if (!attempt[type])\n    {\n      error = 83;\n    }\n  }\n\n  if (!error)\n  {\n    helper_helper_filter_2_1(&linebytes, &prevline_idx, &x, &y, &bestSum, &type, &bestType, out, in, h, bytewidth, prevline, attempt, count);\n  }\n  for (type = 0; type != 5; type += 1)\n    lodepng_free(attempt[type]);\n\n  *linebytes_ref = linebytes;\n  *prevline_idx_ref = prevline_idx;\n  *x_ref = x;\n  *y_ref = y;\n  *error_ref = error;\n}\n\n",
            "calle": [
                "helper_helper_filter_2_1",
                "lodepng_free",
                "lodepng_malloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "linebytes_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const linebytes_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const prevline_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "x_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const x_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const y_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bytewidth",
                        "type": "size_t",
                        "definition": [
                            "size_t bytewidth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const prevline"
                        ]
                    },
                    {
                        "path": null,
                        "name": "linebytes",
                        "type": "size_t",
                        "definition": [
                            "size_t linebytes = *linebytes_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int prevline_idx = *prevline_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "x",
                        "type": "unsigned",
                        "definition": [
                            "unsigned x = *x_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y",
                        "type": "unsigned",
                        "definition": [
                            "unsigned y = *y_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "attempt",
                        "type": "unsigned char *[5]",
                        "definition": [
                            "unsigned char *attempt[5]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bestSum",
                        "type": "size_t",
                        "definition": [
                            "size_t bestSum = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "type",
                        "type": "unsigned",
                        "definition": [
                            "unsigned type"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bestType",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bestType = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "count",
                        "type": "unsigned [256]",
                        "definition": [
                            "unsigned count[256]"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_filter_3",
            "header": "",
            "params": [
                "size_t * const linebytes_ref",
                "unsigned int * const prevline_idx_ref",
                "unsigned * const x_ref",
                "unsigned * const y_ref",
                "unsigned * const error_ref",
                "unsigned char * const out",
                "const unsigned char * const in",
                "unsigned h",
                "const LodePNGEncoderSettings * const settings",
                "size_t bytewidth",
                "const unsigned char * const prevline"
            ],
            "definition": "void helper_filter_3(size_t * const linebytes_ref, unsigned int * const prevline_idx_ref, unsigned * const x_ref, unsigned * const y_ref, unsigned * const error_ref, unsigned char * const out, const unsigned char * const in, unsigned h, const LodePNGEncoderSettings * const settings, size_t bytewidth, const unsigned char * const prevline)\n{\n  size_t linebytes = *linebytes_ref;\n  unsigned int prevline_idx = *prevline_idx_ref;\n  unsigned x = *x_ref;\n  unsigned y = *y_ref;\n  unsigned error = *error_ref;\n  size_t size[5];\n  unsigned char *attempt[5];\n  size_t smallest = 0;\n  unsigned type = 0;\n  unsigned bestType = 0;\n  unsigned char *dummy;\n  unsigned int dummy_idx = 0;\n  LodePNGCompressSettings zlibsettings;\n  lodepng_memcpy(&zlibsettings, &settings->zlibsettings, sizeof(LodePNGCompressSettings));\n  zlibsettings.btype = 1;\n  zlibsettings.custom_zlib = 0;\n  zlibsettings.custom_deflate = 0;\n  for (type = 0; type != 5; type += 1)\n  {\n    attempt[type] = (unsigned char *) lodepng_malloc(linebytes);\n    if (!attempt[type])\n    {\n      error = 83;\n    }\n  }\n\n  if (!error)\n  {\n    helper_helper_filter_3_1(&linebytes, &prevline_idx, &x, &y, &smallest, &type, &bestType, &dummy_idx, out, in, h, bytewidth, prevline, size, attempt, dummy, zlibsettings);\n  }\n  for (type = 0; type != 5; type += 1)\n    lodepng_free(attempt[type]);\n\n  *linebytes_ref = linebytes;\n  *prevline_idx_ref = prevline_idx;\n  *x_ref = x;\n  *y_ref = y;\n  *error_ref = error;\n}\n\n",
            "calle": [
                "helper_helper_filter_3_1",
                "lodepng_free",
                "lodepng_malloc",
                "lodepng_memcpy"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "linebytes_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const linebytes_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const prevline_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "x_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const x_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const y_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGEncoderSettings * const",
                        "definition": [
                            "const LodePNGEncoderSettings * const settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bytewidth",
                        "type": "size_t",
                        "definition": [
                            "size_t bytewidth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const prevline"
                        ]
                    },
                    {
                        "path": null,
                        "name": "linebytes",
                        "type": "size_t",
                        "definition": [
                            "size_t linebytes = *linebytes_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int prevline_idx = *prevline_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "x",
                        "type": "unsigned",
                        "definition": [
                            "unsigned x = *x_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y",
                        "type": "unsigned",
                        "definition": [
                            "unsigned y = *y_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t [5]",
                        "definition": [
                            "size_t size[5]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "attempt",
                        "type": "unsigned char *[5]",
                        "definition": [
                            "unsigned char *attempt[5]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "smallest",
                        "type": "size_t",
                        "definition": [
                            "size_t smallest = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "type",
                        "type": "unsigned",
                        "definition": [
                            "unsigned type = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bestType",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bestType = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "dummy",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *dummy"
                        ]
                    },
                    {
                        "path": null,
                        "name": "dummy_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int dummy_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "zlibsettings",
                        "type": "LodePNGCompressSettings",
                        "definition": [
                            "LodePNGCompressSettings zlibsettings"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_Adam7_interlace_1",
            "header": "",
            "params": [
                "unsigned * const i_ref",
                "unsigned char * const out",
                "const unsigned char * const in",
                "unsigned w",
                "unsigned bpp",
                "unsigned passw[7]",
                "unsigned passh[7]",
                "size_t passstart[8]"
            ],
            "definition": "void helper_Adam7_interlace_1(unsigned * const i_ref, unsigned char * const out, const unsigned char * const in, unsigned w, unsigned bpp, unsigned passw[7], unsigned passh[7], size_t passstart[8])\n{\n  unsigned i = *i_ref;\n  for (i = 0; i != 7; i += 1)\n  {\n    unsigned x;\n    unsigned y;\n    unsigned b;\n    unsigned ilinebits = bpp * passw[i];\n    unsigned olinebits = bpp * w;\n    size_t obp;\n    size_t ibp;\n    for (y = 0; y < passh[i]; y += 1)\n      for (x = 0; x < passw[i]; x += 1)\n    {\n      ibp = ((ADAM7_IY[i] + (y * ADAM7_DY[i])) * olinebits) + ((ADAM7_IX[i] + (x * ADAM7_DX[i])) * bpp);\n      obp = (8 * passstart[i]) + ((y * ilinebits) + (x * bpp));\n      for (b = 0; b < bpp; b += 1)\n      {\n        unsigned char bit = readBitFromReversedStream(&ibp, in);\n        setBitOfReversedStream(&obp, out, bit);\n      }\n\n    }\n\n\n  }\n\n  *i_ref = i;\n}\n\n",
            "calle": [
                "readBitFromReversedStream",
                "setBitOfReversedStream"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bpp"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passw",
                        "type": "unsigned [7]",
                        "definition": [
                            "unsigned passw[7]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passh",
                        "type": "unsigned [7]",
                        "definition": [
                            "unsigned passh[7]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "x",
                        "type": "unsigned",
                        "definition": [
                            "unsigned x"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y",
                        "type": "unsigned",
                        "definition": [
                            "unsigned y"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned",
                        "definition": [
                            "unsigned b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ilinebits",
                        "type": "unsigned",
                        "definition": [
                            "unsigned ilinebits = bpp * passw[i]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "olinebits",
                        "type": "unsigned",
                        "definition": [
                            "unsigned olinebits = bpp * w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "obp",
                        "type": "size_t",
                        "definition": [
                            "size_t obp"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ibp",
                        "type": "size_t",
                        "definition": [
                            "size_t ibp"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bit",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char bit = readBitFromReversedStream(&ibp, in)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "ADAM7_IY",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "ADAM7_DY",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "ADAM7_IX",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "ADAM7_DX",
                        "type": "None",
                        "definition": []
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_preProcessScanlines_1",
            "header": "",
            "params": [
                "unsigned * const error_ref",
                "unsigned char ** const out",
                "size_t * const outsize",
                "const unsigned char * const in",
                "unsigned w",
                "unsigned h",
                "const LodePNGInfo * const info_png",
                "const LodePNGEncoderSettings * const settings",
                "unsigned bpp"
            ],
            "definition": "void helper_preProcessScanlines_1(unsigned * const error_ref, unsigned char ** const out, size_t * const outsize, const unsigned char * const in, unsigned w, unsigned h, const LodePNGInfo * const info_png, const LodePNGEncoderSettings * const settings, unsigned bpp)\n{\n  unsigned error = *error_ref;\n  *outsize = h + (h * (((w * bpp) + 7u) / 8u));\n  *out = (unsigned char *) lodepng_malloc(*outsize);\n  if ((!(*out)) && (*outsize))\n  {\n    error = 83;\n  }\n  if (!error)\n  {\n    if ((bpp < 8) && ((w * bpp) != ((((w * bpp) + 7u) / 8u) * 8u)))\n    {\n      unsigned char *padded = (unsigned char *) lodepng_malloc(h * (((w * bpp) + 7u) / 8u));\n      if (!padded)\n      {\n        error = 83;\n      }\n      if (!error)\n      {\n        addPaddingBits(padded, in, (((w * bpp) + 7u) / 8u) * 8u, w * bpp, h);\n        error = filter(*out, padded, w, h, &info_png->color, settings);\n      }\n      lodepng_free(padded);\n    }\n    else\n    {\n      error = filter(*out, in, w, h, &info_png->color, settings);\n    }\n  }\n  *error_ref = error;\n}\n\n",
            "calle": [
                "addPaddingBits",
                "filter",
                "lodepng_free",
                "lodepng_malloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char ** const",
                        "definition": [
                            "unsigned char ** const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outsize",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const outsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info_png",
                        "type": "const LodePNGInfo * const",
                        "definition": [
                            "const LodePNGInfo * const info_png"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGEncoderSettings * const",
                        "definition": [
                            "const LodePNGEncoderSettings * const settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bpp"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "padded",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *padded = (unsigned char *) lodepng_malloc(h * (((w * bpp) + 7u) / 8u))"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_preProcessScanlines_2",
            "header": "",
            "params": [
                "unsigned * const error_ref",
                "unsigned char ** const out",
                "size_t * const outsize",
                "const unsigned char * const in",
                "unsigned w",
                "unsigned h",
                "const LodePNGInfo * const info_png",
                "const LodePNGEncoderSettings * const settings",
                "unsigned bpp"
            ],
            "definition": "void helper_preProcessScanlines_2(unsigned * const error_ref, unsigned char ** const out, size_t * const outsize, const unsigned char * const in, unsigned w, unsigned h, const LodePNGInfo * const info_png, const LodePNGEncoderSettings * const settings, unsigned bpp)\n{\n  unsigned error = *error_ref;\n  unsigned passw[7];\n  unsigned passh[7];\n  size_t filter_passstart[8];\n  size_t padded_passstart[8];\n  size_t passstart[8];\n  unsigned char *adam7;\n  unsigned int adam7_idx = 0;\n  Adam7_getpassvalues(passw, passh, filter_passstart, padded_passstart, passstart, w, h, bpp);\n  *outsize = filter_passstart[7];\n  *out = (unsigned char *) lodepng_malloc(*outsize);\n  if (!(*out))\n  {\n    error = 83;\n  }\n  adam7_idx = (unsigned char *) lodepng_malloc(passstart[7]);\n  if ((!(&adam7[adam7_idx])) && passstart[7])\n  {\n    error = 83;\n  }\n  if (!error)\n  {\n    helper_helper_preProcessScanlines_2_1(&error, out, in, w, h, info_png, settings, bpp, passw, passh, filter_passstart, padded_passstart, passstart, adam7, adam7_idx);\n  }\n  lodepng_free(adam7);\n  *error_ref = error;\n}\n\n",
            "calle": [
                "Adam7_getpassvalues",
                "helper_helper_preProcessScanlines_2_1",
                "lodepng_free",
                "lodepng_malloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char ** const",
                        "definition": [
                            "unsigned char ** const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outsize",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const outsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info_png",
                        "type": "const LodePNGInfo * const",
                        "definition": [
                            "const LodePNGInfo * const info_png"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGEncoderSettings * const",
                        "definition": [
                            "const LodePNGEncoderSettings * const settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bpp"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passw",
                        "type": "unsigned [7]",
                        "definition": [
                            "unsigned passw[7]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passh",
                        "type": "unsigned [7]",
                        "definition": [
                            "unsigned passh[7]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "filter_passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t filter_passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "padded_passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t padded_passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "adam7",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *adam7"
                        ]
                    },
                    {
                        "path": null,
                        "name": "adam7_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int adam7_idx = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_lodepng_encode_1",
            "header": "",
            "params": [
                "const unsigned char * const image",
                "unsigned w",
                "unsigned h",
                "LodePNGState * const state",
                "unsigned char * const data",
                "size_t datasize",
                "LodePNGInfo info"
            ],
            "definition": "void helper_lodepng_encode_1(const unsigned char * const image, unsigned w, unsigned h, LodePNGState * const state, unsigned char * const data, size_t datasize, LodePNGInfo info)\n{\n  unsigned char *converted;\n  unsigned int converted_idx = 0;\n  size_t size = (((((size_t) w) * ((size_t) h)) * ((size_t) lodepng_get_bpp(&info.color))) + 7u) / 8u;\n  converted_idx = (unsigned char *) lodepng_malloc(size);\n  if ((!(&converted[converted_idx])) && size)\n  {\n    state->error = 83;\n  }\n  if (!state->error)\n  {\n    state->error = lodepng_convert(converted, image, &info.color, &state->info_raw, w, h);\n  }\n  if (!state->error)\n  {\n    state->error = preProcessScanlines(&data, &datasize, converted, w, h, &info, &state->encoder);\n  }\n  lodepng_free(converted);\n  if (state->error)\n  {\n    goto cleanup;\n  }\n}\n\n",
            "calle": [
                "lodepng_convert",
                "lodepng_free",
                "lodepng_get_bpp",
                "lodepng_malloc",
                "preProcessScanlines"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "image",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const image"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "state",
                        "type": "LodePNGState * const",
                        "definition": [
                            "LodePNGState * const state"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "datasize",
                        "type": "size_t",
                        "definition": [
                            "size_t datasize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo",
                        "definition": [
                            "LodePNGInfo info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "converted",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *converted"
                        ]
                    },
                    {
                        "path": null,
                        "name": "converted_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int converted_idx = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t",
                        "definition": [
                            "size_t size = (((((size_t) w) * ((size_t) h)) * ((size_t) lodepng_get_bpp(&info.color))) + 7u) / 8u"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_lodepng_encode_2",
            "header": "",
            "params": [
                "const unsigned char * const image",
                "unsigned w",
                "unsigned h",
                "LodePNGState * const state",
                "LodePNGInfo info",
                "const LodePNGInfo * const info_png",
                "LodePNGColorMode auto_color"
            ],
            "definition": "void helper_lodepng_encode_2(const unsigned char * const image, unsigned w, unsigned h, LodePNGState * const state, LodePNGInfo info, const LodePNGInfo * const info_png, LodePNGColorMode auto_color)\n{\n  LodePNGColorStats stats;\n  unsigned allow_convert = 1;\n  lodepng_color_stats_init(&stats);\n  if (info_png->iccp_defined && isGrayICCProfile(info_png->iccp_profile, info_png->iccp_profile_size))\n  {\n    stats.allow_palette = 0;\n  }\n  if (info_png->iccp_defined && isRGBICCProfile(info_png->iccp_profile, info_png->iccp_profile_size))\n  {\n    stats.allow_greyscale = 0;\n  }\n  state->error = lodepng_compute_color_stats(&stats, image, w, h, &state->info_raw);\n  if (state->error)\n  {\n    goto cleanup;\n  }\n  if (info_png->background_defined)\n  {\n    unsigned r = 0;\n    unsigned g = 0;\n    unsigned b = 0;\n    LodePNGColorMode mode16 = lodepng_color_mode_make(LCT_RGB, 16);\n    lodepng_convert_rgb(&r, &g, &b, info_png->background_r, info_png->background_g, info_png->background_b, &mode16, &info_png->color);\n    state->error = lodepng_color_stats_add(&stats, r, g, b, 65535);\n    if (state->error)\n    {\n      goto cleanup;\n    }\n  }\n  state->error = auto_choose_color(&auto_color, &state->info_raw, &stats);\n  if (state->error)\n  {\n    goto cleanup;\n  }\n  if (info_png->sbit_defined)\n  {\n    helper_helper_lodepng_encode_2_1(&allow_convert, info, info_png, auto_color);\n  }\n  if (state->encoder.force_palette)\n  {\n    if (((info.color.colortype != LCT_GREY) && (info.color.colortype != LCT_GREY_ALPHA)) && ((auto_color.colortype == LCT_GREY) || (auto_color.colortype == LCT_GREY_ALPHA)))\n    {\n      allow_convert = 0;\n    }\n  }\n  if (allow_convert)\n  {\n    lodepng_color_mode_copy(&info.color, &auto_color);\n    if (info_png->background_defined)\n    {\n      if (lodepng_convert_rgb(&info.background_r, &info.background_g, &info.background_b, info_png->background_r, info_png->background_g, info_png->background_b, &info.color, &info_png->color))\n      {\n        state->error = 104;\n        goto cleanup;\n      }\n    }\n  }\n}\n\n",
            "calle": [
                "auto_choose_color",
                "helper_helper_lodepng_encode_2_1",
                "isGrayICCProfile",
                "isRGBICCProfile",
                "lodepng_color_mode_copy",
                "lodepng_color_mode_make",
                "lodepng_color_stats_add",
                "lodepng_color_stats_init",
                "lodepng_compute_color_stats",
                "lodepng_convert_rgb"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "image",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const image"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "state",
                        "type": "LodePNGState * const",
                        "definition": [
                            "LodePNGState * const state"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo",
                        "definition": [
                            "LodePNGInfo info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info_png",
                        "type": "const LodePNGInfo * const",
                        "definition": [
                            "const LodePNGInfo * const info_png"
                        ]
                    },
                    {
                        "path": null,
                        "name": "auto_color",
                        "type": "LodePNGColorMode",
                        "definition": [
                            "LodePNGColorMode auto_color"
                        ]
                    },
                    {
                        "path": null,
                        "name": "stats",
                        "type": "LodePNGColorStats",
                        "definition": [
                            "LodePNGColorStats stats"
                        ]
                    },
                    {
                        "path": null,
                        "name": "allow_convert",
                        "type": "unsigned",
                        "definition": [
                            "unsigned allow_convert = 1"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned",
                        "definition": [
                            "unsigned r = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned",
                        "definition": [
                            "unsigned g = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned",
                        "definition": [
                            "unsigned b = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode16",
                        "type": "LodePNGColorMode",
                        "definition": [
                            "LodePNGColorMode mode16 = lodepng_color_mode_make(LCT_RGB, 16)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_lodepng_encode_3",
            "header": "",
            "params": [
                "unsigned w",
                "unsigned h",
                "LodePNGState * const state",
                "unsigned char * const data",
                "size_t datasize",
                "ucvector outv",
                "LodePNGInfo info",
                "const LodePNGInfo * const info_png"
            ],
            "definition": "void helper_lodepng_encode_3(unsigned w, unsigned h, LodePNGState * const state, unsigned char * const data, size_t datasize, ucvector outv, LodePNGInfo info, const LodePNGInfo * const info_png)\n{\n  size_t i;\n  state->error = writeSignature(&outv);\n  if (state->error)\n  {\n    goto cleanup;\n  }\n  state->error = addChunk_IHDR(&outv, w, h, info.color.colortype, info.color.bitdepth, info.interlace_method);\n  if (state->error)\n  {\n    goto cleanup;\n  }\n  if (info.unknown_chunks_data[0])\n  {\n    state->error = addUnknownChunks(&outv, info.unknown_chunks_data[0], info.unknown_chunks_size[0]);\n    if (state->error)\n    {\n      goto cleanup;\n    }\n  }\n  if (info.iccp_defined)\n  {\n    state->error = addChunk_iCCP(&outv, &info, &state->encoder.zlibsettings);\n    if (state->error)\n    {\n      goto cleanup;\n    }\n  }\n  if (info.srgb_defined)\n  {\n    state->error = addChunk_sRGB(&outv, &info);\n    if (state->error)\n    {\n      goto cleanup;\n    }\n  }\n  if (info.gama_defined)\n  {\n    state->error = addChunk_gAMA(&outv, &info);\n    if (state->error)\n    {\n      goto cleanup;\n    }\n  }\n  if (info.chrm_defined)\n  {\n    state->error = addChunk_cHRM(&outv, &info);\n    if (state->error)\n    {\n      goto cleanup;\n    }\n  }\n  if (info_png->sbit_defined)\n  {\n    state->error = addChunk_sBIT(&outv, &info);\n    if (state->error)\n    {\n      goto cleanup;\n    }\n  }\n  if (info.color.colortype == LCT_PALETTE)\n  {\n    state->error = addChunk_PLTE(&outv, &info.color);\n    if (state->error)\n    {\n      goto cleanup;\n    }\n  }\n  if (state->encoder.force_palette && ((info.color.colortype == LCT_RGB) || (info.color.colortype == LCT_RGBA)))\n  {\n    state->error = addChunk_PLTE(&outv, &info.color);\n    if (state->error)\n    {\n      goto cleanup;\n    }\n  }\n  state->error = addChunk_tRNS(&outv, &info.color);\n  if (state->error)\n  {\n    goto cleanup;\n  }\n  if (info.background_defined)\n  {\n    state->error = addChunk_bKGD(&outv, &info);\n    if (state->error)\n    {\n      goto cleanup;\n    }\n  }\n  if (info.phys_defined)\n  {\n    state->error = addChunk_pHYs(&outv, &info);\n    if (state->error)\n    {\n      goto cleanup;\n    }\n  }\n  if (info.unknown_chunks_data[1])\n  {\n    state->error = addUnknownChunks(&outv, info.unknown_chunks_data[1], info.unknown_chunks_size[1]);\n    if (state->error)\n    {\n      goto cleanup;\n    }\n  }\n  state->error = addChunk_IDAT(&outv, data, datasize, &state->encoder.zlibsettings);\n  if (state->error)\n  {\n    goto cleanup;\n  }\n  if (info.time_defined)\n  {\n    state->error = addChunk_tIME(&outv, &info.time);\n    if (state->error)\n    {\n      goto cleanup;\n    }\n  }\n  for (i = 0; i != info.text_num; i += 1)\n  {\n    helper_helper_lodepng_encode_3_1(state, outv, info, i);\n  }\n\n  if (state->encoder.add_id)\n  {\n    unsigned already_added_id_text = 0;\n    for (i = 0; i != info.text_num; i += 1)\n    {\n      const char *k = info.text_keys[i];\n      if ((((((((k[0] == 'L') && (k[1] == 'o')) && (k[2] == 'd')) && (k[3] == 'e')) && (k[4] == 'P')) && (k[5] == 'N')) && (k[6] == 'G')) && (k[7] == '\\0'))\n      {\n        already_added_id_text = 1;\n        break;\n      }\n    }\n\n    if (already_added_id_text == 0)\n    {\n      state->error = addChunk_tEXt(&outv, \"LodePNG\", LODEPNG_VERSION_STRING);\n      if (state->error)\n      {\n        goto cleanup;\n      }\n    }\n  }\n  for (i = 0; i != info.itext_num; i += 1)\n  {\n    if (lodepng_strlen(info.itext_keys[i]) > 79)\n    {\n      state->error = 66;\n      goto cleanup;\n    }\n    if (lodepng_strlen(info.itext_keys[i]) < 1)\n    {\n      state->error = 67;\n      goto cleanup;\n    }\n    state->error = addChunk_iTXt(&outv, state->encoder.text_compression, info.itext_keys[i], info.itext_langtags[i], info.itext_transkeys[i], info.itext_strings[i], &state->encoder.zlibsettings);\n    if (state->error)\n    {\n      goto cleanup;\n    }\n  }\n\n  if (info.unknown_chunks_data[2])\n  {\n    state->error = addUnknownChunks(&outv, info.unknown_chunks_data[2], info.unknown_chunks_size[2]);\n    if (state->error)\n    {\n      goto cleanup;\n    }\n  }\n  state->error = addChunk_IEND(&outv);\n  if (state->error)\n  {\n    goto cleanup;\n  }\n}\n\n",
            "calle": [
                "addChunk_IDAT",
                "addChunk_IEND",
                "addChunk_IHDR",
                "addChunk_PLTE",
                "addChunk_bKGD",
                "addChunk_cHRM",
                "addChunk_gAMA",
                "addChunk_iCCP",
                "addChunk_iTXt",
                "addChunk_pHYs",
                "addChunk_sBIT",
                "addChunk_sRGB",
                "addChunk_tEXt",
                "addChunk_tIME",
                "addChunk_tRNS",
                "addUnknownChunks",
                "helper_helper_lodepng_encode_3_1",
                "lodepng_strlen",
                "writeSignature"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "state",
                        "type": "LodePNGState * const",
                        "definition": [
                            "LodePNGState * const state"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "datasize",
                        "type": "size_t",
                        "definition": [
                            "size_t datasize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outv",
                        "type": "ucvector",
                        "definition": [
                            "ucvector outv"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo",
                        "definition": [
                            "LodePNGInfo info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info_png",
                        "type": "const LodePNGInfo * const",
                        "definition": [
                            "const LodePNGInfo * const info_png"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "already_added_id_text",
                        "type": "unsigned",
                        "definition": [
                            "unsigned already_added_id_text = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "k",
                        "type": "const char *",
                        "definition": [
                            "const char *k = info.text_keys[i]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "LODEPNG_VERSION_STRING",
                        "type": "None",
                        "definition": []
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_HuffmanTree_makeTable_1_1",
            "header": "",
            "params": [
                "HuffmanTree * const tree",
                "static const unsigned mask",
                "size_t i",
                "unsigned l",
                "unsigned reverse"
            ],
            "definition": "unsigned helper_helper_HuffmanTree_makeTable_1_1(HuffmanTree * const tree, static const unsigned mask, size_t i, unsigned l, unsigned reverse)\n{\n  unsigned index = reverse & mask;\n  unsigned maxlen = tree->table_len[index];\n  unsigned tablelen = maxlen - 9u;\n  unsigned start = tree->table_value[index];\n  unsigned num = 1u << (tablelen - (l - 9u));\n  unsigned j;\n  if (maxlen < l)\n  {\n    return 55;\n  }\n  for (j = 0; j < num; j += 1)\n  {\n    unsigned reverse2 = reverse >> 9u;\n    unsigned index2 = start + (reverse2 | (j << (l - 9u)));\n    tree->table_len[index2] = l;\n    tree->table_value[index2] = i;\n  }\n\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "tree",
                        "type": "HuffmanTree * const",
                        "definition": [
                            "HuffmanTree * const tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mask",
                        "type": "const unsigned",
                        "definition": [
                            "static const unsigned mask"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "l",
                        "type": "unsigned",
                        "definition": [
                            "unsigned l"
                        ]
                    },
                    {
                        "path": null,
                        "name": "reverse",
                        "type": "unsigned",
                        "definition": [
                            "unsigned reverse"
                        ]
                    },
                    {
                        "path": null,
                        "name": "index",
                        "type": "unsigned",
                        "definition": [
                            "unsigned index = reverse & mask"
                        ]
                    },
                    {
                        "path": null,
                        "name": "maxlen",
                        "type": "unsigned",
                        "definition": [
                            "unsigned maxlen = tree->table_len[index]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tablelen",
                        "type": "unsigned",
                        "definition": [
                            "unsigned tablelen = maxlen - 9u"
                        ]
                    },
                    {
                        "path": null,
                        "name": "start",
                        "type": "unsigned",
                        "definition": [
                            "unsigned start = tree->table_value[index]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "num",
                        "type": "unsigned",
                        "definition": [
                            "unsigned num = 1u << (tablelen - (l - 9u))"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "unsigned",
                        "definition": [
                            "unsigned j"
                        ]
                    },
                    {
                        "path": null,
                        "name": "reverse2",
                        "type": "unsigned",
                        "definition": [
                            "unsigned reverse2 = reverse >> 9u"
                        ]
                    },
                    {
                        "path": null,
                        "name": "index2",
                        "type": "unsigned",
                        "definition": [
                            "unsigned index2 = start + (reverse2 | (j << (l - 9u)))"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_getTreeInflateDynamic_1_1",
            "header": "",
            "params": [
                "unsigned * const error_ref",
                "unsigned * const n_ref",
                "unsigned * const HLIT_ref",
                "unsigned * const i_ref",
                "unsigned int * const bitlen_ll_idx_ref",
                "unsigned int * const bitlen_d_idx_ref",
                "LodePNGBitReader * const reader",
                "unsigned HDIST",
                "unsigned * const bitlen_ll",
                "unsigned * const bitlen_d",
                "HuffmanTree tree_cl"
            ],
            "definition": "void helper_helper_getTreeInflateDynamic_1_1(unsigned * const error_ref, unsigned * const n_ref, unsigned * const HLIT_ref, unsigned * const i_ref, unsigned int * const bitlen_ll_idx_ref, unsigned int * const bitlen_d_idx_ref, LodePNGBitReader * const reader, unsigned HDIST, unsigned * const bitlen_ll, unsigned * const bitlen_d, HuffmanTree tree_cl)\n{\n  unsigned error = *error_ref;\n  unsigned n = *n_ref;\n  unsigned HLIT = *HLIT_ref;\n  unsigned i = *i_ref;\n  unsigned int bitlen_ll_idx = *bitlen_ll_idx_ref;\n  unsigned int bitlen_d_idx = *bitlen_d_idx_ref;\n  unsigned code;\n  ensureBits25(reader, 22);\n  code = huffmanDecodeSymbol(reader, &tree_cl);\n  if (code <= 15)\n  {\n    if (i < HLIT)\n    {\n      bitlen_ll[i + bitlen_ll_idx] = code;\n    }\n    else\n      bitlen_d[(i - HLIT) + bitlen_d_idx] = code;\n    i += 1;\n  }\n  else\n    if (code == 16)\n  {\n    helper_helper_helper_getTreeInflateDynamic_1_1_1(&error, &n, &HLIT, &i, &bitlen_ll_idx, &bitlen_d_idx, reader, HDIST, bitlen_ll, bitlen_d);\n  }\n  else\n    if (code == 17)\n  {\n    unsigned replength = 3;\n    replength += readBits(reader, 3);\n    for (n = 0; n < replength; n += 1)\n    {\n      if (i >= (HLIT + HDIST))\n      {\n        error = 14;\n        break;\n      }\n      ;\n      if (i < HLIT)\n      {\n        bitlen_ll[i + bitlen_ll_idx] = 0;\n      }\n      else\n        bitlen_d[(i - HLIT) + bitlen_d_idx] = 0;\n      i += 1;\n    }\n\n  }\n  else\n    if (code == 18)\n  {\n    unsigned replength = 11;\n    replength += readBits(reader, 7);\n    for (n = 0; n < replength; n += 1)\n    {\n      if (i >= (HLIT + HDIST))\n      {\n        error = 15;\n        break;\n      }\n      ;\n      if (i < HLIT)\n      {\n        bitlen_ll[i + bitlen_ll_idx] = 0;\n      }\n      else\n        bitlen_d[(i - HLIT) + bitlen_d_idx] = 0;\n      i += 1;\n    }\n\n  }\n  else\n  {\n    {\n      error = 16;\n      break;\n    }\n    ;\n  }\n  if (reader->bp > reader->bitsize)\n  {\n    {\n      error = 50;\n      break;\n    }\n    ;\n  }\n  *error_ref = error;\n  *n_ref = n;\n  *HLIT_ref = HLIT;\n  *i_ref = i;\n  *bitlen_ll_idx_ref = bitlen_ll_idx;\n  *bitlen_d_idx_ref = bitlen_d_idx;\n}\n\n",
            "calle": [
                "ensureBits25",
                "helper_helper_helper_getTreeInflateDynamic_1_1_1",
                "huffmanDecodeSymbol",
                "readBits"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "n_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const n_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HLIT_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const HLIT_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_ll_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const bitlen_ll_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_d_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const bitlen_d_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "reader",
                        "type": "LodePNGBitReader * const",
                        "definition": [
                            "LodePNGBitReader * const reader"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HDIST",
                        "type": "unsigned",
                        "definition": [
                            "unsigned HDIST"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_ll",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const bitlen_ll"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_d",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const bitlen_d"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_cl",
                        "type": "HuffmanTree",
                        "definition": [
                            "HuffmanTree tree_cl"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "n",
                        "type": "unsigned",
                        "definition": [
                            "unsigned n = *n_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HLIT",
                        "type": "unsigned",
                        "definition": [
                            "unsigned HLIT = *HLIT_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_ll_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int bitlen_ll_idx = *bitlen_ll_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_d_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int bitlen_d_idx = *bitlen_d_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "code",
                        "type": "unsigned",
                        "definition": [
                            "unsigned code"
                        ]
                    },
                    {
                        "path": null,
                        "name": "replength",
                        "type": "unsigned",
                        "definition": [
                            "unsigned replength = 11",
                            "unsigned replength = 3"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_inflateHuffmanBlock_1_1",
            "header": "",
            "params": [
                "unsigned * const error_ref",
                "ucvector * const out",
                "LodePNGBitReader * const reader",
                "HuffmanTree tree_d",
                "unsigned code_ll"
            ],
            "definition": "void helper_helper_inflateHuffmanBlock_1_1(unsigned * const error_ref, ucvector * const out, LodePNGBitReader * const reader, HuffmanTree tree_d, unsigned code_ll)\n{\n  unsigned error = *error_ref;\n  unsigned code_d;\n  unsigned distance;\n  unsigned numextrabits_l;\n  unsigned numextrabits_d;\n  size_t start;\n  size_t backward;\n  size_t length;\n  length = LENGTHBASE[code_ll - 257];\n  numextrabits_l = LENGTHEXTRA[code_ll - 257];\n  if (numextrabits_l != 0)\n  {\n    ensureBits25(reader, 5);\n    length += readBits(reader, numextrabits_l);\n  }\n  ensureBits32(reader, 28);\n  code_d = huffmanDecodeSymbol(reader, &tree_d);\n  if (code_d > 29)\n  {\n    if (code_d <= 31)\n    {\n      {\n        error = 18;\n        break;\n      }\n      ;\n    }\n    else\n    {\n      {\n        error = 16;\n        break;\n      }\n      ;\n    }\n  }\n  distance = DISTANCEBASE[code_d];\n  numextrabits_d = DISTANCEEXTRA[code_d];\n  if (numextrabits_d != 0)\n  {\n    distance += readBits(reader, numextrabits_d);\n  }\n  start = out->size;\n  if (distance > start)\n  {\n    error = 52;\n    break;\n  }\n  ;\n  backward = start - distance;\n  out->size += length;\n  if (distance < length)\n  {\n    size_t forward;\n    lodepng_memcpy(out->data + start, out->data + backward, distance);\n    start += distance;\n    for (forward = distance; forward < length; forward += 1)\n    {\n      out->data[start] = out->data[backward];\n      backward += 1;\n      start += 1;\n    }\n\n  }\n  else\n  {\n    lodepng_memcpy(out->data + start, out->data + backward, length);\n  }\n  *error_ref = error;\n}\n\n",
            "calle": [
                "ensureBits25",
                "ensureBits32",
                "huffmanDecodeSymbol",
                "lodepng_memcpy",
                "readBits"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "ucvector * const",
                        "definition": [
                            "ucvector * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "reader",
                        "type": "LodePNGBitReader * const",
                        "definition": [
                            "LodePNGBitReader * const reader"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree_d",
                        "type": "HuffmanTree",
                        "definition": [
                            "HuffmanTree tree_d"
                        ]
                    },
                    {
                        "path": null,
                        "name": "code_ll",
                        "type": "unsigned",
                        "definition": [
                            "unsigned code_ll"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "code_d",
                        "type": "unsigned",
                        "definition": [
                            "unsigned code_d"
                        ]
                    },
                    {
                        "path": null,
                        "name": "distance",
                        "type": "unsigned",
                        "definition": [
                            "unsigned distance"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numextrabits_l",
                        "type": "unsigned",
                        "definition": [
                            "unsigned numextrabits_l"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numextrabits_d",
                        "type": "unsigned",
                        "definition": [
                            "unsigned numextrabits_d"
                        ]
                    },
                    {
                        "path": null,
                        "name": "start",
                        "type": "size_t",
                        "definition": [
                            "size_t start"
                        ]
                    },
                    {
                        "path": null,
                        "name": "backward",
                        "type": "size_t",
                        "definition": [
                            "size_t backward"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "size_t",
                        "definition": [
                            "size_t length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "forward",
                        "type": "size_t",
                        "definition": [
                            "size_t forward"
                        ]
                    },
                    {
                        "path": null,
                        "name": "LENGTHBASE",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "LENGTHEXTRA",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "DISTANCEBASE",
                        "type": "None",
                        "definition": []
                    },
                    {
                        "path": null,
                        "name": "DISTANCEEXTRA",
                        "type": "None",
                        "definition": []
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_encodeLZ77_1_1",
            "header": "",
            "params": [
                "size_t * const pos_ref",
                "unsigned * const i_ref",
                "unsigned * const numzeros_ref",
                "unsigned * const hashval_ref",
                "size_t * const wpos_ref",
                "uivector * const out",
                "Hash * const hash",
                "const unsigned char * const in",
                "size_t insize",
                "unsigned windowsize",
                "unsigned usezeros",
                "unsigned offset",
                "unsigned length"
            ],
            "definition": "void helper_helper_encodeLZ77_1_1(size_t * const pos_ref, unsigned * const i_ref, unsigned * const numzeros_ref, unsigned * const hashval_ref, size_t * const wpos_ref, uivector * const out, Hash * const hash, const unsigned char * const in, size_t insize, unsigned windowsize, unsigned usezeros, unsigned offset, unsigned length)\n{\n  size_t pos = *pos_ref;\n  unsigned i = *i_ref;\n  unsigned numzeros = *numzeros_ref;\n  unsigned hashval = *hashval_ref;\n  size_t wpos = *wpos_ref;\n  addLengthDistance(out, length, offset);\n  for (i = 1; i < length; i += 1)\n  {\n    pos += 1;\n    wpos = pos & (windowsize - 1);\n    hashval = getHash(in, insize, pos);\n    if (usezeros && (hashval == 0))\n    {\n      if (numzeros == 0)\n      {\n        numzeros = countZeros(in, insize, pos);\n      }\n      else\n        if (((pos + numzeros) > insize) || (in[(pos + numzeros) - 1] != 0))\n      {\n        numzeros -= 1;\n      }\n    }\n    else\n    {\n      numzeros = 0;\n    }\n    updateHashChain(hash, wpos, hashval, numzeros);\n  }\n\n  *pos_ref = pos;\n  *i_ref = i;\n  *numzeros_ref = numzeros;\n  *hashval_ref = hashval;\n  *wpos_ref = wpos;\n}\n\n",
            "calle": [
                "addLengthDistance",
                "countZeros",
                "getHash",
                "updateHashChain"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "pos_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const pos_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numzeros_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const numzeros_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hashval_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const hashval_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "wpos_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const wpos_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "uivector * const",
                        "definition": [
                            "uivector * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hash",
                        "type": "Hash * const",
                        "definition": [
                            "Hash * const hash"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "windowsize",
                        "type": "unsigned",
                        "definition": [
                            "unsigned windowsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "usezeros",
                        "type": "unsigned",
                        "definition": [
                            "unsigned usezeros"
                        ]
                    },
                    {
                        "path": null,
                        "name": "offset",
                        "type": "unsigned",
                        "definition": [
                            "unsigned offset"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pos",
                        "type": "size_t",
                        "definition": [
                            "size_t pos = *pos_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numzeros",
                        "type": "unsigned",
                        "definition": [
                            "unsigned numzeros = *numzeros_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hashval",
                        "type": "unsigned",
                        "definition": [
                            "unsigned hashval = *hashval_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "wpos",
                        "type": "size_t",
                        "definition": [
                            "size_t wpos = *wpos_ref"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_encodeLZ77_1_2",
            "header": "",
            "params": [
                "size_t * const pos_ref",
                "unsigned * const error_ref",
                "unsigned * const numzeros_ref",
                "unsigned * const offset_ref",
                "unsigned * const length_ref",
                "unsigned * const lazy_ref",
                "unsigned * const lazylength_ref",
                "unsigned * const lazyoffset_ref",
                "unsigned * const hashval_ref",
                "uivector * const out",
                "Hash * const hash",
                "const unsigned char * const in",
                "unsigned maxlazymatch"
            ],
            "definition": "void helper_helper_encodeLZ77_1_2(size_t * const pos_ref, unsigned * const error_ref, unsigned * const numzeros_ref, unsigned * const offset_ref, unsigned * const length_ref, unsigned * const lazy_ref, unsigned * const lazylength_ref, unsigned * const lazyoffset_ref, unsigned * const hashval_ref, uivector * const out, Hash * const hash, const unsigned char * const in, unsigned maxlazymatch)\n{\n  size_t pos = *pos_ref;\n  unsigned error = *error_ref;\n  unsigned numzeros = *numzeros_ref;\n  unsigned offset = *offset_ref;\n  unsigned length = *length_ref;\n  unsigned lazy = *lazy_ref;\n  unsigned lazylength = *lazylength_ref;\n  unsigned lazyoffset = *lazyoffset_ref;\n  unsigned hashval = *hashval_ref;\n  if ((((!lazy) && (length >= 3)) && (length <= maxlazymatch)) && (length < MAX_SUPPORTED_DEFLATE_LENGTH))\n  {\n    lazy = 1;\n    lazylength = length;\n    lazyoffset = offset;\n    continue;\n  }\n  if (lazy)\n  {\n    helper_helper_helper_encodeLZ77_1_2_1(&pos, &error, &numzeros, &offset, &length, &lazy, &hashval, out, hash, in, lazylength, lazyoffset);\n  }\n  *pos_ref = pos;\n  *error_ref = error;\n  *numzeros_ref = numzeros;\n  *offset_ref = offset;\n  *length_ref = length;\n  *lazy_ref = lazy;\n  *lazylength_ref = lazylength;\n  *lazyoffset_ref = lazyoffset;\n  *hashval_ref = hashval;\n}\n\n",
            "calle": [
                "helper_helper_helper_encodeLZ77_1_2_1"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "pos_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const pos_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numzeros_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const numzeros_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "offset_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const offset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazy_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const lazy_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazylength_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const lazylength_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazyoffset_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const lazyoffset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hashval_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const hashval_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "uivector * const",
                        "definition": [
                            "uivector * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hash",
                        "type": "Hash * const",
                        "definition": [
                            "Hash * const hash"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "maxlazymatch",
                        "type": "unsigned",
                        "definition": [
                            "unsigned maxlazymatch"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pos",
                        "type": "size_t",
                        "definition": [
                            "size_t pos = *pos_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numzeros",
                        "type": "unsigned",
                        "definition": [
                            "unsigned numzeros = *numzeros_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "offset",
                        "type": "unsigned",
                        "definition": [
                            "unsigned offset = *offset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length = *length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazy",
                        "type": "unsigned",
                        "definition": [
                            "unsigned lazy = *lazy_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazylength",
                        "type": "unsigned",
                        "definition": [
                            "unsigned lazylength = *lazylength_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazyoffset",
                        "type": "unsigned",
                        "definition": [
                            "unsigned lazyoffset = *lazyoffset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hashval",
                        "type": "unsigned",
                        "definition": [
                            "unsigned hashval = *hashval_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "MAX_SUPPORTED_DEFLATE_LENGTH",
                        "type": "None",
                        "definition": []
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_encodeLZ77_1_3",
            "header": "",
            "params": [
                "unsigned * const offset_ref",
                "unsigned * const length_ref",
                "unsigned * const current_offset_ref",
                "unsigned * const current_length_ref",
                "unsigned * const prev_offset_ref",
                "unsigned int * const foreptr_idx_ref",
                "unsigned int * const backptr_idx_ref",
                "unsigned * const hashpos_ref",
                "Hash * const hash",
                "const unsigned char * const in",
                "unsigned windowsize",
                "unsigned nicematch",
                "unsigned maxchainlength",
                "const unsigned char * const lastptr",
                "const unsigned char * const foreptr",
                "const unsigned char * const backptr",
                "size_t pos",
                "unsigned numzeros",
                "unsigned hashval",
                "unsigned int lastptr_idx",
                "size_t wpos",
                "unsigned chainlength"
            ],
            "definition": "void helper_helper_encodeLZ77_1_3(unsigned * const offset_ref, unsigned * const length_ref, unsigned * const current_offset_ref, unsigned * const current_length_ref, unsigned * const prev_offset_ref, unsigned int * const foreptr_idx_ref, unsigned int * const backptr_idx_ref, unsigned * const hashpos_ref, Hash * const hash, const unsigned char * const in, unsigned windowsize, unsigned nicematch, unsigned maxchainlength, const unsigned char * const lastptr, const unsigned char * const foreptr, const unsigned char * const backptr, size_t pos, unsigned numzeros, unsigned hashval, unsigned int lastptr_idx, size_t wpos, unsigned chainlength)\n{\n  unsigned offset = *offset_ref;\n  unsigned length = *length_ref;\n  unsigned current_offset = *current_offset_ref;\n  unsigned current_length = *current_length_ref;\n  unsigned prev_offset = *prev_offset_ref;\n  unsigned int foreptr_idx = *foreptr_idx_ref;\n  unsigned int backptr_idx = *backptr_idx_ref;\n  unsigned hashpos = *hashpos_ref;\n  if ((chainlength++) >= maxchainlength)\n  {\n    break;\n  }\n  current_offset = (unsigned) ((hashpos <= wpos) ? (wpos - hashpos) : ((wpos - hashpos) + windowsize));\n  if (current_offset < prev_offset)\n  {\n    break;\n  }\n  prev_offset = current_offset;\n  if (current_offset > 0)\n  {\n    helper_helper_helper_encodeLZ77_1_3_1(&offset, &length, &current_length, &foreptr_idx, &backptr_idx, hash, in, nicematch, lastptr, foreptr, backptr, pos, numzeros, lastptr_idx, current_offset, hashpos);\n  }\n  if (hashpos == hash->chain[hashpos])\n  {\n    break;\n  }\n  if ((numzeros >= 3) && (length > numzeros))\n  {\n    hashpos = hash->chainz[hashpos];\n    if (hash->zeros[hashpos] != numzeros)\n    {\n      break;\n    }\n  }\n  else\n  {\n    hashpos = hash->chain[hashpos];\n    if (hash->val[hashpos] != ((int) hashval))\n    {\n      break;\n    }\n  }\n  *offset_ref = offset;\n  *length_ref = length;\n  *current_offset_ref = current_offset;\n  *current_length_ref = current_length;\n  *prev_offset_ref = prev_offset;\n  *foreptr_idx_ref = foreptr_idx;\n  *backptr_idx_ref = backptr_idx;\n  *hashpos_ref = hashpos;\n}\n\n",
            "calle": [
                "helper_helper_helper_encodeLZ77_1_3_1"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "offset_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const offset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "current_offset_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const current_offset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "current_length_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const current_length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prev_offset_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const prev_offset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "foreptr_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const foreptr_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "backptr_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const backptr_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hashpos_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const hashpos_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hash",
                        "type": "Hash * const",
                        "definition": [
                            "Hash * const hash"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "windowsize",
                        "type": "unsigned",
                        "definition": [
                            "unsigned windowsize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "nicematch",
                        "type": "unsigned",
                        "definition": [
                            "unsigned nicematch"
                        ]
                    },
                    {
                        "path": null,
                        "name": "maxchainlength",
                        "type": "unsigned",
                        "definition": [
                            "unsigned maxchainlength"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lastptr",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const lastptr"
                        ]
                    },
                    {
                        "path": null,
                        "name": "foreptr",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const foreptr"
                        ]
                    },
                    {
                        "path": null,
                        "name": "backptr",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const backptr"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pos",
                        "type": "size_t",
                        "definition": [
                            "size_t pos"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numzeros",
                        "type": "unsigned",
                        "definition": [
                            "unsigned numzeros"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hashval",
                        "type": "unsigned",
                        "definition": [
                            "unsigned hashval"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lastptr_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int lastptr_idx"
                        ]
                    },
                    {
                        "path": null,
                        "name": "wpos",
                        "type": "size_t",
                        "definition": [
                            "size_t wpos"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chainlength",
                        "type": "unsigned",
                        "definition": [
                            "unsigned chainlength"
                        ]
                    },
                    {
                        "path": null,
                        "name": "offset",
                        "type": "unsigned",
                        "definition": [
                            "unsigned offset = *offset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length = *length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "current_offset",
                        "type": "unsigned",
                        "definition": [
                            "unsigned current_offset = *current_offset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "current_length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned current_length = *current_length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prev_offset",
                        "type": "unsigned",
                        "definition": [
                            "unsigned prev_offset = *prev_offset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "foreptr_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int foreptr_idx = *foreptr_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "backptr_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int backptr_idx = *backptr_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hashpos",
                        "type": "unsigned",
                        "definition": [
                            "unsigned hashpos = *hashpos_ref"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_deflateDynamic_1_1",
            "header": "",
            "params": [
                "unsigned int * const bitlen_lld_e_idx_ref",
                "size_t * const i_ref",
                "size_t * const numcodes_lld_e_ref",
                "unsigned * const bitlen_lld",
                "unsigned * const bitlen_lld_e",
                "unsigned int bitlen_lld_idx",
                "size_t numcodes_lld"
            ],
            "definition": "void helper_helper_deflateDynamic_1_1(unsigned int * const bitlen_lld_e_idx_ref, size_t * const i_ref, size_t * const numcodes_lld_e_ref, unsigned * const bitlen_lld, unsigned * const bitlen_lld_e, unsigned int bitlen_lld_idx, size_t numcodes_lld)\n{\n  unsigned int bitlen_lld_e_idx = *bitlen_lld_e_idx_ref;\n  size_t i = *i_ref;\n  size_t numcodes_lld_e = *numcodes_lld_e_ref;\n  unsigned j = 0;\n  j += 1;\n  j += 1;\n  while ((((i + j) + 1) < numcodes_lld) && (bitlen_lld[((i + j) + 1) + bitlen_lld_idx] == bitlen_lld[i + bitlen_lld_idx]))\n    ++j;\n\n  if ((bitlen_lld[i + bitlen_lld_idx] == 0) && (j >= 2))\n  {\n    ++j;\n    if (j <= 10)\n    {\n      bitlen_lld_e[(numcodes_lld_e++) + bitlen_lld_e_idx] = 17;\n      bitlen_lld_e[(numcodes_lld_e++) + bitlen_lld_e_idx] = j - 3;\n    }\n    else\n    {\n      if (j > 138)\n        j = 138;\n      bitlen_lld_e[(numcodes_lld_e++) + bitlen_lld_e_idx] = 18;\n      bitlen_lld_e[(numcodes_lld_e++) + bitlen_lld_e_idx] = j - 11;\n    }\n    i += j - 1;\n  }\n  else\n    if (j >= 3)\n  {\n    helper_helper_helper_deflateDynamic_1_1_1(&bitlen_lld_e_idx, &i, &numcodes_lld_e, &j, bitlen_lld, bitlen_lld_e, bitlen_lld_idx);\n  }\n  else\n  {\n    bitlen_lld_e[(numcodes_lld_e++) + bitlen_lld_e_idx] = bitlen_lld[i + bitlen_lld_idx];\n  }\n  *bitlen_lld_e_idx_ref = bitlen_lld_e_idx;\n  *i_ref = i;\n  *numcodes_lld_e_ref = numcodes_lld_e;\n}\n\n",
            "calle": [
                "helper_helper_helper_deflateDynamic_1_1_1"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "bitlen_lld_e_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const bitlen_lld_e_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_lld_e_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const numcodes_lld_e_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_lld",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const bitlen_lld"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_lld_e",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const bitlen_lld_e"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_lld_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int bitlen_lld_idx"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_lld",
                        "type": "size_t",
                        "definition": [
                            "size_t numcodes_lld"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_lld_e_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int bitlen_lld_e_idx = *bitlen_lld_e_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_lld_e",
                        "type": "size_t",
                        "definition": [
                            "size_t numcodes_lld_e = *numcodes_lld_e_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "unsigned",
                        "definition": [
                            "unsigned j = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_lodepng_compute_color_stats_2_1",
            "header": "",
            "params": [
                "unsigned * const colored_done_ref",
                "unsigned * const alpha_done_ref",
                "LodePNGColorStats * const stats",
                "const unsigned char * const in",
                "const LodePNGColorMode * const mode_in",
                "unsigned numcolors_done",
                "unsigned bits_done",
                "size_t i",
                "unsigned short r",
                "unsigned short g",
                "unsigned short b",
                "unsigned short a"
            ],
            "definition": "void helper_helper_lodepng_compute_color_stats_2_1(unsigned * const colored_done_ref, unsigned * const alpha_done_ref, LodePNGColorStats * const stats, const unsigned char * const in, const LodePNGColorMode * const mode_in, unsigned numcolors_done, unsigned bits_done, size_t i, unsigned short r, unsigned short g, unsigned short b, unsigned short a)\n{\n  unsigned colored_done = *colored_done_ref;\n  unsigned alpha_done = *alpha_done_ref;\n  getPixelColorRGBA16(&r, &g, &b, &a, in, i, mode_in);\n  if ((!colored_done) && ((r != g) || (r != b)))\n  {\n    stats->colored = 1;\n    colored_done = 1;\n  }\n  if (!alpha_done)\n  {\n    unsigned matchkey = ((r == stats->key_r) && (g == stats->key_g)) && (b == stats->key_b);\n    if ((a != 65535) && ((a != 0) || (stats->key && (!matchkey))))\n    {\n      stats->alpha = 1;\n      stats->key = 0;\n      alpha_done = 1;\n    }\n    else\n      if (((a == 0) && (!stats->alpha)) && (!stats->key))\n    {\n      stats->key = 1;\n      stats->key_r = r;\n      stats->key_g = g;\n      stats->key_b = b;\n    }\n    else\n      if (((a == 65535) && stats->key) && matchkey)\n    {\n      stats->alpha = 1;\n      stats->key = 0;\n      alpha_done = 1;\n    }\n  }\n  if (((alpha_done && numcolors_done) && colored_done) && bits_done)\n  {\n    break;\n  }\n  *colored_done_ref = colored_done;\n  *alpha_done_ref = alpha_done;\n}\n\n",
            "calle": [
                "getPixelColorRGBA16"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "colored_done_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const colored_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "alpha_done_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const alpha_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "stats",
                        "type": "LodePNGColorStats * const",
                        "definition": [
                            "LodePNGColorStats * const stats"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode_in",
                        "type": "const LodePNGColorMode * const",
                        "definition": [
                            "const LodePNGColorMode * const mode_in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcolors_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned numcolors_done"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bits_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bits_done"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short g"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "unsigned short",
                        "definition": [
                            "unsigned short a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "colored_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned colored_done = *colored_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "alpha_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned alpha_done = *alpha_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "matchkey",
                        "type": "unsigned",
                        "definition": [
                            "unsigned matchkey = ((r == stats->key_r) && (g == stats->key_g)) && (b == stats->key_b)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_lodepng_compute_color_stats_3_1",
            "header": "",
            "params": [
                "unsigned * const error_ref",
                "unsigned * const colored_done_ref",
                "unsigned * const alpha_done_ref",
                "unsigned * const numcolors_done_ref",
                "unsigned * const bits_done_ref",
                "LodePNGColorStats * const stats",
                "const unsigned char * const in",
                "const LodePNGColorMode * const mode_in",
                "ColorTree tree",
                "unsigned bpp",
                "unsigned maxnumcolors",
                "size_t i",
                "unsigned char r",
                "unsigned char g",
                "unsigned char b",
                "unsigned char a"
            ],
            "definition": "void helper_helper_lodepng_compute_color_stats_3_1(unsigned * const error_ref, unsigned * const colored_done_ref, unsigned * const alpha_done_ref, unsigned * const numcolors_done_ref, unsigned * const bits_done_ref, LodePNGColorStats * const stats, const unsigned char * const in, const LodePNGColorMode * const mode_in, ColorTree tree, unsigned bpp, unsigned maxnumcolors, size_t i, unsigned char r, unsigned char g, unsigned char b, unsigned char a)\n{\n  unsigned error = *error_ref;\n  unsigned colored_done = *colored_done_ref;\n  unsigned alpha_done = *alpha_done_ref;\n  unsigned numcolors_done = *numcolors_done_ref;\n  unsigned bits_done = *bits_done_ref;\n  getPixelColorRGBA8(&r, &g, &b, &a, in, i, mode_in);\n  if ((!bits_done) && (stats->bits < 8))\n  {\n    unsigned bits = getValueRequiredBits(r);\n    if (bits > stats->bits)\n    {\n      stats->bits = bits;\n    }\n  }\n  bits_done = stats->bits >= bpp;\n  if ((!colored_done) && ((r != g) || (r != b)))\n  {\n    stats->colored = 1;\n    colored_done = 1;\n    if (stats->bits < 8)\n    {\n      stats->bits = 8;\n    }\n  }\n  if (!alpha_done)\n  {\n    helper_helper_helper_lodepng_compute_color_stats_3_1_2(&alpha_done, stats, r, g, b, a);\n  }\n  if (!numcolors_done)\n  {\n    helper_helper_helper_lodepng_compute_color_stats_3_1_1(&error, &numcolors_done, stats, tree, maxnumcolors, r, g, b, a);\n  }\n  if (((alpha_done && numcolors_done) && colored_done) && bits_done)\n  {\n    break;\n  }\n  *error_ref = error;\n  *colored_done_ref = colored_done;\n  *alpha_done_ref = alpha_done;\n  *numcolors_done_ref = numcolors_done;\n  *bits_done_ref = bits_done;\n}\n\n",
            "calle": [
                "getPixelColorRGBA8",
                "getValueRequiredBits",
                "helper_helper_helper_lodepng_compute_color_stats_3_1_1",
                "helper_helper_helper_lodepng_compute_color_stats_3_1_2"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "colored_done_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const colored_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "alpha_done_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const alpha_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcolors_done_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const numcolors_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bits_done_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const bits_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "stats",
                        "type": "LodePNGColorStats * const",
                        "definition": [
                            "LodePNGColorStats * const stats"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "mode_in",
                        "type": "const LodePNGColorMode * const",
                        "definition": [
                            "const LodePNGColorMode * const mode_in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree",
                        "type": "ColorTree",
                        "definition": [
                            "ColorTree tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bpp"
                        ]
                    },
                    {
                        "path": null,
                        "name": "maxnumcolors",
                        "type": "unsigned",
                        "definition": [
                            "unsigned maxnumcolors"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char g"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "colored_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned colored_done = *colored_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "alpha_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned alpha_done = *alpha_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcolors_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned numcolors_done = *numcolors_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bits_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bits_done = *bits_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bits",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bits = getValueRequiredBits(r)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_unfilterScanline_1_1",
            "header": "",
            "params": [
                "size_t * const i_ref",
                "unsigned char * const recon",
                "const unsigned char * const scanline",
                "const unsigned char * const precon",
                "size_t bytewidth",
                "size_t length"
            ],
            "definition": "void helper_helper_unfilterScanline_1_1(size_t * const i_ref, unsigned char * const recon, const unsigned char * const scanline, const unsigned char * const precon, size_t bytewidth, size_t length)\n{\n  size_t i = *i_ref;\n  size_t j = 0;\n  for (i = 0; i != bytewidth; i += 1)\n    recon[i] = scanline[i] + (precon[i] >> 1u);\n\n  if (bytewidth >= 4)\n  {\n    helper_helper_helper_unfilterScanline_1_1_2(&i, &j, recon, scanline, precon, length);\n  }\n  else\n    if (bytewidth >= 3)\n  {\n    helper_helper_helper_unfilterScanline_1_1_1(&i, &j, recon, scanline, precon, length);\n  }\n  else\n    if (bytewidth >= 2)\n  {\n    for (; (i + 1) < length; i += 2, j += 2)\n    {\n      unsigned char s0 = scanline[i + 0];\n      unsigned char s1 = scanline[i + 1];\n      unsigned char r0 = recon[j + 0];\n      unsigned char r1 = recon[j + 1];\n      unsigned char p0 = precon[i + 0];\n      unsigned char p1 = precon[i + 1];\n      recon[i + 0] = s0 + ((r0 + p0) >> 1u);\n      recon[i + 1] = s1 + ((r1 + p1) >> 1u);\n    }\n\n  }\n  for (; i != length; i += 1, j += 1)\n    recon[i] = scanline[i] + ((recon[j] + precon[i]) >> 1u);\n\n  *i_ref = i;\n}\n\n",
            "calle": [
                "helper_helper_helper_unfilterScanline_1_1_1",
                "helper_helper_helper_unfilterScanline_1_1_2"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "recon",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const recon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "scanline",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const scanline"
                        ]
                    },
                    {
                        "path": null,
                        "name": "precon",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const precon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bytewidth",
                        "type": "size_t",
                        "definition": [
                            "size_t bytewidth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "size_t",
                        "definition": [
                            "size_t length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "size_t",
                        "definition": [
                            "size_t j = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char s0 = scanline[i + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char s1 = scanline[i + 1]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r0 = recon[j + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r1 = recon[j + 1]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char p0 = precon[i + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char p1 = precon[i + 1]"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_unfilterScanline_2_1",
            "header": "",
            "params": [
                "size_t * const i_ref",
                "unsigned char * const recon",
                "const unsigned char * const scanline",
                "const unsigned char * const precon",
                "size_t bytewidth",
                "size_t length"
            ],
            "definition": "void helper_helper_unfilterScanline_2_1(size_t * const i_ref, unsigned char * const recon, const unsigned char * const scanline, const unsigned char * const precon, size_t bytewidth, size_t length)\n{\n  size_t i = *i_ref;\n  size_t j = 0;\n  for (i = 0; i != bytewidth; i += 1)\n  {\n    recon[i] = scanline[i] + precon[i];\n  }\n\n  if (bytewidth >= 4)\n  {\n    helper_helper_helper_unfilterScanline_2_1_3(&i, &j, recon, scanline, precon, length);\n  }\n  else\n    if (bytewidth >= 3)\n  {\n    helper_helper_helper_unfilterScanline_2_1_2(&i, &j, recon, scanline, precon, length);\n  }\n  else\n    if (bytewidth >= 2)\n  {\n    helper_helper_helper_unfilterScanline_2_1_1(&i, &j, recon, scanline, precon, length);\n  }\n  for (; i != length; i += 1, j += 1)\n  {\n    recon[i] = scanline[i] + paethPredictor(recon[i - bytewidth], precon[i], precon[j]);\n  }\n\n  *i_ref = i;\n}\n\n",
            "calle": [
                "helper_helper_helper_unfilterScanline_2_1_1",
                "helper_helper_helper_unfilterScanline_2_1_2",
                "helper_helper_helper_unfilterScanline_2_1_3",
                "paethPredictor"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "recon",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const recon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "scanline",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const scanline"
                        ]
                    },
                    {
                        "path": null,
                        "name": "precon",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const precon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bytewidth",
                        "type": "size_t",
                        "definition": [
                            "size_t bytewidth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "size_t",
                        "definition": [
                            "size_t length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "size_t",
                        "definition": [
                            "size_t j = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_decodeGeneric_2_1",
            "header": "",
            "params": [
                "size_t * const idatsize_ref",
                "unsigned * const critical_pos_ref",
                "LodePNGState * const state",
                "size_t insize",
                "unsigned char * const idat",
                "unsigned int idat_idx",
                "unsigned chunkLength",
                "const unsigned char * const data"
            ],
            "definition": "void helper_helper_decodeGeneric_2_1(size_t * const idatsize_ref, unsigned * const critical_pos_ref, LodePNGState * const state, size_t insize, unsigned char * const idat, unsigned int idat_idx, unsigned chunkLength, const unsigned char * const data)\n{\n  size_t idatsize = *idatsize_ref;\n  unsigned critical_pos = *critical_pos_ref;\n  size_t newsize;\n  if (lodepng_addofl(idatsize, chunkLength, &newsize))\n  {\n    state->error = 95;\n    break;\n  }\n  ;\n  if (newsize > insize)\n  {\n    state->error = 95;\n    break;\n  }\n  ;\n  lodepng_memcpy((&idat[idat_idx]) + idatsize, data, chunkLength);\n  idatsize += chunkLength;\n  critical_pos = 3;\n  *idatsize_ref = idatsize;\n  *critical_pos_ref = critical_pos;\n}\n\n",
            "calle": [
                "lodepng_addofl",
                "lodepng_memcpy"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "idatsize_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const idatsize_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "critical_pos_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const critical_pos_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "state",
                        "type": "LodePNGState * const",
                        "definition": [
                            "LodePNGState * const state"
                        ]
                    },
                    {
                        "path": null,
                        "name": "insize",
                        "type": "size_t",
                        "definition": [
                            "size_t insize"
                        ]
                    },
                    {
                        "path": null,
                        "name": "idat",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const idat"
                        ]
                    },
                    {
                        "path": null,
                        "name": "idat_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int idat_idx"
                        ]
                    },
                    {
                        "path": null,
                        "name": "chunkLength",
                        "type": "unsigned",
                        "definition": [
                            "unsigned chunkLength"
                        ]
                    },
                    {
                        "path": null,
                        "name": "data",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const data"
                        ]
                    },
                    {
                        "path": null,
                        "name": "idatsize",
                        "type": "size_t",
                        "definition": [
                            "size_t idatsize = *idatsize_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "critical_pos",
                        "type": "unsigned",
                        "definition": [
                            "unsigned critical_pos = *critical_pos_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "newsize",
                        "type": "size_t",
                        "definition": [
                            "size_t newsize"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_filter_1_1",
            "header": "",
            "params": [
                "size_t * const linebytes_ref",
                "unsigned int * const prevline_idx_ref",
                "unsigned * const x_ref",
                "unsigned * const y_ref",
                "size_t * const smallest_ref",
                "unsigned char * const type_ref",
                "unsigned char * const bestType_ref",
                "unsigned char * const out",
                "const unsigned char * const in",
                "unsigned h",
                "size_t bytewidth",
                "const unsigned char * const prevline",
                "unsigned char *attempt[5]"
            ],
            "definition": "void helper_helper_filter_1_1(size_t * const linebytes_ref, unsigned int * const prevline_idx_ref, unsigned * const x_ref, unsigned * const y_ref, size_t * const smallest_ref, unsigned char * const type_ref, unsigned char * const bestType_ref, unsigned char * const out, const unsigned char * const in, unsigned h, size_t bytewidth, const unsigned char * const prevline, unsigned char *attempt[5])\n{\n  size_t linebytes = *linebytes_ref;\n  unsigned int prevline_idx = *prevline_idx_ref;\n  unsigned x = *x_ref;\n  unsigned y = *y_ref;\n  size_t smallest = *smallest_ref;\n  unsigned char type = *type_ref;\n  unsigned char bestType = *bestType_ref;\n  for (y = 0; y != h; y += 1)\n  {\n    for (type = 0; type != 5; type += 1)\n    {\n      size_t sum = 0;\n      filterScanline(attempt[type], &in[y * linebytes], prevline, linebytes, bytewidth, type);\n      if (type == 0)\n      {\n        for (x = 0; x != linebytes; x += 1)\n          sum += (unsigned char) attempt[type][x];\n\n      }\n      else\n      {\n        for (x = 0; x != linebytes; x += 1)\n        {\n          unsigned char s = attempt[type][x];\n          sum += (s < 128) ? (s) : (255U - s);\n        }\n\n      }\n      if ((type == 0) || (sum < smallest))\n      {\n        bestType = type;\n        smallest = sum;\n      }\n    }\n\n    prevline_idx = &in[y * linebytes];\n    out[y * (linebytes + 1)] = bestType;\n    for (x = 0; x != linebytes; x += 1)\n      out[((y * (linebytes + 1)) + 1) + x] = attempt[bestType][x];\n\n  }\n\n  *linebytes_ref = linebytes;\n  *prevline_idx_ref = prevline_idx;\n  *x_ref = x;\n  *y_ref = y;\n  *smallest_ref = smallest;\n  *type_ref = type;\n  *bestType_ref = bestType;\n}\n\n",
            "calle": [
                "filterScanline"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "linebytes_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const linebytes_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const prevline_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "x_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const x_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const y_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "smallest_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const smallest_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "type_ref",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const type_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bestType_ref",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const bestType_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bytewidth",
                        "type": "size_t",
                        "definition": [
                            "size_t bytewidth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const prevline"
                        ]
                    },
                    {
                        "path": null,
                        "name": "attempt",
                        "type": "unsigned char *[5]",
                        "definition": [
                            "unsigned char *attempt[5]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "linebytes",
                        "type": "size_t",
                        "definition": [
                            "size_t linebytes = *linebytes_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int prevline_idx = *prevline_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "x",
                        "type": "unsigned",
                        "definition": [
                            "unsigned x = *x_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y",
                        "type": "unsigned",
                        "definition": [
                            "unsigned y = *y_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "smallest",
                        "type": "size_t",
                        "definition": [
                            "size_t smallest = *smallest_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "type",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char type = *type_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bestType",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char bestType = *bestType_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "sum",
                        "type": "size_t",
                        "definition": [
                            "size_t sum = 0"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char s = attempt[type][x]"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_filter_2_1",
            "header": "",
            "params": [
                "size_t * const linebytes_ref",
                "unsigned int * const prevline_idx_ref",
                "unsigned * const x_ref",
                "unsigned * const y_ref",
                "size_t * const bestSum_ref",
                "unsigned * const type_ref",
                "unsigned * const bestType_ref",
                "unsigned char * const out",
                "const unsigned char * const in",
                "unsigned h",
                "size_t bytewidth",
                "const unsigned char * const prevline",
                "unsigned char *attempt[5]",
                "unsigned count[256]"
            ],
            "definition": "void helper_helper_filter_2_1(size_t * const linebytes_ref, unsigned int * const prevline_idx_ref, unsigned * const x_ref, unsigned * const y_ref, size_t * const bestSum_ref, unsigned * const type_ref, unsigned * const bestType_ref, unsigned char * const out, const unsigned char * const in, unsigned h, size_t bytewidth, const unsigned char * const prevline, unsigned char *attempt[5], unsigned count[256])\n{\n  size_t linebytes = *linebytes_ref;\n  unsigned int prevline_idx = *prevline_idx_ref;\n  unsigned x = *x_ref;\n  unsigned y = *y_ref;\n  size_t bestSum = *bestSum_ref;\n  unsigned type = *type_ref;\n  unsigned bestType = *bestType_ref;\n  for (y = 0; y != h; y += 1)\n  {\n    for (type = 0; type != 5; type += 1)\n    {\n      size_t sum = 0;\n      filterScanline(attempt[type], &in[y * linebytes], prevline, linebytes, bytewidth, type);\n      lodepng_memset(count, 0, 256 * (sizeof(*count)));\n      for (x = 0; x != linebytes; x += 1)\n        ++count[attempt[type][x]];\n\n      count[type] += 1;\n      for (x = 0; x != 256; x += 1)\n      {\n        sum += ilog2i(count[x]);\n      }\n\n      if ((type == 0) || (sum > bestSum))\n      {\n        bestType = type;\n        bestSum = sum;\n      }\n    }\n\n    prevline_idx = &in[y * linebytes];\n    out[y * (linebytes + 1)] = bestType;\n    for (x = 0; x != linebytes; x += 1)\n      out[((y * (linebytes + 1)) + 1) + x] = attempt[bestType][x];\n\n  }\n\n  *linebytes_ref = linebytes;\n  *prevline_idx_ref = prevline_idx;\n  *x_ref = x;\n  *y_ref = y;\n  *bestSum_ref = bestSum;\n  *type_ref = type;\n  *bestType_ref = bestType;\n}\n\n",
            "calle": [
                "filterScanline",
                "ilog2i",
                "lodepng_memset"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "linebytes_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const linebytes_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const prevline_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "x_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const x_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const y_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bestSum_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const bestSum_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "type_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const type_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bestType_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const bestType_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bytewidth",
                        "type": "size_t",
                        "definition": [
                            "size_t bytewidth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const prevline"
                        ]
                    },
                    {
                        "path": null,
                        "name": "attempt",
                        "type": "unsigned char *[5]",
                        "definition": [
                            "unsigned char *attempt[5]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "count",
                        "type": "unsigned [256]",
                        "definition": [
                            "unsigned count[256]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "linebytes",
                        "type": "size_t",
                        "definition": [
                            "size_t linebytes = *linebytes_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int prevline_idx = *prevline_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "x",
                        "type": "unsigned",
                        "definition": [
                            "unsigned x = *x_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y",
                        "type": "unsigned",
                        "definition": [
                            "unsigned y = *y_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bestSum",
                        "type": "size_t",
                        "definition": [
                            "size_t bestSum = *bestSum_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "type",
                        "type": "unsigned",
                        "definition": [
                            "unsigned type = *type_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bestType",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bestType = *bestType_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "sum",
                        "type": "size_t",
                        "definition": [
                            "size_t sum = 0"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_filter_3_1",
            "header": "",
            "params": [
                "size_t * const linebytes_ref",
                "unsigned int * const prevline_idx_ref",
                "unsigned * const x_ref",
                "unsigned * const y_ref",
                "size_t * const smallest_ref",
                "unsigned * const type_ref",
                "unsigned * const bestType_ref",
                "unsigned int * const dummy_idx_ref",
                "unsigned char * const out",
                "const unsigned char * const in",
                "unsigned h",
                "size_t bytewidth",
                "const unsigned char * const prevline",
                "size_t size[5]",
                "unsigned char *attempt[5]",
                "unsigned char * const dummy",
                "LodePNGCompressSettings zlibsettings"
            ],
            "definition": "void helper_helper_filter_3_1(size_t * const linebytes_ref, unsigned int * const prevline_idx_ref, unsigned * const x_ref, unsigned * const y_ref, size_t * const smallest_ref, unsigned * const type_ref, unsigned * const bestType_ref, unsigned int * const dummy_idx_ref, unsigned char * const out, const unsigned char * const in, unsigned h, size_t bytewidth, const unsigned char * const prevline, size_t size[5], unsigned char *attempt[5], unsigned char * const dummy, LodePNGCompressSettings zlibsettings)\n{\n  size_t linebytes = *linebytes_ref;\n  unsigned int prevline_idx = *prevline_idx_ref;\n  unsigned x = *x_ref;\n  unsigned y = *y_ref;\n  size_t smallest = *smallest_ref;\n  unsigned type = *type_ref;\n  unsigned bestType = *bestType_ref;\n  unsigned int dummy_idx = *dummy_idx_ref;\n  for (y = 0; y != h; y += 1)\n  {\n    for (type = 0; type != 5; type += 1)\n    {\n      unsigned testsize = (unsigned) linebytes;\n      filterScanline(attempt[type], &in[y * linebytes], prevline, linebytes, bytewidth, type);\n      size[type] = 0;\n      dummy_idx = 0;\n      zlib_compress(&(&dummy[dummy_idx]), &size[type], attempt[type], testsize, &zlibsettings);\n      lodepng_free(dummy);\n      if ((type == 0) || (size[type] < smallest))\n      {\n        bestType = type;\n        smallest = size[type];\n      }\n    }\n\n    prevline_idx = &in[y * linebytes];\n    out[y * (linebytes + 1)] = bestType;\n    for (x = 0; x != linebytes; x += 1)\n      out[((y * (linebytes + 1)) + 1) + x] = attempt[bestType][x];\n\n  }\n\n  *linebytes_ref = linebytes;\n  *prevline_idx_ref = prevline_idx;\n  *x_ref = x;\n  *y_ref = y;\n  *smallest_ref = smallest;\n  *type_ref = type;\n  *bestType_ref = bestType;\n  *dummy_idx_ref = dummy_idx;\n}\n\n",
            "calle": [
                "filterScanline",
                "lodepng_free",
                "zlib_compress"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "linebytes_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const linebytes_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const prevline_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "x_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const x_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const y_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "smallest_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const smallest_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "type_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const type_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bestType_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const bestType_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "dummy_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const dummy_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bytewidth",
                        "type": "size_t",
                        "definition": [
                            "size_t bytewidth"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const prevline"
                        ]
                    },
                    {
                        "path": null,
                        "name": "size",
                        "type": "size_t [5]",
                        "definition": [
                            "size_t size[5]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "attempt",
                        "type": "unsigned char *[5]",
                        "definition": [
                            "unsigned char *attempt[5]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "dummy",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const dummy"
                        ]
                    },
                    {
                        "path": null,
                        "name": "zlibsettings",
                        "type": "LodePNGCompressSettings",
                        "definition": [
                            "LodePNGCompressSettings zlibsettings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "linebytes",
                        "type": "size_t",
                        "definition": [
                            "size_t linebytes = *linebytes_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "prevline_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int prevline_idx = *prevline_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "x",
                        "type": "unsigned",
                        "definition": [
                            "unsigned x = *x_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "y",
                        "type": "unsigned",
                        "definition": [
                            "unsigned y = *y_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "smallest",
                        "type": "size_t",
                        "definition": [
                            "size_t smallest = *smallest_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "type",
                        "type": "unsigned",
                        "definition": [
                            "unsigned type = *type_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bestType",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bestType = *bestType_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "dummy_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int dummy_idx = *dummy_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "testsize",
                        "type": "unsigned",
                        "definition": [
                            "unsigned testsize = (unsigned) linebytes"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_preProcessScanlines_2_1",
            "header": "",
            "params": [
                "unsigned * const error_ref",
                "unsigned char ** const out",
                "const unsigned char * const in",
                "unsigned w",
                "unsigned h",
                "const LodePNGInfo * const info_png",
                "const LodePNGEncoderSettings * const settings",
                "unsigned bpp",
                "unsigned passw[7]",
                "unsigned passh[7]",
                "size_t filter_passstart[8]",
                "size_t padded_passstart[8]",
                "size_t passstart[8]",
                "unsigned char * const adam7",
                "unsigned int adam7_idx"
            ],
            "definition": "void helper_helper_preProcessScanlines_2_1(unsigned * const error_ref, unsigned char ** const out, const unsigned char * const in, unsigned w, unsigned h, const LodePNGInfo * const info_png, const LodePNGEncoderSettings * const settings, unsigned bpp, unsigned passw[7], unsigned passh[7], size_t filter_passstart[8], size_t padded_passstart[8], size_t passstart[8], unsigned char * const adam7, unsigned int adam7_idx)\n{\n  unsigned error = *error_ref;\n  unsigned i;\n  Adam7_interlace(adam7, in, w, h, bpp);\n  for (i = 0; i != 7; i += 1)\n  {\n    if (bpp < 8)\n    {\n      unsigned char *padded = (unsigned char *) lodepng_malloc(padded_passstart[i + 1] - padded_passstart[i]);\n      if (!padded)\n      {\n        error = 83;\n        break;\n      }\n      ;\n      addPaddingBits(padded, &adam7[passstart[i] + adam7_idx], (((passw[i] * bpp) + 7u) / 8u) * 8u, passw[i] * bpp, passh[i]);\n      error = filter(&(*out)[filter_passstart[i]], padded, passw[i], passh[i], &info_png->color, settings);\n      lodepng_free(padded);\n    }\n    else\n    {\n      error = filter(&(*out)[filter_passstart[i]], &adam7[padded_passstart[i] + adam7_idx], passw[i], passh[i], &info_png->color, settings);\n    }\n    if (error)\n    {\n      break;\n    }\n  }\n\n  *error_ref = error;\n}\n\n",
            "calle": [
                "Adam7_interlace",
                "addPaddingBits",
                "filter",
                "lodepng_free",
                "lodepng_malloc"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "unsigned char ** const",
                        "definition": [
                            "unsigned char ** const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "w",
                        "type": "unsigned",
                        "definition": [
                            "unsigned w"
                        ]
                    },
                    {
                        "path": null,
                        "name": "h",
                        "type": "unsigned",
                        "definition": [
                            "unsigned h"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info_png",
                        "type": "const LodePNGInfo * const",
                        "definition": [
                            "const LodePNGInfo * const info_png"
                        ]
                    },
                    {
                        "path": null,
                        "name": "settings",
                        "type": "const LodePNGEncoderSettings * const",
                        "definition": [
                            "const LodePNGEncoderSettings * const settings"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bpp",
                        "type": "unsigned",
                        "definition": [
                            "unsigned bpp"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passw",
                        "type": "unsigned [7]",
                        "definition": [
                            "unsigned passw[7]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passh",
                        "type": "unsigned [7]",
                        "definition": [
                            "unsigned passh[7]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "filter_passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t filter_passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "padded_passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t padded_passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "passstart",
                        "type": "size_t [8]",
                        "definition": [
                            "size_t passstart[8]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "adam7",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const adam7"
                        ]
                    },
                    {
                        "path": null,
                        "name": "adam7_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int adam7_idx"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i"
                        ]
                    },
                    {
                        "path": null,
                        "name": "padded",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *padded = (unsigned char *) lodepng_malloc(padded_passstart[i + 1] - padded_passstart[i])"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_lodepng_encode_2_1",
            "header": "",
            "params": [
                "unsigned * const allow_convert_ref",
                "LodePNGInfo info",
                "const LodePNGInfo * const info_png",
                "LodePNGColorMode auto_color"
            ],
            "definition": "void helper_helper_lodepng_encode_2_1(unsigned * const allow_convert_ref, LodePNGInfo info, const LodePNGInfo * const info_png, LodePNGColorMode auto_color)\n{\n  unsigned allow_convert = *allow_convert_ref;\n  unsigned sbit_max = (((((info_png->sbit_r > info_png->sbit_g) ? (info_png->sbit_r) : (info_png->sbit_g)) > info_png->sbit_b) ? ((info_png->sbit_r > info_png->sbit_g) ? (info_png->sbit_r) : (info_png->sbit_g)) : (info_png->sbit_b)) > info_png->sbit_a) ? ((((info_png->sbit_r > info_png->sbit_g) ? (info_png->sbit_r) : (info_png->sbit_g)) > info_png->sbit_b) ? ((info_png->sbit_r > info_png->sbit_g) ? (info_png->sbit_r) : (info_png->sbit_g)) : (info_png->sbit_b)) : (info_png->sbit_a);\n  unsigned equal = (((!info_png->sbit_g) || (info_png->sbit_g == info_png->sbit_r)) && ((!info_png->sbit_b) || (info_png->sbit_b == info_png->sbit_r))) && ((!info_png->sbit_a) || (info_png->sbit_a == info_png->sbit_r));\n  allow_convert = 0;\n  if ((info.color.colortype == LCT_PALETTE) && (auto_color.colortype == LCT_PALETTE))\n  {\n    allow_convert = 1;\n  }\n  if (((info.color.colortype == LCT_RGB) && (auto_color.colortype == LCT_PALETTE)) && (sbit_max <= 8))\n  {\n    allow_convert = 1;\n  }\n  if ((((info.color.colortype == LCT_RGBA) && (auto_color.colortype == LCT_PALETTE)) && (info_png->sbit_a == 8)) && (sbit_max <= 8))\n  {\n    allow_convert = 1;\n  }\n  if ((((((info.color.colortype == LCT_RGB) || (info.color.colortype == LCT_RGBA)) && (info.color.bitdepth == 16)) && (auto_color.colortype == info.color.colortype)) && (auto_color.bitdepth == 8)) && (sbit_max <= 8))\n  {\n    allow_convert = 1;\n  }\n  if ((((info.color.colortype != LCT_PALETTE) && (auto_color.colortype != LCT_PALETTE)) && equal) && (info_png->sbit_r == auto_color.bitdepth))\n  {\n    allow_convert = 1;\n  }\n  *allow_convert_ref = allow_convert;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "allow_convert_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const allow_convert_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo",
                        "definition": [
                            "LodePNGInfo info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info_png",
                        "type": "const LodePNGInfo * const",
                        "definition": [
                            "const LodePNGInfo * const info_png"
                        ]
                    },
                    {
                        "path": null,
                        "name": "auto_color",
                        "type": "LodePNGColorMode",
                        "definition": [
                            "LodePNGColorMode auto_color"
                        ]
                    },
                    {
                        "path": null,
                        "name": "allow_convert",
                        "type": "unsigned",
                        "definition": [
                            "unsigned allow_convert = *allow_convert_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "sbit_max",
                        "type": "unsigned",
                        "definition": [
                            "unsigned sbit_max = (((((info_png->sbit_r > info_png->sbit_g) ? (info_png->sbit_r) : (info_png->sbit_g)) > info_png->sbit_b) ? ((info_png->sbit_r > info_png->sbit_g) ? (info_png->sbit_r) : (info_png->sbit_g)) : (info_png->sbit_b)) > info_png->sbit_a) ? ((((info_png->sbit_r > info_png->sbit_g) ? (info_png->sbit_r) : (info_png->sbit_g)) > info_png->sbit_b) ? ((info_png->sbit_r > info_png->sbit_g) ? (info_png->sbit_r) : (info_png->sbit_g)) : (info_png->sbit_b)) : (info_png->sbit_a)"
                        ]
                    },
                    {
                        "path": null,
                        "name": "equal",
                        "type": "unsigned",
                        "definition": [
                            "unsigned equal = (((!info_png->sbit_g) || (info_png->sbit_g == info_png->sbit_r)) && ((!info_png->sbit_b) || (info_png->sbit_b == info_png->sbit_r))) && ((!info_png->sbit_a) || (info_png->sbit_a == info_png->sbit_r))"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_lodepng_encode_3_1",
            "header": "",
            "params": [
                "LodePNGState * const state",
                "ucvector outv",
                "LodePNGInfo info",
                "size_t i"
            ],
            "definition": "void helper_helper_lodepng_encode_3_1(LodePNGState * const state, ucvector outv, LodePNGInfo info, size_t i)\n{\n  if (lodepng_strlen(info.text_keys[i]) > 79)\n  {\n    state->error = 66;\n    goto cleanup;\n  }\n  if (lodepng_strlen(info.text_keys[i]) < 1)\n  {\n    state->error = 67;\n    goto cleanup;\n  }\n  if (state->encoder.text_compression)\n  {\n    state->error = addChunk_zTXt(&outv, info.text_keys[i], info.text_strings[i], &state->encoder.zlibsettings);\n    if (state->error)\n    {\n      goto cleanup;\n    }\n  }\n  else\n  {\n    state->error = addChunk_tEXt(&outv, info.text_keys[i], info.text_strings[i]);\n    if (state->error)\n    {\n      goto cleanup;\n    }\n  }\n}\n\n",
            "calle": [
                "addChunk_tEXt",
                "addChunk_zTXt",
                "lodepng_strlen"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "state",
                        "type": "LodePNGState * const",
                        "definition": [
                            "LodePNGState * const state"
                        ]
                    },
                    {
                        "path": null,
                        "name": "outv",
                        "type": "ucvector",
                        "definition": [
                            "ucvector outv"
                        ]
                    },
                    {
                        "path": null,
                        "name": "info",
                        "type": "LodePNGInfo",
                        "definition": [
                            "LodePNGInfo info"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_helper_getTreeInflateDynamic_1_1_1",
            "header": "",
            "params": [
                "unsigned * const error_ref",
                "unsigned * const n_ref",
                "unsigned * const HLIT_ref",
                "unsigned * const i_ref",
                "unsigned int * const bitlen_ll_idx_ref",
                "unsigned int * const bitlen_d_idx_ref",
                "LodePNGBitReader * const reader",
                "unsigned HDIST",
                "unsigned * const bitlen_ll",
                "unsigned * const bitlen_d"
            ],
            "definition": "void helper_helper_helper_getTreeInflateDynamic_1_1_1(unsigned * const error_ref, unsigned * const n_ref, unsigned * const HLIT_ref, unsigned * const i_ref, unsigned int * const bitlen_ll_idx_ref, unsigned int * const bitlen_d_idx_ref, LodePNGBitReader * const reader, unsigned HDIST, unsigned * const bitlen_ll, unsigned * const bitlen_d)\n{\n  unsigned error = *error_ref;\n  unsigned n = *n_ref;\n  unsigned HLIT = *HLIT_ref;\n  unsigned i = *i_ref;\n  unsigned int bitlen_ll_idx = *bitlen_ll_idx_ref;\n  unsigned int bitlen_d_idx = *bitlen_d_idx_ref;\n  unsigned replength = 3;\n  unsigned value;\n  if (i == 0)\n  {\n    error = 54;\n    break;\n  }\n  ;\n  replength += readBits(reader, 2);\n  if (i < (HLIT + 1))\n  {\n    value = bitlen_ll[(i - 1) + bitlen_ll_idx];\n  }\n  else\n    value = bitlen_d[((i - HLIT) - 1) + bitlen_d_idx];\n  for (n = 0; n < replength; n += 1)\n  {\n    if (i >= (HLIT + HDIST))\n    {\n      error = 13;\n      break;\n    }\n    ;\n    if (i < HLIT)\n    {\n      bitlen_ll[i + bitlen_ll_idx] = value;\n    }\n    else\n      bitlen_d[(i - HLIT) + bitlen_d_idx] = value;\n    i += 1;\n  }\n\n  *error_ref = error;\n  *n_ref = n;\n  *HLIT_ref = HLIT;\n  *i_ref = i;\n  *bitlen_ll_idx_ref = bitlen_ll_idx;\n  *bitlen_d_idx_ref = bitlen_d_idx;\n}\n\n",
            "calle": [
                "readBits"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "n_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const n_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HLIT_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const HLIT_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_ll_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const bitlen_ll_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_d_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const bitlen_d_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "reader",
                        "type": "LodePNGBitReader * const",
                        "definition": [
                            "LodePNGBitReader * const reader"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HDIST",
                        "type": "unsigned",
                        "definition": [
                            "unsigned HDIST"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_ll",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const bitlen_ll"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_d",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const bitlen_d"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "n",
                        "type": "unsigned",
                        "definition": [
                            "unsigned n = *n_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "HLIT",
                        "type": "unsigned",
                        "definition": [
                            "unsigned HLIT = *HLIT_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "unsigned",
                        "definition": [
                            "unsigned i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_ll_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int bitlen_ll_idx = *bitlen_ll_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_d_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int bitlen_d_idx = *bitlen_d_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "replength",
                        "type": "unsigned",
                        "definition": [
                            "unsigned replength = 3"
                        ]
                    },
                    {
                        "path": null,
                        "name": "value",
                        "type": "unsigned",
                        "definition": [
                            "unsigned value"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_helper_encodeLZ77_1_2_1",
            "header": "",
            "params": [
                "size_t * const pos_ref",
                "unsigned * const error_ref",
                "unsigned * const numzeros_ref",
                "unsigned * const offset_ref",
                "unsigned * const length_ref",
                "unsigned * const lazy_ref",
                "unsigned * const hashval_ref",
                "uivector * const out",
                "Hash * const hash",
                "const unsigned char * const in",
                "unsigned lazylength",
                "unsigned lazyoffset"
            ],
            "definition": "void helper_helper_helper_encodeLZ77_1_2_1(size_t * const pos_ref, unsigned * const error_ref, unsigned * const numzeros_ref, unsigned * const offset_ref, unsigned * const length_ref, unsigned * const lazy_ref, unsigned * const hashval_ref, uivector * const out, Hash * const hash, const unsigned char * const in, unsigned lazylength, unsigned lazyoffset)\n{\n  size_t pos = *pos_ref;\n  unsigned error = *error_ref;\n  unsigned numzeros = *numzeros_ref;\n  unsigned offset = *offset_ref;\n  unsigned length = *length_ref;\n  unsigned lazy = *lazy_ref;\n  unsigned hashval = *hashval_ref;\n  lazy = 0;\n  if (pos == 0)\n  {\n    error = 81;\n    break;\n  }\n  ;\n  if (length > (lazylength + 1))\n  {\n    if (!uivector_push_back(out, in[pos - 1]))\n    {\n      error = 83;\n      break;\n    }\n    ;\n  }\n  else\n  {\n    length = lazylength;\n    offset = lazyoffset;\n    hash->head[hashval] = -1;\n    hash->headz[numzeros] = -1;\n    pos -= 1;\n  }\n  *pos_ref = pos;\n  *error_ref = error;\n  *numzeros_ref = numzeros;\n  *offset_ref = offset;\n  *length_ref = length;\n  *lazy_ref = lazy;\n  *hashval_ref = hashval;\n}\n\n",
            "calle": [
                "uivector_push_back"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "pos_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const pos_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numzeros_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const numzeros_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "offset_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const offset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazy_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const lazy_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hashval_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const hashval_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "out",
                        "type": "uivector * const",
                        "definition": [
                            "uivector * const out"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hash",
                        "type": "Hash * const",
                        "definition": [
                            "Hash * const hash"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazylength",
                        "type": "unsigned",
                        "definition": [
                            "unsigned lazylength"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazyoffset",
                        "type": "unsigned",
                        "definition": [
                            "unsigned lazyoffset"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pos",
                        "type": "size_t",
                        "definition": [
                            "size_t pos = *pos_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numzeros",
                        "type": "unsigned",
                        "definition": [
                            "unsigned numzeros = *numzeros_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "offset",
                        "type": "unsigned",
                        "definition": [
                            "unsigned offset = *offset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length = *length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lazy",
                        "type": "unsigned",
                        "definition": [
                            "unsigned lazy = *lazy_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hashval",
                        "type": "unsigned",
                        "definition": [
                            "unsigned hashval = *hashval_ref"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_helper_encodeLZ77_1_3_1",
            "header": "",
            "params": [
                "unsigned * const offset_ref",
                "unsigned * const length_ref",
                "unsigned * const current_length_ref",
                "unsigned int * const foreptr_idx_ref",
                "unsigned int * const backptr_idx_ref",
                "Hash * const hash",
                "const unsigned char * const in",
                "unsigned nicematch",
                "const unsigned char * const lastptr",
                "const unsigned char * const foreptr",
                "const unsigned char * const backptr",
                "size_t pos",
                "unsigned numzeros",
                "unsigned int lastptr_idx",
                "unsigned current_offset",
                "unsigned hashpos"
            ],
            "definition": "void helper_helper_helper_encodeLZ77_1_3_1(unsigned * const offset_ref, unsigned * const length_ref, unsigned * const current_length_ref, unsigned int * const foreptr_idx_ref, unsigned int * const backptr_idx_ref, Hash * const hash, const unsigned char * const in, unsigned nicematch, const unsigned char * const lastptr, const unsigned char * const foreptr, const unsigned char * const backptr, size_t pos, unsigned numzeros, unsigned int lastptr_idx, unsigned current_offset, unsigned hashpos)\n{\n  unsigned offset = *offset_ref;\n  unsigned length = *length_ref;\n  unsigned current_length = *current_length_ref;\n  unsigned int foreptr_idx = *foreptr_idx_ref;\n  unsigned int backptr_idx = *backptr_idx_ref;\n  foreptr_idx = &in[pos];\n  backptr_idx = &in[pos - current_offset];\n  if (numzeros >= 3)\n  {\n    unsigned skip = hash->zeros[hashpos];\n    if (skip > numzeros)\n    {\n      skip = numzeros;\n    }\n    backptr_idx += skip;\n    foreptr_idx += skip;\n  }\n  while (((&foreptr[foreptr_idx]) != (&lastptr[lastptr_idx])) && (backptr[backptr_idx] == foreptr[foreptr_idx]))\n  {\n    backptr_idx += 1;\n    foreptr_idx += 1;\n  }\n\n  current_length = (unsigned) ((&foreptr[foreptr_idx]) - (&in[pos]));\n  if (current_length > length)\n  {\n    length = current_length;\n    offset = current_offset;\n    if (current_length >= nicematch)\n    {\n      break;\n    }\n  }\n  *offset_ref = offset;\n  *length_ref = length;\n  *current_length_ref = current_length;\n  *foreptr_idx_ref = foreptr_idx;\n  *backptr_idx_ref = backptr_idx;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "offset_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const offset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "current_length_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const current_length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "foreptr_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const foreptr_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "backptr_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const backptr_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hash",
                        "type": "Hash * const",
                        "definition": [
                            "Hash * const hash"
                        ]
                    },
                    {
                        "path": null,
                        "name": "in",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const in"
                        ]
                    },
                    {
                        "path": null,
                        "name": "nicematch",
                        "type": "unsigned",
                        "definition": [
                            "unsigned nicematch"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lastptr",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const lastptr"
                        ]
                    },
                    {
                        "path": null,
                        "name": "foreptr",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const foreptr"
                        ]
                    },
                    {
                        "path": null,
                        "name": "backptr",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const backptr"
                        ]
                    },
                    {
                        "path": null,
                        "name": "pos",
                        "type": "size_t",
                        "definition": [
                            "size_t pos"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numzeros",
                        "type": "unsigned",
                        "definition": [
                            "unsigned numzeros"
                        ]
                    },
                    {
                        "path": null,
                        "name": "lastptr_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int lastptr_idx"
                        ]
                    },
                    {
                        "path": null,
                        "name": "current_offset",
                        "type": "unsigned",
                        "definition": [
                            "unsigned current_offset"
                        ]
                    },
                    {
                        "path": null,
                        "name": "hashpos",
                        "type": "unsigned",
                        "definition": [
                            "unsigned hashpos"
                        ]
                    },
                    {
                        "path": null,
                        "name": "offset",
                        "type": "unsigned",
                        "definition": [
                            "unsigned offset = *offset_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned length = *length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "current_length",
                        "type": "unsigned",
                        "definition": [
                            "unsigned current_length = *current_length_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "foreptr_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int foreptr_idx = *foreptr_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "backptr_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int backptr_idx = *backptr_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "skip",
                        "type": "unsigned",
                        "definition": [
                            "unsigned skip = hash->zeros[hashpos]"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_helper_deflateDynamic_1_1_1",
            "header": "",
            "params": [
                "unsigned int * const bitlen_lld_e_idx_ref",
                "size_t * const i_ref",
                "size_t * const numcodes_lld_e_ref",
                "unsigned * const j_ref",
                "unsigned * const bitlen_lld",
                "unsigned * const bitlen_lld_e",
                "unsigned int bitlen_lld_idx"
            ],
            "definition": "void helper_helper_helper_deflateDynamic_1_1_1(unsigned int * const bitlen_lld_e_idx_ref, size_t * const i_ref, size_t * const numcodes_lld_e_ref, unsigned * const j_ref, unsigned * const bitlen_lld, unsigned * const bitlen_lld_e, unsigned int bitlen_lld_idx)\n{\n  unsigned int bitlen_lld_e_idx = *bitlen_lld_e_idx_ref;\n  size_t i = *i_ref;\n  size_t numcodes_lld_e = *numcodes_lld_e_ref;\n  unsigned j = *j_ref;\n  size_t k;\n  unsigned num = j / 6u;\n  unsigned rest = j % 6u;\n  bitlen_lld_e[(numcodes_lld_e++) + bitlen_lld_e_idx] = bitlen_lld[i + bitlen_lld_idx];\n  for (k = 0; k < num; ++k)\n  {\n    bitlen_lld_e[(numcodes_lld_e++) + bitlen_lld_e_idx] = 16;\n    bitlen_lld_e[(numcodes_lld_e++) + bitlen_lld_e_idx] = 6 - 3;\n  }\n\n  if (rest >= 3)\n  {\n    bitlen_lld_e[(numcodes_lld_e++) + bitlen_lld_e_idx] = 16;\n    bitlen_lld_e[(numcodes_lld_e++) + bitlen_lld_e_idx] = rest - 3;\n  }\n  else\n    j -= rest;\n  i += j;\n  *bitlen_lld_e_idx_ref = bitlen_lld_e_idx;\n  *i_ref = i;\n  *numcodes_lld_e_ref = numcodes_lld_e;\n  *j_ref = j;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "bitlen_lld_e_idx_ref",
                        "type": "unsigned int * const",
                        "definition": [
                            "unsigned int * const bitlen_lld_e_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_lld_e_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const numcodes_lld_e_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const j_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_lld",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const bitlen_lld"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_lld_e",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const bitlen_lld_e"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_lld_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int bitlen_lld_idx"
                        ]
                    },
                    {
                        "path": null,
                        "name": "bitlen_lld_e_idx",
                        "type": "unsigned int",
                        "definition": [
                            "unsigned int bitlen_lld_e_idx = *bitlen_lld_e_idx_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcodes_lld_e",
                        "type": "size_t",
                        "definition": [
                            "size_t numcodes_lld_e = *numcodes_lld_e_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "unsigned",
                        "definition": [
                            "unsigned j = *j_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "k",
                        "type": "size_t",
                        "definition": [
                            "size_t k"
                        ]
                    },
                    {
                        "path": null,
                        "name": "num",
                        "type": "unsigned",
                        "definition": [
                            "unsigned num = j / 6u"
                        ]
                    },
                    {
                        "path": null,
                        "name": "rest",
                        "type": "unsigned",
                        "definition": [
                            "unsigned rest = j % 6u"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_helper_lodepng_compute_color_stats_3_1_1",
            "header": "",
            "params": [
                "unsigned * const error_ref",
                "unsigned * const numcolors_done_ref",
                "LodePNGColorStats * const stats",
                "ColorTree tree",
                "unsigned maxnumcolors",
                "unsigned char r",
                "unsigned char g",
                "unsigned char b",
                "unsigned char a"
            ],
            "definition": "void helper_helper_helper_lodepng_compute_color_stats_3_1_1(unsigned * const error_ref, unsigned * const numcolors_done_ref, LodePNGColorStats * const stats, ColorTree tree, unsigned maxnumcolors, unsigned char r, unsigned char g, unsigned char b, unsigned char a)\n{\n  unsigned error = *error_ref;\n  unsigned numcolors_done = *numcolors_done_ref;\n  if (!color_tree_has(&tree, r, g, b, a))\n  {\n    error = color_tree_add(&tree, r, g, b, a, stats->numcolors);\n    if (error)\n    {\n      goto cleanup;\n    }\n    if (stats->numcolors < 256)\n    {\n      unsigned char *p = stats->palette;\n      unsigned n = stats->numcolors;\n      p[(n * 4) + 0] = r;\n      p[(n * 4) + 1] = g;\n      p[(n * 4) + 2] = b;\n      p[(n * 4) + 3] = a;\n    }\n    stats->numcolors += 1;\n    numcolors_done = stats->numcolors >= maxnumcolors;\n  }\n  *error_ref = error;\n  *numcolors_done_ref = numcolors_done;\n}\n\n",
            "calle": [
                "color_tree_add",
                "color_tree_has"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "error_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcolors_done_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const numcolors_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "stats",
                        "type": "LodePNGColorStats * const",
                        "definition": [
                            "LodePNGColorStats * const stats"
                        ]
                    },
                    {
                        "path": null,
                        "name": "tree",
                        "type": "ColorTree",
                        "definition": [
                            "ColorTree tree"
                        ]
                    },
                    {
                        "path": null,
                        "name": "maxnumcolors",
                        "type": "unsigned",
                        "definition": [
                            "unsigned maxnumcolors"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char g"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "error",
                        "type": "unsigned",
                        "definition": [
                            "unsigned error = *error_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "numcolors_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned numcolors_done = *numcolors_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p",
                        "type": "unsigned char *",
                        "definition": [
                            "unsigned char *p = stats->palette"
                        ]
                    },
                    {
                        "path": null,
                        "name": "n",
                        "type": "unsigned",
                        "definition": [
                            "unsigned n = stats->numcolors"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_helper_lodepng_compute_color_stats_3_1_2",
            "header": "",
            "params": [
                "unsigned * const alpha_done_ref",
                "LodePNGColorStats * const stats",
                "unsigned char r",
                "unsigned char g",
                "unsigned char b",
                "unsigned char a"
            ],
            "definition": "void helper_helper_helper_lodepng_compute_color_stats_3_1_2(unsigned * const alpha_done_ref, LodePNGColorStats * const stats, unsigned char r, unsigned char g, unsigned char b, unsigned char a)\n{\n  unsigned alpha_done = *alpha_done_ref;\n  unsigned matchkey = ((r == stats->key_r) && (g == stats->key_g)) && (b == stats->key_b);\n  if ((a != 255) && ((a != 0) || (stats->key && (!matchkey))))\n  {\n    stats->alpha = 1;\n    stats->key = 0;\n    alpha_done = 1;\n    if (stats->bits < 8)\n    {\n      stats->bits = 8;\n    }\n  }\n  else\n    if (((a == 0) && (!stats->alpha)) && (!stats->key))\n  {\n    stats->key = 1;\n    stats->key_r = r;\n    stats->key_g = g;\n    stats->key_b = b;\n  }\n  else\n    if (((a == 255) && stats->key) && matchkey)\n  {\n    stats->alpha = 1;\n    stats->key = 0;\n    alpha_done = 1;\n    if (stats->bits < 8)\n    {\n      stats->bits = 8;\n    }\n  }\n  *alpha_done_ref = alpha_done;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "alpha_done_ref",
                        "type": "unsigned * const",
                        "definition": [
                            "unsigned * const alpha_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "stats",
                        "type": "LodePNGColorStats * const",
                        "definition": [
                            "LodePNGColorStats * const stats"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r"
                        ]
                    },
                    {
                        "path": null,
                        "name": "g",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char g"
                        ]
                    },
                    {
                        "path": null,
                        "name": "b",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char b"
                        ]
                    },
                    {
                        "path": null,
                        "name": "a",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char a"
                        ]
                    },
                    {
                        "path": null,
                        "name": "alpha_done",
                        "type": "unsigned",
                        "definition": [
                            "unsigned alpha_done = *alpha_done_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "matchkey",
                        "type": "unsigned",
                        "definition": [
                            "unsigned matchkey = ((r == stats->key_r) && (g == stats->key_g)) && (b == stats->key_b)"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_helper_unfilterScanline_1_1_1",
            "header": "",
            "params": [
                "size_t * const i_ref",
                "size_t * const j_ref",
                "unsigned char * const recon",
                "const unsigned char * const scanline",
                "const unsigned char * const precon",
                "size_t length"
            ],
            "definition": "void helper_helper_helper_unfilterScanline_1_1_1(size_t * const i_ref, size_t * const j_ref, unsigned char * const recon, const unsigned char * const scanline, const unsigned char * const precon, size_t length)\n{\n  size_t i = *i_ref;\n  size_t j = *j_ref;\n  for (; (i + 2) < length; i += 3, j += 3)\n  {\n    unsigned char s0 = scanline[i + 0];\n    unsigned char s1 = scanline[i + 1];\n    unsigned char s2 = scanline[i + 2];\n    unsigned char r0 = recon[j + 0];\n    unsigned char r1 = recon[j + 1];\n    unsigned char r2 = recon[j + 2];\n    unsigned char p0 = precon[i + 0];\n    unsigned char p1 = precon[i + 1];\n    unsigned char p2 = precon[i + 2];\n    recon[i + 0] = s0 + ((r0 + p0) >> 1u);\n    recon[i + 1] = s1 + ((r1 + p1) >> 1u);\n    recon[i + 2] = s2 + ((r2 + p2) >> 1u);\n  }\n\n  *i_ref = i;\n  *j_ref = j;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const j_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "recon",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const recon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "scanline",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const scanline"
                        ]
                    },
                    {
                        "path": null,
                        "name": "precon",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const precon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "size_t",
                        "definition": [
                            "size_t length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "size_t",
                        "definition": [
                            "size_t j = *j_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char s0 = scanline[i + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char s1 = scanline[i + 1]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s2",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char s2 = scanline[i + 2]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r0 = recon[j + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r1 = recon[j + 1]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r2",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r2 = recon[j + 2]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char p0 = precon[i + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char p1 = precon[i + 1]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p2",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char p2 = precon[i + 2]"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_helper_unfilterScanline_1_1_2",
            "header": "",
            "params": [
                "size_t * const i_ref",
                "size_t * const j_ref",
                "unsigned char * const recon",
                "const unsigned char * const scanline",
                "const unsigned char * const precon",
                "size_t length"
            ],
            "definition": "void helper_helper_helper_unfilterScanline_1_1_2(size_t * const i_ref, size_t * const j_ref, unsigned char * const recon, const unsigned char * const scanline, const unsigned char * const precon, size_t length)\n{\n  size_t i = *i_ref;\n  size_t j = *j_ref;\n  for (; (i + 3) < length; i += 4, j += 4)\n  {\n    unsigned char s0 = scanline[i + 0];\n    unsigned char s1 = scanline[i + 1];\n    unsigned char s2 = scanline[i + 2];\n    unsigned char s3 = scanline[i + 3];\n    unsigned char r0 = recon[j + 0];\n    unsigned char r1 = recon[j + 1];\n    unsigned char r2 = recon[j + 2];\n    unsigned char r3 = recon[j + 3];\n    unsigned char p0 = precon[i + 0];\n    unsigned char p1 = precon[i + 1];\n    unsigned char p2 = precon[i + 2];\n    unsigned char p3 = precon[i + 3];\n    recon[i + 0] = s0 + ((r0 + p0) >> 1u);\n    recon[i + 1] = s1 + ((r1 + p1) >> 1u);\n    recon[i + 2] = s2 + ((r2 + p2) >> 1u);\n    recon[i + 3] = s3 + ((r3 + p3) >> 1u);\n  }\n\n  *i_ref = i;\n  *j_ref = j;\n}\n\n",
            "calle": [],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const j_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "recon",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const recon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "scanline",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const scanline"
                        ]
                    },
                    {
                        "path": null,
                        "name": "precon",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const precon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "size_t",
                        "definition": [
                            "size_t length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "size_t",
                        "definition": [
                            "size_t j = *j_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char s0 = scanline[i + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char s1 = scanline[i + 1]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s2",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char s2 = scanline[i + 2]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s3",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char s3 = scanline[i + 3]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r0 = recon[j + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r1 = recon[j + 1]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r2",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r2 = recon[j + 2]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r3",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r3 = recon[j + 3]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char p0 = precon[i + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char p1 = precon[i + 1]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p2",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char p2 = precon[i + 2]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p3",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char p3 = precon[i + 3]"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_helper_unfilterScanline_2_1_1",
            "header": "",
            "params": [
                "size_t * const i_ref",
                "size_t * const j_ref",
                "unsigned char * const recon",
                "const unsigned char * const scanline",
                "const unsigned char * const precon",
                "size_t length"
            ],
            "definition": "void helper_helper_helper_unfilterScanline_2_1_1(size_t * const i_ref, size_t * const j_ref, unsigned char * const recon, const unsigned char * const scanline, const unsigned char * const precon, size_t length)\n{\n  size_t i = *i_ref;\n  size_t j = *j_ref;\n  for (; (i + 1) < length; i += 2, j += 2)\n  {\n    unsigned char s0 = scanline[i + 0];\n    unsigned char s1 = scanline[i + 1];\n    unsigned char r0 = recon[j + 0];\n    unsigned char r1 = recon[j + 1];\n    unsigned char p0 = precon[i + 0];\n    unsigned char p1 = precon[i + 1];\n    unsigned char q0 = precon[j + 0];\n    unsigned char q1 = precon[j + 1];\n    recon[i + 0] = s0 + paethPredictor(r0, p0, q0);\n    recon[i + 1] = s1 + paethPredictor(r1, p1, q1);\n  }\n\n  *i_ref = i;\n  *j_ref = j;\n}\n\n",
            "calle": [
                "paethPredictor"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const j_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "recon",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const recon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "scanline",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const scanline"
                        ]
                    },
                    {
                        "path": null,
                        "name": "precon",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const precon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "size_t",
                        "definition": [
                            "size_t length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "size_t",
                        "definition": [
                            "size_t j = *j_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char s0 = scanline[i + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char s1 = scanline[i + 1]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r0 = recon[j + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r1 = recon[j + 1]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char p0 = precon[i + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char p1 = precon[i + 1]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "q0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char q0 = precon[j + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "q1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char q1 = precon[j + 1]"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_helper_unfilterScanline_2_1_2",
            "header": "",
            "params": [
                "size_t * const i_ref",
                "size_t * const j_ref",
                "unsigned char * const recon",
                "const unsigned char * const scanline",
                "const unsigned char * const precon",
                "size_t length"
            ],
            "definition": "void helper_helper_helper_unfilterScanline_2_1_2(size_t * const i_ref, size_t * const j_ref, unsigned char * const recon, const unsigned char * const scanline, const unsigned char * const precon, size_t length)\n{\n  size_t i = *i_ref;\n  size_t j = *j_ref;\n  for (; (i + 2) < length; i += 3, j += 3)\n  {\n    unsigned char s0 = scanline[i + 0];\n    unsigned char s1 = scanline[i + 1];\n    unsigned char s2 = scanline[i + 2];\n    unsigned char r0 = recon[j + 0];\n    unsigned char r1 = recon[j + 1];\n    unsigned char r2 = recon[j + 2];\n    unsigned char p0 = precon[i + 0];\n    unsigned char p1 = precon[i + 1];\n    unsigned char p2 = precon[i + 2];\n    unsigned char q0 = precon[j + 0];\n    unsigned char q1 = precon[j + 1];\n    unsigned char q2 = precon[j + 2];\n    recon[i + 0] = s0 + paethPredictor(r0, p0, q0);\n    recon[i + 1] = s1 + paethPredictor(r1, p1, q1);\n    recon[i + 2] = s2 + paethPredictor(r2, p2, q2);\n  }\n\n  *i_ref = i;\n  *j_ref = j;\n}\n\n",
            "calle": [
                "paethPredictor"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const j_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "recon",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const recon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "scanline",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const scanline"
                        ]
                    },
                    {
                        "path": null,
                        "name": "precon",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const precon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "size_t",
                        "definition": [
                            "size_t length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "size_t",
                        "definition": [
                            "size_t j = *j_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char s0 = scanline[i + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char s1 = scanline[i + 1]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s2",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char s2 = scanline[i + 2]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r0 = recon[j + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r1 = recon[j + 1]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r2",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r2 = recon[j + 2]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char p0 = precon[i + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char p1 = precon[i + 1]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p2",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char p2 = precon[i + 2]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "q0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char q0 = precon[j + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "q1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char q1 = precon[j + 1]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "q2",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char q2 = precon[j + 2]"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        },
        {
            "path": null,
            "name": "helper_helper_helper_unfilterScanline_2_1_3",
            "header": "",
            "params": [
                "size_t * const i_ref",
                "size_t * const j_ref",
                "unsigned char * const recon",
                "const unsigned char * const scanline",
                "const unsigned char * const precon",
                "size_t length"
            ],
            "definition": "void helper_helper_helper_unfilterScanline_2_1_3(size_t * const i_ref, size_t * const j_ref, unsigned char * const recon, const unsigned char * const scanline, const unsigned char * const precon, size_t length)\n{\n  size_t i = *i_ref;\n  size_t j = *j_ref;\n  for (; (i + 3) < length; i += 4, j += 4)\n  {\n    unsigned char s0 = scanline[i + 0];\n    unsigned char s1 = scanline[i + 1];\n    unsigned char s2 = scanline[i + 2];\n    unsigned char s3 = scanline[i + 3];\n    unsigned char r0 = recon[j + 0];\n    unsigned char r1 = recon[j + 1];\n    unsigned char r2 = recon[j + 2];\n    unsigned char r3 = recon[j + 3];\n    unsigned char p0 = precon[i + 0];\n    unsigned char p1 = precon[i + 1];\n    unsigned char p2 = precon[i + 2];\n    unsigned char p3 = precon[i + 3];\n    unsigned char q0 = precon[j + 0];\n    unsigned char q1 = precon[j + 1];\n    unsigned char q2 = precon[j + 2];\n    unsigned char q3 = precon[j + 3];\n    recon[i + 0] = s0 + paethPredictor(r0, p0, q0);\n    recon[i + 1] = s1 + paethPredictor(r1, p1, q1);\n    recon[i + 2] = s2 + paethPredictor(r2, p2, q2);\n    recon[i + 3] = s3 + paethPredictor(r3, p3, q3);\n  }\n\n  *i_ref = i;\n  *j_ref = j;\n}\n\n",
            "calle": [
                "paethPredictor"
            ],
            "inner": {
                "special_type": [],
                "global_variable": [
                    {
                        "path": null,
                        "name": "i_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j_ref",
                        "type": "size_t * const",
                        "definition": [
                            "size_t * const j_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "recon",
                        "type": "unsigned char * const",
                        "definition": [
                            "unsigned char * const recon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "scanline",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const scanline"
                        ]
                    },
                    {
                        "path": null,
                        "name": "precon",
                        "type": "const unsigned char * const",
                        "definition": [
                            "const unsigned char * const precon"
                        ]
                    },
                    {
                        "path": null,
                        "name": "length",
                        "type": "size_t",
                        "definition": [
                            "size_t length"
                        ]
                    },
                    {
                        "path": null,
                        "name": "i",
                        "type": "size_t",
                        "definition": [
                            "size_t i = *i_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "j",
                        "type": "size_t",
                        "definition": [
                            "size_t j = *j_ref"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char s0 = scanline[i + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char s1 = scanline[i + 1]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s2",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char s2 = scanline[i + 2]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "s3",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char s3 = scanline[i + 3]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r0 = recon[j + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r1 = recon[j + 1]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r2",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r2 = recon[j + 2]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "r3",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char r3 = recon[j + 3]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char p0 = precon[i + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char p1 = precon[i + 1]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p2",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char p2 = precon[i + 2]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "p3",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char p3 = precon[i + 3]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "q0",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char q0 = precon[j + 0]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "q1",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char q1 = precon[j + 1]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "q2",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char q2 = precon[j + 2]"
                        ]
                    },
                    {
                        "path": null,
                        "name": "q3",
                        "type": "unsigned char",
                        "definition": [
                            "unsigned char q3 = precon[j + 3]"
                        ]
                    }
                ],
                "function": [],
                "typedefs": []
            }
        }
    ],
    "typedefs": []
}