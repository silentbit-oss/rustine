use crate::*;

pub fn print_table() {
    println!("// This file is generated by gen_char_category_table. DO NOT EDIT IT BY HAND!\n\nstatic const unsigned short char_cat[256] = {{\n//   .0     .1     .2     .3     .4     .5     .6     .7     .8     .9     .A     .B     .C     .D     .E     .F");

    for y in 0..16 {
        print!(" ");
        for x in 0..16 {
            let offset = (y * 16) + x;
            print!(" 0x{:03x}{}", CHAR_CAT[offset], if offset == 255 { ' ' } else { ',' });
        }

        println!(" // {:01X}0 ... {:01X}F", y, y);
    }

    println!("}};\n");
}
pub fn fill(value: u16, alnum: Option<&str>, special: Option<&str>) {
    if let Some(alnum_str) = alnum {
        for c in alnum_str.chars() {
            let index = c as usize;
            unsafe {
                let char_cat_ptr = CHAR_CAT.as_ptr() as *mut u16;
                *char_cat_ptr.add(index) |= value;
            }
        }
    }

    if let Some(special_str) = special {
        for c in special_str.chars() {
            let index = c as usize;
            unsafe {
                let char_cat_ptr = CHAR_CAT.as_ptr() as *mut u16;
                *char_cat_ptr.add(index) |= value;
            }
        }
    }
}
