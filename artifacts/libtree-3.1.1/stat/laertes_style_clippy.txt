warning: unneeded `return` statement
warning: unneeded `return` statement
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `0 as *mut _` detected
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: unneeded `return` statement
warning: unneeded `return` statement
warning: the function `Some` doesn't need a mutable reference
warning: `0 as *mut _` detected
warning: returning the result of a `let` binding from a block
warning: unneeded `return` statement
warning: the function `Some` doesn't need a mutable reference
warning: unneeded `return` statement
warning: `0 as *const _` detected
warning: the function `strncmp` doesn't need a mutable reference
warning: the function `strncmp` doesn't need a mutable reference
warning: the function `strncmp` doesn't need a mutable reference
warning: the function `strncmp` doesn't need a mutable reference
warning: the function `strncmp` doesn't need a mutable reference
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: unneeded `return` statement
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: unneeded `return` statement
warning: returning the result of a `let` binding from a block
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: returning the result of a `let` binding from a block
warning: returning the result of a `let` binding from a block
warning: returning the result of a `let` binding from a block
warning: returning the result of a `let` binding from a block
warning: returning the result of a `let` binding from a block
warning: `0 as *mut _` detected
warning: unneeded `return` statement
warning: `0 as *mut _` detected
warning: unneeded `return` statement
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: unneeded `return` statement
warning: returning the result of a `let` binding from a block
warning: returning the result of a `let` binding from a block
warning: `0 as *mut _` detected
warning: unneeded `return` statement
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: `0 as *mut _` detected
warning: manual implementation of an assign operation
warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
warning: `0 as *mut _` detected
warning: this `map_or` can be simplified
